)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/client/components/flexboxLayout/flexboxLayout.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS,aAAT;EACA,YAA8D,8DAA9D;EACA,UAAU,OAAV;EACA,aAAa,QAAb;EACA,YAAY,KAAZ;;AAEF;EACE,qBAAqB,QAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,UAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AC1CF;EACE,SAAS,KAAT;EACA,MAAM,EAAN;EACA,WAAW,WAAX;EACA,aAAa,QAAb;EACA,QAA4D,oBAA5D;EACA,OAAO,KAAP;;AAEA;EACE,QAAQ,KAAR;ECPe,mBAAE,SAAF;EACH,gBAAE,SAAF;EACD,eAAE,SAAF;EACD,cAAE,SAAF;EACH,WAAE,SAAF;EAJQ,oBAAE,cAAF;EACH,iBAAE,cAAF;EACD,gBAAE,cAAF;EACD,eAAE,cAAF;EACH,YAAE,cAAF;;ADQP;EACE,QAAQ,KAAR;EACA,WAAW,QAAX;EACA,UAAU,SAAV;ECfa,mBAAE,iBAAF;EACH,gBAAE,iBAAF;EACD,eAAE,iBAAF;EACD,cAAE,iBAAF;EACH,WAAE,iBAAF;EAJQ,oBAAE,cAAF;EACH,iBAAE,cAAF;EACD,gBAAE,cAAF;EACD,eAAE,cAAF;EACH,YAAE,cAAF;EDcL,OAAO,KAAP;;AAEA;ECpBa,mBAAE,eAAF;EACH,gBAAE,eAAF;EACD,eAAE,eAAF;EACD,cAAE,eAAF;EACH,WAAE,eAAF;;ADmBT;EAEE,MAAM,EAAN;EACA,aAAe,OAAf;EACA,WAAW,MAAX;EACA,OAAO,EAAP;;AEqBA;EACc,cAAwD,kBAAxD;;AAMN;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AADd;EACc,cAAwC,kBAAxC;;AF3BtB;EACE,aAAa,EAAb;;AAEJ;EACE,MAAM,EAAN;EACA,QAAQ,KAAR;EACA,OAAO,EAAP;EACA,UAAU,OAAV;ECrCe,oBAAE,cAAF;EACH,iBAAE,cAAF;EACD,gBAAE,cAAF;EACD,eAAE,cAAF;EACH,YAAE,cAAF;EDmCP,OAAO,KAAP;;AAEF;EACE,MAAM,EAAN;EACA,cAAgB,OAAhB;EACA,WAAW,MAAX;EACA,OAAO,EAAP;EACA,UAAU,SAAV;;AAEA;EACE,cAAmD,SAAnD;EACA,WAAsC,QAAtC;;AAEF;EACE,cAAiD,OAAjD;EACA,WAAsC,MAAtC;;AAEF;EACE,cAAc,EAAd;;AAEJ;EAEE,SAAS,UAAT;EACA,YAAY,OAAZ;;AEbA;EACc,eAAwD,kBAAxD;;AAMN;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC;;AADd;EACc,eAAwC,kBAAxC","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@require '{ohif:design}/app'\n\n$lesionsSidebarMenuWidth = 450px\n\n.viewerSection\n  display: flex\n  flex: 1\n  flex-flow: row nowrap\n  align-items: stretch\n  height: 'calc(100vh - %s)' % ($toolbarHeight + $topBarHeight)\n  width: 100%\n\n  .sidebarMenu\n    height: 100%\n    // required transformation to make inner fixed elements relative to this one\n    transform(scale(1))\n    transition($sidebarTransition)\n\n    .sidebar-option\n      height: 100%\n      max-width: inherit\n      position: absolute\n      transform(translateX(100%))\n      transition($sidebarTransition)\n      width: 100%\n\n      &.active\n        transform(translateX(0%))\n\n  .sidebar-left\n    theme('border-right', '%s solid $uiBorderColor' % $uiBorderThickness)\n    flex: 1\n    margin-left: - $studiesSidebarMenuWidth\n    max-width: $studiesSidebarMenuWidth\n    order: 1\n\n    &.sidebar-open\n      margin-left: 0\n\n  .mainContent\n    flex: 1\n    height: 100%\n    order: 2\n    overflow: hidden\n    transition($sidebarTransition)\n    width: 100%\n\n  .sidebar-right\n    flex: 1\n    margin-right: - $lesionsSidebarMenuWidth\n    max-width: $lesionsSidebarMenuWidth\n    order: 3\n    position: relative\n\n    &[data-timepoints=\"3\"]\n      margin-right: - ($lesionsSidebarMenuWidth + 135.5px)\n      max-width: $lesionsSidebarMenuWidth + 135.5px\n\n    &[data-timepoints=\"4\"]\n      margin-right: - ($lesionsSidebarMenuWidth + 270px)\n      max-width: $lesionsSidebarMenuWidth + 270px\n\n    &.sidebar-open\n      margin-right: 0\n\n  .studiesListedChanger\n    theme('border-bottom', '%s solid $uiBorderColor' % $uiBorderThickness)\n    padding: 20px 10px\n    text-align: center\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n"]}