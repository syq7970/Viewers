)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/stageSortable/stageSortable.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl"],"names":[],"mappings":"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","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@import \"{ohif:design}/app\"\n\n#stageSortingContainer\n  padding: 0 20px\n\n  #stageSortable\n    .sortable-item\n      padding: 3px\n\n      span\n        theme('color', '$defaultColor')\n        cursor: pointer\n\n        &:hover\n          theme('color', '$hoverColor')\n        \n        &.active\n          theme('color', '$activeColor')\n\n    .sortable-handle\n      cursor: move\n      cursor: -webkit-grabbing\n      width: 15px\n      height: 15px\n      margin: 0 5px\n      filter: invert(100%)\n      -webkit-filter: invert(100%)\n      background-image: unquote(\"url(/packages/hangingprotocols/assets/dots.svg)\")\n\n    .sortable.target\n      flex: 1 1 auto\n      margin-left: 1em\n\n    .sortable-ghost\n      opacity: 0.6\n\n    .deleteStage\n      cursor: pointer\n      theme('color', '$defaultColor')\n      transition(all 0.1s ease)\n      \n      &:hover\n        theme('color', '$hoverColor')\n        \n      &:active  \n        theme('color', '$activeColor')\n\n  .addStage\n    margin: 10px 0\n    text-align: center\n    theme('color', '$defaultColor')\n\n    #addStage\n      transition(all 0.1s ease)\n      \n      &:hover\n        theme('color', '$hoverColor')\n        \n      &:active  \n        theme('color', '$activeColor')\n\n  .moveStageButtons\n    margin: 10px 0\n    text-align: center\n\n    a\n      theme('color', '$defaultColor')\n      cursor: pointer\n      text-decoration: none\n      transition(all 0.1s ease)\n      \n      &:hover\n        theme('color', '$hoverColor')\n        \n      &:active  \n        theme('color', '$activeColor')\n\n      &[disabled=\"true\"]\n        opacity: 0.7\n        cursor: disabled\n        pointer-events: none\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n"]}