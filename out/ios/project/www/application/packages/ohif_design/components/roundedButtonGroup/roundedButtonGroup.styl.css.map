)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/packages/ohif:design/components/roundedButtonGroup/roundedButtonGroup.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl"],"names":[],"mappings":"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","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@import \"{ohif:design}/app\"\n\n$height = 25px\n\n.roundedButtonGroup\n  position: relative\n  z-index: 0\n\n  .roundedButtonWrapper\n    cursor: pointer\n    display: inline-block\n    float: left\n    margin-left: -2px\n    text-decoration: none\n    text-align: center\n\n    &.disabled\n      opacity: 0.5\n      cursor: not-allowed\n\n    .roundedButton\n      align-items: center\n      theme('background-color', '$uiGrayDark')\n      theme('border', '2px solid $uiBorderColorDark')\n      theme('color', '$textSecondaryColor')\n      display: flex\n      font-size: 11px\n      font-weight: 500\n      justify-content: center\n      height: $height\n      line-height: $height\n      padding: 0 22px\n      position: relative\n      text-transform: uppercase\n      transition: transition($sidebarTransition)\n      z-index: 1\n\n      svg\n        theme('fill', '$defaultColor')\n        theme('stroke', '$defaultColor')\n\n      svg\n      span\n        margin: 0 2px\n\n      i\n        line-height: 15px\n        font-size: 15px\n\n    .bottomLabel\n      theme('color', '$textSecondaryColor')\n      font-size: 12px\n      font-weight: 500\n      line-height: 12px\n      margin-top: 8px\n\n    &:first-child\n      margin-left: 0\n      .roundedButton\n        border-bottom-left-radius: $height\n        border-top-left-radius: $height\n\n    &:last-child .roundedButton\n      border-bottom-right-radius: $height\n      border-top-right-radius: $height\n\n    &:hover .roundedButton\n      theme('color', '$uiGrayDark')\n      theme('background-color', '$boxBackgroundColor')\n\n    &.active .roundedButton\n      theme('background-color', '$activeColor')\n      theme('border-color', '$uiBorderColorActive')\n      theme('color', '$uiGrayDark')\n      z-index: 2\n\n    &:hover .roundedButton\n    &.active .roundedButton\n      svg\n        theme('fill', '$uiGrayDark')\n        theme('stroke', '$uiGrayDark')\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n"]}