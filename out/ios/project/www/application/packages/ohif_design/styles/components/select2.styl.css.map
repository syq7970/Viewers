)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/packages/ohif:design/styles/components/select2.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS,aAAT;EACA,YAA8D,8DAA9D;EACA,UAAU,OAAV;EACA,aAAa,QAAb;EACA,YAAY,KAAZ;;AAEF;EACE,qBAAqB,QAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,UAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;AAEF;EACE,qBAAqB,WAArB;EACA,OAAO,KAAP;EACA,QAAQ,KAAR;;ACpCF;EACE,aAAa,OAAb;;AAII;;EACE,kBAAkB,QAAlB;;AAEN;EACE,QAAQ,EAAR;ECbe,uBAAE,IAAF;EACH,oBAAE,IAAF;EACD,mBAAE,IAAF;EACD,kBAAE,IAAF;EACH,eAAE,IAAF;;ADYP;AAAG;AAAkC;EACnC,QAAQ,KAAR;;AAEJ;EACE,aAAa,KAAb;EACA,cAAc,KAAd;;AAEF;EAEE,kBAAkB,QAAlB;ECzBe,iCAAE,IAAF;EACH,8BAAE,IAAF;EACD,6BAAE,IAAF;EACD,4BAAE,IAAF;EACH,yBAAE,IAAF;EAJQ,oCAAE,IAAF;EACH,iCAAE,IAAF;EACD,gCAAE,IAAF;EACD,+BAAE,IAAF;EACH,4BAAE,IAAF;EDwBP,OAAO,EAAP;EACA,KAAK,EAAL;EC7Be,oBAAE,2BAAF;EACH,iBAAE,2BAAF;EACD,gBAAE,2BAAF;EACD,eAAE,2BAAF;EACH,YAAE,2BAAF;ED2BP,OAAO,KAAP;;AEkBA;EACc,aAAwD,eAAxD;;AAMN;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AADd;EACc,aAAwC,eAAxC;;AFxBtB;EACE,SAAS,KAAT;;AAEJ;EACE,kBAAkB,QAAlB;EACA,YAAY,KAAZ;;AAEA;EACE,OAAO,QAAP;;ACEJ;EACE,OAAO,QAAP;;AACF;EACE,OAAO,QAAP;;AACF;EACE,OAAO,QAAP;;AACF;EACE,OAAO,QAAP;;ADNA;EAEE,kBAAkB,KAAlB;EC9Ca,uBAAE,IAAF;EACH,oBAAE,IAAF;EACD,mBAAE,IAAF;EACD,kBAAE,IAAF;EACH,eAAE,IAAF;ED4CL,OAAO,QAAP;EACA,WAAW,KAAX;EACA,aAAa,KAAb;EACA,YAAY,IAAZ;;AEFF;EACc,cAAwD,QAAxD;;AAMN;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AADd;EACc,cAAwC,QAAxC;;AFJtB;EACE,OAAO,QAAP;EACA,OAAO,MAAP;EACA,WAAW,KAAX;EACA,aAAa,IAAb;EACA,aAAa,KAAb;EACA,aAAa,IAAb;EACA,cAAc,EAAd;;AAEF;EACE,SAAS,KAAT","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@import \"{ohif:design}/app\"\n\n// TODO: [design] can't we use colors that are already in common pallete?\n$gray1 = #C3C3C3\n$gray2 = #B6B6B6\n$gray3 = #A6A6A6\n$gray4 = #676767\n$gray5 = #3E3E3E\n$borderRadius = 2px\n\nspan.select2.select2-container\n  font-weight: normal\n\n  span.select2-selection\n    &:hover, &:focus\n      span.select2-selection__arrow\n        background-color: $gray3\n\n  span.select2-selection\n    border: 0\n    border-radius: $borderRadius\n\n    &, span.select2-selection__rendered, span.select2-selection__arrow\n      height: 30px\n\n  span.select2-selection__rendered\n    line-height: 34px\n    padding-left: 11px\n\n  span.select2-selection__arrow\n    theme('border-left', '1px solid $primaryBackgroundColor')\n    background-color: $gray1\n    border-top-right-radius: $borderRadius\n    border-bottom-right-radius: $borderRadius\n    right: 0\n    top: 0\n    transition(background-color 0.3s ease)\n    width: 20px\n\n    b\n      display: none\n\n  span.select2-selection--multiple\n    background-color: $gray2\n    min-height: 30px\n\n    input.select2-search__field\n      color: $gray5\n      placeholder-color($gray5)\n\n    li.select2-selection__choice\n      theme('border-color', '$uiGray')\n      background-color: #FFF\n      border-radius: $borderRadius\n      color: $gray5\n      font-size: 12px\n      line-height: 22px\n      margin-top: 3px\n\n    span.select2-selection__choice__remove\n      color: $gray4\n      float: right\n      font-size: 20px\n      font-weight: 300\n      line-height: 20px\n      margin-left: 6px\n      margin-right: 0\n\n    span.select2-selection__clear\n      display: none\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n"]}