)]}'
{"version":3,"sources":["meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/basic/aboutModal/aboutModal.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/studyBrowser/studyBrowser/studyBrowser.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/studyBrowser/thumbnailEntry/thumbnailEntry.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/studyBrowser/imageThumbnail/imageThumbnail.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/imageViewerViewport/imageViewerViewport.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/gridLayout/gridLayout.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/loadingIndicator/loadingIndicator.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/annotationDialogs/annotationDialogs.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/viewportOverlay/viewportOverlay.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/viewerMain/viewerMain.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/toolContextMenu/toolContextMenu.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/imageControls/imageControls.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/layoutButton/layoutButton.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/layoutChooser/layoutChooser.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/cineDialog/cineDialog.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/downloadDialog/downloadDialog.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/toolbarSectionButton/toolbarSectionButton.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/toolbarSectionTools/toolbarSectionTools.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/confirmDeleteDialog/confirmDeleteDialog.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/textMarkerDialogs/textMarkerDialogs.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/seriesQuickSwitch/seriesQuickSwitch.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/studySeriesQuickSwitch/studySeriesQuickSwitch.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/studyTimepointBrowser/studyTimepoint.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/studyTimepointBrowser/studyTimepointBrowser.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/studyTimepointBrowser/studyTimepointStudy.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/components/viewer/windowLevelPresets/form.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/collections.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/index.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/DICOMTagDescriptions.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/StackManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/WLPresets.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/annotateTextUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/createStacks.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/crosshairsSynchronizers.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/debugReactivity.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/dialogUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/displayReferenceLines.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getElementIfNotEmpty.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getFrameOfReferenceUID.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getImageId.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getImageIdForImagePath.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getStackDataIfNotEmpty.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getStudyMetadata.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getWADORSImageId.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/getWADORSImageUrl.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/hotkeyUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/imageViewerViewportData.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/instanceClassSpecificViewport.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/isImage.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/panelNavigation.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/prepareViewerData.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/renderViewer.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/setActiveViewport.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/setFocusToActiveViewport.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/sopClassDictionary.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/sortStudy.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/sortingManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/switchToImageByIndex.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/switchToImageRelative.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/textMarkerUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/thumbnailDragHandlers.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/toolManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/unloadHandlers.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/updateAllViewports.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/updateCrosshairsSynchronizer.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/updateMetaDataManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/updateOrientationMarkers.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/viewportOverlayUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/viewportUtils.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/ImageSet.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/LayoutManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/OHIFError.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/ResizeViewportManager.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/StackImagePositionOffsetSynchronizer.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/StudyLoadingListener.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/StudyMetadataSource.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/StudyPrefetcher.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/TypeSafeCollection.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/InstanceMetadata.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/Metadata.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/SeriesMetadata.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/StudyMetadata.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/StudySummary.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/classes/metadata/WadoRsMetaDataBuilder.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/capitalizeFirstLetter.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/formatDA.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/formatJSDate.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/formatNumberPrecision.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/formatPN.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/formatTM.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/getUsername.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/ifTypeIs.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/inc.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/index.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/isDisplaySetActive.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/isTouchDevice.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/jsDateFromNow.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/objectEach.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/objectToPairs.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/prettyPrintStringify.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/sorting.js","meteor://ğŸ’»app/packages/ohif:viewerbase/client/lib/helpers/studyThumbnails.js","meteor://ğŸ’»app/packages/ohif:viewerbase/main.js","meteor://ğŸ’»app/packages/ohif:viewerbase/namespace.js"],"names":["Template","aboutModal","helpers","githubUrl","module","watch","require","v","OHIF","studyBrowser","studies","viewer","Studies","findAllBy","selected","_","Session","thumbnailDragHandlers","thumbnailEntry","onCreated","instance","isIndexUndefined","isUndefined","data","viewportIndex","isDragAndDrop","uiSettings","leftSidebarDragAndDrop","events","event","thumbnail","stack","button","thumbnailDragStartHandler","thumbnailDragHandler","thumbnailDragEndHandler","get","viewerbase","layoutManager","rerenderViewportWithNewDisplaySet","viewportCount","getNumberOfViewports","draggableClass","instanceNumber","isMultiFrame","firstImage","images","Meteor","Tracker","cornerstone","imageThumbnail","getThumbnailImageId","settingPath","useMiddleFrame","utils","ObjectPath","settings","lastIndex","numImageFrames","length","imageIndex","Math","floor","imageInstance","undefined","getImageId","onRendered","$parent","$","$loading","find","$loadingError","$element","element","refreshImage","remove","enable","renderer","css","loadSuccess","getEnabledElement","error","displayImage","image","one","eventData","originalEvent","detail","enabledElement","imageElement","document","createElement","classList","add","dataUrl","canvas","toDataURL","src","disable","e","append","loadError","imageId","loadAndCacheImage","then","autorun","currentStudy","dep","depend","currentData","afterFlush","onDestroyed","percentComplete","encodedImageId","string","encodeId","stackPercentComplete","displaySetInstanceUid","progress","showStackLoadingProgressBar","cornerstoneTools","StackManager","setActiveViewport","imageViewerViewportData","updateCrosshairsSynchronizer","toolManager","updateOrientationMarkers","getInstanceClassDefaultViewport","OHIFError","allCornerstoneEvents","loadDisplaySetIntoViewport","templateData","log","info","study","displaySet","warn","index","viewportData","loadedSeriesData","findOrCreateStack","isClip","frameRate","cine","framesPerSecond","parseFloat","set","random","imageIds","currentImageIdIndex","window","ViewportLoading","options","endLoadingHandler","loadHandlerManager","getEndLoadHandler","errorLoadingHandler","getErrorLoadingHandler","viewport","getViewport","studyInstanceUid","seriesInstanceUid","imagePromise","metadataProvider","isUpdateMetadataDefined","updateMetadata","callbacks","before","getDefaultViewport","instanceClassViewport","fitToWindow","resize","siblings","hide","show","addStackStateManager","clearToolState","addToolState","multiframeMetadata","getDataProperty","fps","averageFrameRate","cineToolData","loop","isMultiframeImage","playClip","mouseInput","touchInput","mouseWheelInput","keyboardInput","activeTool","getActiveTool","setActiveTool","onImageRendered","removeEventListener","addEventListener","onNewImage","target","toolData","getToolState","imageIdIndex","indexOf","onStackScroll","sendActivationTrigger","currentTarget","focus","activeViewportIndex","customEvent","Event","type","trigger","onMouseEnter","closest","forEach","eventType","off","on","imagePlane","metaData","frameOfReferenceUID","updateImageSynchronizer","refLinesEnabled","referenceLines","tool","renderedCallback","updateSession","after","setDisplaySet","displaySets","sortingManager","getDisplaySets","setDisplaySets","forEachDisplaySet","stackManager","makeAndAddStack","every","startup","configureLoadProcess","imageViewerViewport","activeViewport","extendData","findBy","doubleClickHandler","$viewports","isZoomed","toggleEnlargement","viewportIndexToZoom","zoomedViewportIndex","doubleClickEvents","hasClass","stackPrefetchData","stackPrefetch","stopClip","TOP_CLASS","BOTTOM_CLASS","MIDDLE_CLASS","gridLayout","height","rows","width","columns","getClass","actualRow","viewports","numViewports","numViewportsWithData","difference","i","push","slice","setStartLoadHandler","startLoadingHandler","setEndLoadHandler","doneLoadingHandler","setErrorLoadingHandler","loadHandlerTimeout","clearTimeout","setTimeout","console","elem","not","addClass","loadIndicatorDelay","removeClass","source","errorLoadingIndicator","errorDetails","network","hasOwnProperty","text","loadingIndicator","annotationDialogs","dialogIds","dialog","id","draggable","dialogPolyfill","registerDialog","viewportOverlayUtils","getElementIfNotEmpty","getStackDataIfNotEmpty","viewportOverlay","getImageIndex","wwwc","voi","windowWidth","toFixed","windowCenter","zoom","scale","imageDimensions","getImage","patientName","getPatient","call","patientId","patientBirthDate","patientSex","studyDate","getStudy","studyTime","studyDescription","seriesDescription","getSeries","frameTime","getInstance","seriesNumber","thickness","location","sliceLocation","tablePosition","spacingBetweenSlices","compression","lossyImageCompression","lossyImageCompressionRatio","compressionMethod","lossyImageCompressionMethod","compressionRatio","tagDisplayLeftOnly","getTagDisplay","tagDisplayRightOnly","tagDisplaySpecified","imageNumber","numImages","prior","viewportStudies","all","viewportStudiesArray","sortBy","formatDateTime","oldestStudy","unloadHandlers","ResizeViewportManager","LayoutManager","StudyPrefetcher","StudyLoadingListener","viewerMain","getResizeHandler","beforeUnload","parentElement","studyPrefetcher","studyLoadingListener","clear","addStudies","setStudies","destroy","ProtocolEngine","clearStacks","removeAll","StudyMetadataList","toolTypes","TypeToLabelMap","simpleAngle","probe","ellipticalRoi","rectangleRoi","arrowAnnotate","dropdownItems","actionType","action","nearbyToolData","removeToolState","toolType","updateImage","getTypeText","message","createDropdown","isTouchEvent","getNearbyToolData","currentPoints","item","params","ui","showDropdown","menuClasses","which","switchToImageByIndex","slideTimeoutTime","slideTimeout","imageControls","$slider","$viewport","handleResize","throttle","viewportHeight","keys","DOWN","UP","commands","run","preventDefault","newActiveElement","parents","newImageIdIndex","parseInt","val","viewportUtils","layoutButton","$button","$dropdown","top","offset","outerHeight","left","toggleDialog","layoutChooser","highlightCells","cells","currentCell","table","rowIndex","columnIndex","row","j","cell","refreshHighlights","layoutProps","eq","children","$currentCell","layoutTemplateName","updateViewports","SimpleSchema","switchToImageRelative","cineDialog","schema","intervalId","Number","optional","Boolean","label","defaultValue","min","max","updateFramerate","rate","getActiveViewportElement","playClipData","api","displaySetPrevious","moveDisplaySets","displaySetNext","cineToggle","toggleCinePlay","cineFirst","cineLast","cinePrevious","cineNext","cineSlowDown","newValue","cineSpeedUp","extend","elementComponent","value","setResizeHandler","handler","origHandler","onresize","origWindowResizeHandler","setOptimalPosition","$viewer","$toolbarElement","$cineDialog","outerWidth","cineDialogSize","topLeftCoords","toolbarRect","cineDialogCoords","$dialog","singleRowLayout","displayEchoUltrasoundWorkflow","defaultElementCursor","bounded","$controls","stopPropagation","is","isPlaying","framerate","displaySetDisabled","isNext","canMoveDisplaySets","buttonDisabled","hasMultipleFrames","getClassNames","baseClass","style","ReactiveVar","getImageDownloadDialogAnnotationTools","imageDownloadDialog","name","String","allowedValues","valuesLabels","showAnnotations","quality","changeObserver","Dependency","keepAspect","lastImage","getConfirmCallback","downloadImage","$viewportElement","viewportElement","$viewportPreview","viewportPreview","downloadCanvas","form","setElementSize","size","toggleAnnotations","toggle","annotationTools","updateViewportPreview","formData","multiplier","link","download","href","createEvent","initMouseEvent","dispatchEvent","fireEvent","Object","assign","translation","x","y","loadImage","setViewport","currentState","changed","newWidth","newHeight","round","showQuality","toolbarSectionButton","isActive","last","subTools","currentId","isCurrentTool","activeToolId","isSubTool","findWhere","activeCommandButtons","isActiveCommandButton","active","getActiveToolSubProperty","propertyName","defaultProperty","subTool","lastCommand","computation","firstRun","flashButton","first","$parentButton","activeClass","svgLink","isFunction","iconClasses","disableButton","isCommandDisabled","isDisabled","isFunctionDisabled","disableFunction","toolbarSectionTools","$target","isExpanded","toggleClass","$box","transitionendHandler","boxWidth","start","bodyWidth","body","end","diff","defer","$focused","$expandable","focusInside","dialogUtils","ESC","ENTER","confirmDeleteDialog","closeHandler","keyPressAllowed","textMarkerDialogs","config","textMarker","getConfiguration","current","ascending","currentIndex","markers","nextMarker","toolStateManager","globalImageIdSpecificToolStateManager","toolState","defaultTool","getDefaultTool","getElementById","close","optionsDialog","relabelDialog","select2","FastClick","attach","$customSelects","templateResult","result","container","className","placeholder","minimumResultsForSearch","theme","each","el","$container","seriesQuickSwitch","getViewportData","lastStudy","observer","getElementByIndex","shallDisplay","displaySeriesQuickSwitch","side","seriesItems","items","class","studyBrowserTemplate","quickSwitchStudyBrowserTemplate","$switch","$seriesBrowser","$seriesQuickSwitch","isRight","switchOffsetLeft","switchOuterWidth","browserWidth","$quickSwitch","stop","animate","scrollTop","studySeriesQuickSwitch","checkScrollArea","scrollHeight","offsetHeight","matrix","translateY","match","scrollAreaElement","isMac","navigator","appVersion","studyTimepoint","isUnassociatedStudy","studyInstanceUids","$studies","$wrapper","$timepoint","studiesVisible","$selection","selection","$studiesTarget","isQuickSwitch","$thumbnails","studyTimepointBrowser","timepointViewType","showAdditionalTimepoints","getCurrentStudy","getStudies","timepoint","map","query","loadedStudy","notYetLoaded","studylist","collections","findOne","activeStudiesUids","refreshActiveStudies","shallShowViewType","timepointList","viewTypeButtonGroupData","hasAdditionalTimepoints","timepointApi","allTimepoints","timepoints","key","currentTimepoint","latestDate","getTime","modalitiesSummary","modalities","modality","count","join","studyTimepointStudy","loading","studyMetadata","getStudyMetadata","firstInstance","getFirstInstance","getRawValue","getStudyElement","isGlobal","selector","$browser","select","$study","selectionChanged","initializeStudyWrapper","studyData","seriesList","alreadyLoaded","retrieveStudyMetadata","insert","catch","trace","isLoading","replace","modalityStyle","numModalities","split","lineHeight","ceil","windowLevelPresetsForm","wlPresets","save","definitions","promise","store","notifications","success","resetDefaults","dialogOptions","title","showDialog","getPresetsInputInformationList","toArray","TypeSafeCollection","subscribe","Viewerbase","getFrameOfReferenceUID","getImageIdForImagePath","setFocusToActiveViewport","getWADORSImageId","updateAllViewports","sortStudy","updateMetaDataManager","isImage","setInstanceClassDefaultViewportFunction","displayReferenceLines","panelNavigation","prepareViewerData","renderViewer","WLPresets","hotkeyUtils","crosshairsSynchronizers","annotateTextUtils","textMarkerUtils","createStacks","sopClassDictionary","DICOMTagDescriptions","ImageSet","StackLoadingListener","DICOMFileLoadingListener","StudyMetadata","SeriesMetadata","InstanceMetadata","StudySummary","StackImagePositionOffsetSynchronizer","StudyMetadataSource","metadata","export","NUMBER","STRING","REGEX_TAG","create","prototype","_descriptions","configurable","enumerable","writable","tagNumberToString","tag","isValidTagNumber","toString","substr","isValidTag","test","description","init","descriptionMap","_hasOwn","keyword","entry","freeze","currentEntry","initialTagDescriptionMap","x00020000","x00020001","x00020002","x00020003","x00020010","x00020012","x00020013","x00020016","x00020100","x00020102","x00041130","x00041141","x00041142","x00041200","x00041202","x00041212","x00041220","x00041400","x00041410","x00041420","x00041430","x00041432","x00041500","x00041504","x00041510","x00041511","x00041512","x0004151a","x00041600","x00080000","x00080001","x00080005","x00080006","x00080008","x00080010","x00080012","x00080013","x00080014","x00080016","x00080018","x0008001a","x0008001b","x00080020","x00080021","x00080022","x00080023","x00080024","x00080025","x0008002a","x00080030","x00080031","x00080032","x00080033","x00080034","x00080035","x00080040","x00080041","x00080042","x00080050","x00080052","x00080054","x00080056","x00080058","x00080060","x00080061","x00080062","x00080064","x00080068","x00080070","x00080080","x00080081","x00080082","x00080090","x00080092","x00080094","x00080096","x00080100","x00080102","x00080103","x00080104","x00080105","x00080106","x00080107","x0008010b","x0008010c","x0008010d","x0008010f","x00080110","x00080112","x00080114","x00080115","x00080116","x00080117","x00080201","x00081000","x00081010","x00081030","x00081032","x0008103e","x00081040","x00081048","x00081049","x00081050","x00081052","x00081060","x00081062","x00081070","x00081072","x00081080","x00081084","x00081090","x00081100","x00081110","x00081111","x00081115","x00081120","x00081125","x00081130","x0008113a","x00081140","x00081145","x0008114a","x00081150","x00081155","x0008115a","x00081160","x00081161","x00081162","x00081163","x00081164","x00081195","x00081197","x00081198","x00081199","x00081200","x00081250","x00082110","x00082111","x00082112","x00082120","x00082122","x00082124","x00082127","x00082128","x00082129","x0008212a","x00082130","x00082132","x00082133","x00082134","x00082135","x00082142","x00082143","x00082144","x00082200","x00082204","x00082208","x00082218","x00082220","x00082228","x00082229","x00082230","x00082240","x00082242","x00082244","x00082246","x00082253","x00082255","x00082256","x00082257","x00083001","x00083010","x00084000","x00089007","x00089092","x00089121","x00089123","x00089124","x00089154","x00089205","x00089206","x00089207","x00089208","x00089209","x00089215","x00089237","x00089410","x00089458","x00089459","x00089460","x00100000","x00100010","x00100020","x00100021","x00100022","x00100030","x00100032","x00100040","x00100050","x00100101","x00100102","x00101000","x00101001","x00101002","x00101005","x00101010","x00101020","x00101030","x00101040","x00101050","x00101060","x00101080","x00101081","x00101090","x00102000","x00102110","x00102150","x00102152","x00102154","x00102160","x00102180","x001021a0","x001021b0","x001021c0","x001021d0","x001021f0","x00102201","x00102202","x00102203","x00102210","x00102292","x00102293","x00102294","x00102295","x00102296","x00102297","x00102298","x00102299","x00104000","x00109431","x00111010","x00120010","x00120020","x00120021","x00120030","x00120031","x00120040","x00120042","x00120050","x00120051","x00120060","x00120062","x00120063","x00120064","x00120071","x00120072","x00120084","x00120085","x00180000","x00180010","x00180012","x00180014","x00180015","x00180020","x00180021","x00180022","x00180023","x00180024","x00180025","x00180026","x00180027","x00180028","x00180029","x0018002a","x00180030","x00180031","x00180032","x00180033","x00180034","x00180035","x00180036","x00180037","x00180038","x00180039","x0018003a","x00180040","x00180042","x00180050","x00180060","x00180070","x00180071","x00180072","x00180073","x00180074","x00180075","x00180080","x00180081","x00180082","x00180083","x00180084","x00180085","x00180086","x00180087","x00180088","x00180089","x00180090","x00180091","x00180093","x00180094","x00180095","x00181000","x00181002","x00181003","x00181004","x00181005","x00181006","x00181007","x00181008","x00181010","x00181011","x00181012","x00181014","x00181016","x00181017","x00181018","x00181019","x0018101a","x0018101b","x00181020","x00181022","x00181023","x00181030","x00181040","x00181041","x00181042","x00181043","x00181044","x00181045","x00181046","x00181047","x00181048","x00181049","x00181050","x00181060","x00181061","x00181062","x00181063","x00181064","x00181065","x00181066","x00181067","x00181068","x00181069","x0018106a","x0018106c","x0018106e","x00181070","x00181071","x00181072","x00181073","x00181074","x00181075","x00181076","x00181077","x00181078","x00181079","x00181080","x00181081","x00181082","x00181083","x00181084","x00181085","x00181086","x00181088","x00181090","x00181094","x00181100","x00181110","x00181111","x00181114","x00181120","x00181121","x00181130","x00181131","x00181134","x00181135","x00181136","x00181137","x00181138","x0018113a","x00181140","x00181141","x00181142","x00181143","x00181144","x00181145","x00181146","x00181147","x00181149","x00181150","x00181151","x00181152","x00181153","x00181154","x00181155","x00181156","x0018115a","x0018115e","x00181160","x00181161","x00181162","x00181164","x00181166","x00181170","x00181180","x00181181","x00181182","x00181183","x00181184","x00181190","x00181191","x001811a0","x001811a2","x00181200","x00181201","x00181210","x00181240","x00181242","x00181243","x00181244","x00181250","x00181251","x00181260","x00181261","x00181300","x00181301","x00181302","x00181310","x00181312","x00181314","x00181315","x00181316","x00181318","x00181400","x00181401","x00181402","x00181403","x00181404","x00181405","x00181450","x00181460","x00181470","x00181480","x00181490","x00181491","x00181495","x00181500","x00181508","x00181510","x00181511","x00181520","x00181521","x00181530","x00181531","x00181600","x00181602","x00181604","x00181606","x00181608","x00181610","x00181612","x00181620","x00181622","x00181623","x00181624","x00181700","x00181702","x00181704","x00181706","x00181708","x00181710","x00181712","x00181720","x00181800","x00181801","x00181802","x00181803","x00182001","x00182002","x00182003","x00182004","x00182005","x00182006","x00182010","x00182020","x00182030","x00183100","x00183101","x00183102","x00183103","x00183104","x00183105","x00184000","x00185000","x00185010","x00185012","x00185020","x00185021","x00185022","x00185024","x00185026","x00185027","x00185028","x00185029","x00185030","x00185040","x00185050","x00185100","x00185101","x00185104","x00185210","x00185212","x00186000","x00186011","x00186012","x00186014","x00186016","x00186018","x0018601a","x0018601c","x0018601e","x00186020","x00186022","x00186024","x00186026","x00186028","x0018602a","x0018602c","x0018602e","x00186030","x00186031","x00186032","x00186034","x00186036","x00186038","x00186039","x0018603a","x0018603b","x0018603c","x0018603d","x0018603e","x0018603f","x00186040","x00186041","x00186042","x00186043","x00186044","x00186046","x00186048","x0018604a","x0018604c","x0018604e","x00186050","x00186052","x00186054","x00186056","x00186058","x0018605a","x00186060","x00187000","x00187001","x00187004","x00187005","x00187006","x00187008","x0018700a","x0018700c","x0018700e","x00187010","x00187011","x00187012","x00187014","x00187016","x0018701a","x00187020","x00187022","x00187024","x00187026","x00187028","x0018702a","x0018702b","x00187030","x00187032","x00187034","x00187040","x00187041","x00187042","x00187044","x00187046","x00187048","x0018704c","x00187050","x00187052","x00187054","x00187060","x00187062","x00187064","x00187065","x00188150","x00188151","x00189004","x00189005","x00189006","x00189008","x00189009","x00189010","x00189011","x00189012","x00189014","x00189015","x00189016","x00189017","x00189018","x00189019","x00189020","x00189021","x00189022","x00189024","x00189025","x00189026","x00189027","x00189028","x00189029","x00189030","x00189032","x00189033","x00189034","x00189035","x00189036","x00189037","x00189041","x00189042","x00189043","x00189044","x00189045","x00189046","x00189047","x00189048","x00189049","x00189050","x00189051","x00189052","x00189053","x00189054","x00189058","x00189059","x00189060","x00189061","x00189062","x00189063","x00189064","x00189065","x00189066","x00189067","x00189069","x00189070","x00189073","x00189074","x00189075","x00189076","x00189077","x00189078","x00189079","x00189080","x00189081","x00189082","x00189083","x00189084","x00189085","x00189087","x00189089","x00189090","x00189091","x00189093","x00189094","x00189095","x00189096","x00189098","x00189100","x00189101","x00189103","x00189104","x00189105","x00189106","x00189107","x00189112","x00189114","x00189115","x00189117","x00189118","x00189119","x00189125","x00189126","x00189127","x00189147","x00189151","x00189152","x00189155","x00189159","x00189166","x00189168","x00189169","x00189170","x00189171","x00189172","x00189173","x00189174","x00189175","x00189176","x00189177","x00189178","x00189179","x00189180","x00189181","x00189182","x00189183","x00189184","x00189185","x00189186","x00189195","x00189196","x00189197","x00189198","x00189199","x00189200","x00189214","x00189217","x00189218","x00189219","x00189220","x00189226","x00189227","x00189231","x00189232","x00189234","x00189236","x00189239","x00189240","x00189241","x00189295","x00189296","x00189301","x00189302","x00189303","x00189304","x00189305","x00189306","x00189307","x00189308","x00189309","x00189310","x00189311","x00189312","x00189313","x00189314","x00189315","x00189316","x00189317","x00189318","x00189319","x00189320","x00189321","x00189322","x00189323","x00189324","x00189325","x00189326","x00189327","x00189328","x00189329","x00189330","x00189332","x00189333","x00189334","x00189335","x00189337","x00189338","x00189340","x00189341","x00189342","x00189343","x00189344","x00189345","x00189346","x00189351","x00189352","x00189353","x00189360","x00189401","x00189402","x00189403","x00189404","x00189405","x00189406","x00189407","x00189412","x00189417","x00189420","x00189423","x00189424","x00189425","x00189426","x00189427","x00189428","x00189429","x00189430","x00189432","x00189433","x00189434","x00189435","x00189436","x00189437","x00189440","x00189441","x00189447","x00189449","x00189451","x00189452","x00189455","x00189456","x00189457","x00189461","x00189462","x00189463","x00189464","x00189465","x00189466","x00189467","x00189468","x00189469","x00189470","x00189471","x00189472","x00189473","x00189474","x00189476","x00189477","x00189504","x00189506","x00189507","x00189508","x00189509","x00189510","x00189511","x00189514","x00189515","x00189516","x00189517","x00189524","x00189525","x00189526","x00189527","x00189528","x00189530","x00189531","x00189538","x00189601","x00189602","x00189603","x00189604","x00189605","x00189606","x00189607","x00189701","x00189715","x00189722","x00189725","x00189727","x00189735","x00189739","x00189740","x00189751","x00189756","x00189758","x00189759","x00189760","x00189761","x00189762","x00189763","x00189765","x00189767","x00189801","x00189804","x00189805","x00189807","x00189808","x0018980b","x0018a001","x0018a002","x0018a003","x00200000","x0020000d","x0020000e","x00200010","x00200011","x00200012","x00200013","x00200014","x00200015","x00200016","x00200017","x00200018","x00200019","x00200020","x00200022","x00200024","x00200026","x00200030","x00200032","x00200035","x00200037","x00200050","x00200052","x00200060","x00200062","x00200070","x00200080","x00200100","x00200105","x00200110","x00200200","x00201000","x00201001","x00201002","x00201003","x00201004","x00201005","x00201020","x00201040","x00201041","x00201070","x00201200","x00201202","x00201204","x00201206","x00201208","x00201209","x002031xx","x00203401","x00203402","x00203403","x00203404","x00203405","x00203406","x00204000","x00205000","x00205002","x00209056","x00209057","x00209071","x00209072","x00209111","x00209113","x00209116","x00209128","x00209153","x00209156","x00209157","x00209158","x00209161","x00209162","x00209163","x00209164","x00209165","x00209167","x00209213","x00209221","x00209222","x00209228","x00209238","x00209241","x00209245","x00209246","x00209247","x00209248","x00209249","x00209250","x00209251","x00209252","x00209253","x00209254","x00209255","x00209256","x00209257","x00209301","x00209302","x00209308","x00209421","x00209450","x00209453","x00209518","x00209529","x00209536","x00220001","x00220002","x00220003","x00220004","x00220005","x00220006","x00220007","x00220008","x00220009","x0022000a","x0022000b","x0022000c","x0022000d","x0022000e","x00220010","x00220011","x00220012","x00220013","x00220014","x00220015","x00220016","x00220017","x00220018","x00220019","x0022001a","x0022001b","x0022001c","x0022001d","x00220020","x00220021","x00220022","x00220030","x00220031","x00220032","x00220035","x00220036","x00220037","x00220038","x00220039","x00220041","x00220042","x00220048","x00220049","x0022004e","x00220055","x00220056","x00220057","x00220058","x00280000","x00280002","x00280003","x00280004","x00280005","x00280006","x00280008","x00280009","x0028000a","x00280010","x00280011","x00280012","x00280014","x00280030","x00280031","x00280032","x00280034","x00280040","x00280050","x00280051","x0028005f","x00280060","x00280061","x00280062","x00280063","x00280065","x00280066","x00280068","x00280069","x00280070","x00280071","x00280080","x00280081","x00280082","x00280090","x00280091","x00280092","x00280093","x00280094","x00280100","x00280101","x00280102","x00280103","x00280104","x00280105","x00280106","x00280107","x00280108","x00280109","x00280110","x00280111","x00280120","x00280121","x00280200","x00280300","x00280301","x00280400","x00280401","x00280402","x00280403","x00280404","x002804x2","x002804x3","x00280700","x00280701","x00280702","x00280710","x00280720","x00280721","x00280722","x00280730","x00280740","x002808x0","x002808x2","x002808x3","x002808x4","x002808x8","x00280a02","x00280a04","x00281040","x00281041","x00281050","x00281051","x00281052","x00281053","x00281054","x00281055","x00281056","x00281080","x00281090","x00281100","x00281101","x00281102","x00281103","x00281111","x00281112","x00281113","x00281199","x00281200","x00281201","x00281202","x00281203","x00281211","x00281212","x00281213","x00281214","x00281221","x00281222","x00281223","x00281300","x00281350","x00281351","x00281352","x0028135a","x00281402","x00281404","x00281406","x00281408","x0028140c","x0028140e","x0028140f","x00281410","x00282000","x00282110","x00282112","x00282114","x00283000","x00283002","x00283003","x00283004","x00283006","x00283010","x00283110","x00284000","x00285000","x00286010","x00286020","x00286022","x00286023","x00286030","x00286040","x00286100","x00286101","x00286102","x00286110","x00286112","x00286114","x00286120","x00286190","x00287fe0","x00289001","x00289002","x00289003","x00289099","x00289108","x00289110","x00289132","x00289145","x00289235","x00289411","x00289415","x00289416","x00289422","x00289443","x00289444","x00289445","x00289446","x00289454","x00289474","x00289478","x00289501","x00289502","x00289503","x00289506","x00289507","x00289520","x00289537","x00320000","x0032000a","x0032000c","x00320012","x00320032","x00320033","x00320034","x00320035","x00321000","x00321001","x00321010","x00321011","x00321020","x00321021","x00321030","x00321031","x00321032","x00321033","x00321040","x00321041","x00321050","x00321051","x00321055","x00321060","x00321064","x00321070","x00324000","x00380004","x00380008","x00380010","x00380011","x00380016","x0038001a","x0038001b","x0038001c","x0038001d","x0038001e","x00380020","x00380021","x00380030","x00380032","x00380040","x00380044","x00380050","x00380060","x00380061","x00380062","x00380100","x00380300","x00380400","x00380500","x00380502","x00384000","x003a0004","x003a0005","x003a0010","x003a001a","x003a0020","x003a0200","x003a0202","x003a0203","x003a0205","x003a0208","x003a0209","x003a020a","x003a020c","x003a0210","x003a0211","x003a0212","x003a0213","x003a0214","x003a0215","x003a0218","x003a021a","x003a0220","x003a0221","x003a0222","x003a0223","x003a0230","x003a0231","x003a0240","x003a0241","x003a0242","x003a0244","x003a0245","x003a0246","x003a0247","x003a0248","x003a0300","x003a0301","x003a0302","x00400001","x00400002","x00400003","x00400004","x00400005","x00400006","x00400007","x00400008","x00400009","x0040000a","x0040000b","x00400010","x00400011","x00400012","x00400020","x00400031","x00400032","x00400033","x00400035","x00400036","x00400100","x00400220","x00400241","x00400242","x00400243","x00400244","x00400245","x00400250","x00400251","x00400252","x00400253","x00400254","x00400255","x00400260","x00400261","x00400270","x00400275","x00400280","x00400281","x00400293","x00400294","x00400295","x00400296","x00400300","x00400301","x00400302","x00400303","x00400306","x00400307","x0040030e","x00400310","x00400312","x00400314","x00400316","x00400318","x00400320","x00400321","x00400324","x00400330","x00400340","x00400400","x00400440","x00400441","x0040050a","x00400512","x0040051a","x00400550","x00400551","x00400552","x00400553","x00400554","x00400555","x00400556","x0040059a","x00400600","x004006fa","x0040071a","x0040072a","x0040073a","x0040074a","x004008d8","x004008da","x004008ea","x004009f8","x00401001","x00401002","x00401003","x00401004","x00401005","x00401006","x00401007","x00401008","x00401009","x0040100a","x00401010","x00401011","x00401101","x00401102","x00401103","x00401400","x00402001","x00402004","x00402005","x00402006","x00402007","x00402008","x00402009","x00402010","x00402016","x00402017","x00402400","x00403001","x00404001","x00404002","x00404003","x00404004","x00404005","x00404006","x00404007","x00404009","x00404010","x00404011","x00404015","x00404016","x00404018","x00404019","x00404020","x00404021","x00404022","x00404023","x00404025","x00404026","x00404027","x00404028","x00404029","x00404030","x00404031","x00404032","x00404033","x00404034","x00404035","x00404036","x00404037","x00404040","x00408302","x00409094","x00409096","x00409098","x00409210","x00409211","x00409212","x00409216","x00409224","x00409225","x0040a010","x0040a027","x0040a030","x0040a032","x0040a040","x0040a043","x0040a050","x0040a073","x0040a075","x0040a078","x0040a07a","x0040a07c","x0040a080","x0040a082","x0040a084","x0040a088","x0040a090","x0040a0b0","x0040a120","x0040a121","x0040a122","x0040a123","x0040a124","x0040a130","x0040a132","x0040a136","x0040a138","x0040a13a","x0040a160","x0040a168","x0040a170","x0040a180","x0040a195","x0040a300","x0040a301","x0040a30a","x0040a353","x0040a354","x0040a360","x0040a370","x0040a372","x0040a375","x0040a385","x0040a390","x0040a491","x0040a492","x0040a493","x0040a494","x0040a496","x0040a504","x0040a525","x0040a730","x0040b020","x0040db00","x0040db06","x0040db07","x0040db0b","x0040db0c","x0040db0d","x0040db73","x0040e001","x0040e004","x0040e006","x0040e010","x0040e011","x00420010","x00420011","x00420012","x00420013","x00420014","x00440001","x00440002","x00440003","x00440004","x00440007","x00440008","x00440009","x0044000a","x0044000b","x00440010","x00440011","x00440012","x00440013","x00440019","x00460012","x00460014","x00460015","x00460018","x00460028","x00460030","x00460032","x00460034","x00460036","x00460038","x00460040","x00460042","x00460044","x00460046","x00460060","x00460062","x00460064","x00460075","x00460076","x00460077","x00460092","x00460094","x00460095","x00460100","x00460101","x00460102","x00460104","x00460106","x00460125","x00460135","x00460137","x00460139","x00460146","x00460147","x00500004","x00500010","x00500014","x00500015","x00500016","x00500017","x00500018","x00500019","x0050001b","x00500020","x00540010","x00540011","x00540012","x00540013","x00540014","x00540015","x00540016","x00540017","x00540018","x00540020","x00540021","x00540022","x00540030","x00540031","x00540032","x00540033","x00540036","x00540038","x00540039","x00540050","x00540051","x00540052","x00540053","x00540060","x00540061","x00540062","x00540063","x00540070","x00540071","x00540072","x00540073","x00540080","x00540081","x00540090","x00540100","x00540101","x00540200","x00540202","x00540210","x00540211","x00540220","x00540222","x00540300","x00540302","x00540304","x00540306","x00540308","x00540400","x00540410","x00540412","x00540414","x00540500","x00541000","x00541001","x00541002","x00541004","x00541100","x00541101","x00541102","x00541103","x00541104","x00541105","x00541200","x00541201","x00541202","x00541203","x00541210","x00541220","x00541300","x00541310","x00541311","x00541320","x00541321","x00541322","x00541323","x00541324","x00541330","x00541400","x00541401","x00603000","x00603002","x00603004","x00603006","x00603008","x00603010","x00603020","x00620001","x00620002","x00620003","x00620004","x00620005","x00620006","x00620008","x00620009","x0062000a","x0062000b","x0062000c","x0062000d","x0062000e","x0062000f","x00620010","x00640002","x00640003","x00640005","x00640007","x00640008","x00640009","x0064000f","x00640010","x00660001","x00660002","x00660003","x00660004","x00660009","x0066000a","x0066000e","x00660010","x00660011","x00660015","x00660016","x00660017","x00660018","x00660019","x0066001b","x0066001c","x0066001e","x0066001f","x00660020","x00660021","x00660023","x00660024","x00660025","x00660026","x00660027","x00660028","x00660029","x0066002a","x0066002f","x00660031","x00660032","x00660034","x00660036","x00700001","x00700002","x00700003","x00700004","x00700005","x00700006","x00700008","x00700009","x00700010","x00700011","x00700012","x00700014","x00700015","x00700020","x00700021","x00700022","x00700023","x00700024","x00700040","x00700041","x00700042","x00700050","x00700051","x00700052","x00700053","x0070005a","x00700060","x00700062","x00700066","x00700067","x00700068","x00700080","x00700081","x00700082","x00700083","x00700084","x00700086","x00700100","x00700101","x00700102","x00700103","x00700306","x00700308","x00700309","x0070030a","x0070030c","x0070030d","x0070030f","x00700310","x00700311","x00700312","x00700314","x00700318","x0070031a","x0070031c","x0070031e","x00700401","x00700402","x00700403","x00700404","x00700405","x00720002","x00720004","x00720006","x00720008","x0072000a","x0072000c","x0072000e","x00720010","x00720012","x00720014","x00720020","x00720022","x00720024","x00720026","x00720028","x00720030","x00720032","x00720034","x00720038","x0072003a","x0072003c","x0072003e","x00720040","x00720050","x00720052","x00720054","x00720056","x00720060","x00720062","x00720064","x00720066","x00720068","x0072006a","x0072006c","x0072006e","x00720070","x00720072","x00720074","x00720076","x00720078","x0072007a","x0072007c","x0072007e","x00720080","x00720100","x00720102","x00720104","x00720106","x00720108","x0072010a","x0072010c","x0072010e","x00720200","x00720202","x00720203","x00720204","x00720206","x00720208","x00720210","x00720212","x00720214","x00720216","x00720218","x00720300","x00720302","x00720304","x00720306","x00720308","x00720310","x00720312","x00720314","x00720316","x00720318","x00720320","x00720330","x00720400","x00720402","x00720404","x00720406","x00720432","x00720434","x00720500","x00720510","x00720512","x00720514","x00720516","x00720520","x00720600","x00720602","x00720604","x00720700","x00720702","x00720704","x00720706","x00720710","x00720712","x00720714","x00720716","x00720717","x00720718","x00741000","x00741002","x00741004","x00741006","x00741008","x0074100a","x0074100c","x00741020","x00741022","x00741024","x00741030","x00741032","x00741034","x00741036","x00741038","x0074103a","x00741040","x00741042","x00741044","x00741046","x00741048","x0074104a","x0074104c","x0074104e","x00741050","x00741052","x00741054","x00741056","x00741200","x00741202","x00741204","x00741210","x00741212","x00741216","x00741220","x00741222","x00741230","x00741234","x00741236","x00741238","x00741242","x00741244","x00741246","x00880130","x00880140","x00880200","x00880904","x00880906","x00880910","x00880912","x01000410","x01000420","x01000424","x01000426","x04000005","x04000010","x04000015","x04000020","x04000100","x04000105","x04000110","x04000115","x04000120","x04000305","x04000310","x04000401","x04000402","x04000403","x04000404","x04000500","x04000510","x04000520","x04000550","x04000561","x04000562","x04000563","x04000564","x04000565","x1000xxx0","x1000xxx1","x1000xxx2","x1000xxx3","x1000xxx4","x1000xxx5","x1010xxxx","x20000010","x2000001e","x20000020","x20000030","x20000040","x20000050","x20000060","x20000061","x20000062","x20000063","x20000065","x20000067","x20000069","x2000006a","x200000a0","x200000a1","x200000a2","x200000a4","x200000a8","x20000500","x20000510","x20100010","x20100030","x20100040","x20100050","x20100052","x20100054","x20100060","x20100080","x201000a6","x201000a7","x201000a8","x201000a9","x20100100","x20100110","x20100120","x20100130","x20100140","x20100150","x20100152","x20100154","x2010015e","x20100160","x20100376","x20100500","x20100510","x20100520","x20200010","x20200020","x20200030","x20200040","x20200050","x202000a0","x202000a2","x20200110","x20200111","x20200130","x20200140","x20300010","x20300020","x20400010","x20400011","x20400020","x20400060","x20400070","x20400072","x20400074","x20400080","x20400082","x20400090","x20400100","x20400500","x20500010","x20500020","x20500500","x21000010","x21000020","x21000030","x21000040","x21000050","x21000070","x21000140","x21000160","x21000170","x21000500","x21100010","x21100020","x21100030","x21100099","x21200010","x21200050","x21200070","x21300010","x21300015","x21300030","x21300040","x21300050","x21300060","x21300080","x213000a0","x213000c0","x22000001","x22000002","x22000003","x22000004","x22000005","x22000006","x22000007","x22000008","x22000009","x2200000a","x2200000b","x2200000c","x2200000d","x2200000e","x2200000f","x22000020","x30020002","x30020003","x30020004","x3002000a","x3002000c","x3002000d","x3002000e","x30020010","x30020011","x30020012","x30020020","x30020022","x30020024","x30020026","x30020028","x30020029","x30020030","x30020032","x30020034","x30020040","x30020041","x30020042","x30020051","x30020052","x30040001","x30040002","x30040004","x30040006","x30040008","x3004000a","x3004000c","x3004000e","x30040010","x30040012","x30040014","x30040040","x30040042","x30040050","x30040052","x30040054","x30040056","x30040058","x30040060","x30040062","x30040070","x30040072","x30040074","x30060002","x30060004","x30060006","x30060008","x30060009","x30060010","x30060012","x30060014","x30060016","x30060020","x30060022","x30060024","x30060026","x30060028","x3006002a","x3006002c","x30060030","x30060033","x30060036","x30060038","x30060039","x30060040","x30060042","x30060044","x30060045","x30060046","x30060048","x30060049","x30060050","x30060080","x30060082","x30060084","x30060085","x30060086","x30060088","x300600a0","x300600a4","x300600a6","x300600b0","x300600b2","x300600b4","x300600b6","x300600b7","x300600b8","x300600c0","x300600c2","x300600c4","x300600c6","x300600c8","x30080010","x30080012","x30080014","x30080016","x30080020","x30080021","x30080022","x30080024","x30080025","x3008002a","x3008002b","x3008002c","x30080030","x30080032","x30080033","x30080036","x30080037","x3008003a","x3008003b","x30080040","x30080041","x30080042","x30080044","x30080045","x30080046","x30080047","x30080048","x30080050","x30080052","x30080054","x30080056","x3008005a","x30080060","x30080061","x30080062","x30080063","x30080064","x30080065","x30080066","x30080068","x3008006a","x30080070","x30080072","x30080074","x30080076","x30080078","x3008007a","x30080080","x30080082","x30080090","x30080092","x300800a0","x300800b0","x300800c0","x300800d0","x300800e0","x300800f0","x300800f2","x300800f4","x300800f6","x30080100","x30080105","x30080110","x30080116","x30080120","x30080122","x30080130","x30080132","x30080134","x30080136","x30080138","x3008013a","x3008013c","x30080140","x30080142","x30080150","x30080152","x30080160","x30080162","x30080164","x30080166","x30080168","x30080200","x30080202","x30080220","x30080223","x30080224","x30080230","x30080240","x30080250","x30080251","x300a0002","x300a0003","x300a0004","x300a0006","x300a0007","x300a0009","x300a000a","x300a000b","x300a000c","x300a000e","x300a0010","x300a0012","x300a0013","x300a0014","x300a0015","x300a0016","x300a0018","x300a001a","x300a0020","x300a0021","x300a0022","x300a0023","x300a0025","x300a0026","x300a0027","x300a0028","x300a002a","x300a002b","x300a002c","x300a002d","x300a0040","x300a0042","x300a0043","x300a0044","x300a0046","x300a0048","x300a004a","x300a004b","x300a004c","x300a004e","x300a004f","x300a0050","x300a0051","x300a0052","x300a0053","x300a0055","x300a0070","x300a0071","x300a0072","x300a0078","x300a0079","x300a007a","x300a007b","x300a0080","x300a0082","x300a0084","x300a0086","x300a0088","x300a0089","x300a008a","x300a00a0","x300a00a2","x300a00a4","x300a00b0","x300a00b2","x300a00b3","x300a00b4","x300a00b6","x300a00b8","x300a00ba","x300a00bb","x300a00bc","x300a00be","x300a00c0","x300a00c2","x300a00c3","x300a00c4","x300a00c6","x300a00c7","x300a00c8","x300a00ca","x300a00cc","x300a00ce","x300a00d0","x300a00d1","x300a00d2","x300a00d3","x300a00d4","x300a00d5","x300a00d6","x300a00d7","x300a00d8","x300a00d9","x300a00da","x300a00db","x300a00dc","x300a00dd","x300a00e0","x300a00e1","x300a00e2","x300a00e3","x300a00e4","x300a00e5","x300a00e6","x300a00e7","x300a00e8","x300a00e9","x300a00ea","x300a00eb","x300a00ec","x300a00ed","x300a00ee","x300a00f0","x300a00f2","x300a00f3","x300a00f4","x300a00f5","x300a00f6","x300a00f7","x300a00f8","x300a00f9","x300a00fa","x300a00fb","x300a00fc","x300a00fe","x300a0100","x300a0102","x300a0104","x300a0106","x300a0107","x300a0108","x300a0109","x300a010a","x300a010c","x300a010e","x300a0110","x300a0111","x300a0112","x300a0114","x300a0115","x300a0116","x300a0118","x300a011a","x300a011c","x300a011e","x300a011f","x300a0120","x300a0121","x300a0122","x300a0123","x300a0124","x300a0125","x300a0126","x300a0128","x300a0129","x300a012a","x300a012c","x300a012e","x300a0130","x300a0134","x300a0140","x300a0142","x300a0144","x300a0146","x300a0148","x300a014a","x300a014c","x300a014e","x300a0180","x300a0182","x300a0183","x300a0184","x300a0190","x300a0192","x300a0194","x300a0196","x300a0198","x300a0199","x300a019a","x300a01a0","x300a01a2","x300a01a4","x300a01a6","x300a01a8","x300a01b0","x300a01b2","x300a01b4","x300a01b6","x300a01b8","x300a01ba","x300a01bc","x300a01d0","x300a01d2","x300a01d4","x300a01d6","x300a0200","x300a0202","x300a0206","x300a0210","x300a0212","x300a0214","x300a0216","x300a0218","x300a021a","x300a0222","x300a0224","x300a0226","x300a0228","x300a0229","x300a022a","x300a022b","x300a022c","x300a022e","x300a0230","x300a0232","x300a0234","x300a0236","x300a0238","x300a0240","x300a0242","x300a0244","x300a0250","x300a0260","x300a0262","x300a0263","x300a0264","x300a0266","x300a026a","x300a026c","x300a0280","x300a0282","x300a0284","x300a0286","x300a0288","x300a028a","x300a028c","x300a0290","x300a0291","x300a0292","x300a0294","x300a0296","x300a0298","x300a029c","x300a029e","x300a02a0","x300a02a2","x300a02a4","x300a02b0","x300a02b2","x300a02b3","x300a02b4","x300a02b8","x300a02ba","x300a02c8","x300a02d0","x300a02d2","x300a02d4","x300a02d6","x300a02e0","x300a02e1","x300a02e2","x300a02e3","x300a02e4","x300a02e5","x300a02e6","x300a02e7","x300a02e8","x300a02ea","x300a02eb","x300a0302","x300a0304","x300a0306","x300a0308","x300a030a","x300a030c","x300a030d","x300a030f","x300a0312","x300a0314","x300a0316","x300a0318","x300a0320","x300a0322","x300a0330","x300a0332","x300a0334","x300a0336","x300a0338","x300a033a","x300a033c","x300a0340","x300a0342","x300a0344","x300a0346","x300a0348","x300a034a","x300a034c","x300a0350","x300a0352","x300a0354","x300a0356","x300a0358","x300a035a","x300a0360","x300a0362","x300a0364","x300a0366","x300a0370","x300a0372","x300a0374","x300a0380","x300a0382","x300a0384","x300a038a","x300a0390","x300a0392","x300a0394","x300a0396","x300a0398","x300a039a","x300a03a0","x300a03a2","x300a03a4","x300a03a6","x300a03a8","x300a03aa","x300a03ac","x300a0401","x300a0402","x300a0410","x300a0412","x300a0420","x300a0421","x300a0422","x300a0423","x300a0424","x300c0002","x300c0004","x300c0006","x300c0007","x300c0008","x300c0009","x300c000a","x300c000c","x300c000e","x300c0020","x300c0022","x300c0040","x300c0042","x300c0050","x300c0051","x300c0055","x300c0060","x300c006a","x300c0080","x300c00a0","x300c00b0","x300c00c0","x300c00d0","x300c00e0","x300c00f0","x300c00f2","x300c00f4","x300c00f6","x300c0100","x300c0102","x300c0104","x300e0002","x300e0004","x300e0005","x300e0008","x40000000","x40000010","x40004000","x40080040","x40080042","x40080050","x40080100","x40080101","x40080102","x40080103","x40080108","x40080109","x4008010a","x4008010b","x4008010c","x40080111","x40080112","x40080113","x40080114","x40080115","x40080117","x40080118","x40080119","x4008011a","x40080200","x40080202","x40080210","x40080212","x40080300","x40084000","x4ffe0001","x50xx0005","x50xx0010","x50xx0020","x50xx0022","x50xx0030","x50xx0040","x50xx0103","x50xx0104","x50xx0105","x50xx0106","x50xx0110","x50xx0112","x50xx0114","x50xx1001","x50xx2000","x50xx2002","x50xx2004","x50xx2006","x50xx2008","x50xx200a","x50xx200c","x50xx200e","x50xx2500","x50xx2600","x50xx2610","x50xx3000","x52009229","x52009230","x54000100","x54000110","x54000112","x54001004","x54001006","x5400100a","x54001010","x56000010","x56000020","x60000000","x60xx0010","x60xx0011","x60xx0012","x60xx0015","x60xx0022","x60xx0040","x60xx0045","x60xx0050","x60xx0051","x60xx0052","x60xx0060","x60xx0061","x60xx0062","x60xx0063","x60xx0066","x60xx0068","x60xx0069","x60xx0100","x60xx0102","x60xx0110","x60xx0200","x60xx0800","x60xx0802","x60xx0803","x60xx0804","x60xx1001","x60xx1100","x60xx1101","x60xx1102","x60xx1103","x60xx1200","x60xx1201","x60xx1202","x60xx1203","x60xx1301","x60xx1302","x60xx1303","x60xx1500","x60xx3000","x60xx4000","x7fxx0000","x7fxx0010","x7fxx0011","x7fxx0020","x7fxx0030","x7fxx0040","xfffafffa","xfffcfffc","xfffee000","xfffee00d","xfffee0dd","stackMap","configuration","stackUpdatedCallbacks","createAndAddStack","getData","series","numberOfFrames","frame","addMetadata","findStack","getAllStacks","addStackUpdatedCallback","callback","setConfiguration","WL_PRESET_CUSTOM","WL_PRESET_DEFAULT","WL_STORAGE_KEY","defaultWLPresets","wc","ww","WindowLevelPresetsManager","defaults","retrieveFunction","storeFunction","setRetrieveFunction","setStoreFunction","updateElementWLPresetData","wlPresetData","getElementData","preset","presetName","currentPreset","custom","applyWLPreset","isEmpty","Promise","resolve","reject","userId","user","setData","setPersistent","setOHIFWLPresets","retrieve","load","loadDefaults","applyWLPresetToActiveElement","hasOwn","presetMap","getTextCallback","keyPressHandler","doneChangingTextCallback","getTextInput","open","showModal","confirm","changeTextCallback","Blaze","_globalHelpers","isTouchDevice","right","bottom","margin","page","makeDisplaySet","instances","imageSet","seriesData","setAttributes","uid","seriesDate","seriesTime","getSeriesInstanceUID","shallSort","a","b","setAttribute","isSingleImageModality","getSeriesCount","forEachSeries","getInstanceCount","stackableInstances","forEachInstance","getStudyInstanceUID","acquisitionDatetime","synchronizers","debug","logRenders","template","oldRender","rendered","counter","apply","arguments","onInvalidate","wrappedFind","Collection","cursor","collectionName","_name","_debugName","observe","added","removed","doneCallbackFunction","runCallback","showConfirmDialog","doneCallback","renderWithData","removableBackdrop","imageViewerViewports","canvases","updateQueryStringParameter","uri","regex","RegExp","separator","url","renderingAttr","wadorsuri","wadouri","imagePath","sopInstanceUid","frameIndex","getSeriesByUID","getInstanceByUID","stackToolData","getWADORSImageUrl","defaultHotkeys","pan","angle","stackScroll","magnify","annotate","dragProbe","flipH","flipV","rotateR","rotateL","invert","zoomIn","zoomOut","zoomToFit","resetViewport","clearTools","scrollDown","scrollUp","scrollLastImage","scrollFirstImage","previousDisplaySet","nextDisplaySet","nextPanel","previousPanel","toggleOverlayTags","toggleCineDialog","toggleDownloadDialog","WLPreset0","WLPreset1","WLPreset2","WLPreset3","WLPreset4","WLPreset5","WLPreset6","WLPreset7","WLPreset8","WLPreset9","hotkeys","contextName","createContext","isActiveViewportEmpty","registerToolCommands","commandName","toolId","register","wwwcRegion","crosshairs","registerViewportCommands","commandId","disabled","applyPreset","loadNextActivePanel","loadPreviousActivePanel","$dicomTags","isDownloadEnabled","hotkeyFunctions","enableHotkeys","fn","reverse","setOHIFRefLines","setOHIFHotkeys","context","instanceClassViewportSettingsFunctions","instanceClass","sopClassUid","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","RTImageStorage","seriesInstanceUids","timepointId","timepointsFilter","restoreToolState","processData","retrieveStudiesMetadata","viewerData","studylistStudy","retrieveTimepoints","buildViewerDataFromTimepointId","Error","getDataFromTimepoint","currentTimepointId","relatedStudies","clone","isBaseline","timepointIds","Timepoints","baseline","timepointType","$lte","concat","priorFilter","$lt","priorSorting","sort","uniq","layoutTemplate","render","Random","$viewerports","randomId","domElement","prefetch","stackImagePositionOffsetSynchronizer","update","triggerHandler","MRSpectroscopyStorage","EnhancedUSVolumeStorage","Sop12LeadECGWaveformStorage","GeneralECGWaveformStorage","AmbulatoryECGWaveformStorage","HemodynamicWaveformStorage","CardiacElectrophysiologyWaveformStorage","BasicVoiceAudioWaveformStorage","GeneralAudioWaveformStorage","ArterialPulseWaveformStorage","RespiratoryWaveformStorage","GrayscaleSoftcopyPresentationStateStorage","ColorSoftcopyPresentationStateStorage","PseudoColorSoftcopyPresentationStateStorage","BlendingSoftcopyPresentationStateStorage","XAXRFGrayscaleSoftcopyPresentationStateStorage","RawDataStorage","SpatialRegistrationStorage","SpatialFiducialsStorage","DeformableSpatialRegistrationStorage","SegmentationStorage","SurfaceSegmentationStorage","RealWorldValueMappingStorage","SurfaceScanMeshStorage","SurfaceScanPointCloudStorage","StereometricRelationshipStorage","LensometryMeasurementsStorage","AutorefractionMeasurementsStorage","KeratometryMeasurementsStorage","SubjectiveRefractionMeasurementsStorage","VisualAcuityMeasurementsStorage","SpectaclePrescriptionReportStorage","OphthalmicAxialMeasurementsStorage","IntraocularLensCalculationsStorage","MacularGridThicknessandVolumeReport","OphthalmicVisualFieldStaticPerimetryMeasurementsStorage","OphthalmicThicknessMapStorage","CornealTopographyMapStorage","BasicTextSR","EnhancedSR","ComprehensiveSR","Comprehensive3DSR","ProcedureLog","MammographyCADSR","KeyObjectSelection","ChestCADSR","XRayRadiationDoseSR","RadiopharmaceuticalRadiationDoseSR","ColonCADSR","ImplantationPlanSRDocumentStorage","EncapsulatedPDFStorage","EncapsulatedCDAStorage","BasicStructuredDisplayStorage","RTDoseStorage","RTStructureSetStorage","RTBeamsTreatmentRecordStorage","RTPlanStorage","RTBrachyTreatmentRecordStorage","RTTreatmentSummaryRecordStorage","RTIonPlanStorage","RTIonBeamsTreatmentRecordStorage","RTBeamsDeliveryInstructionStorage","GenericImplantTemplateStorage","ImplantAssemblyTemplateStorage","ImplantTemplateGroupStorage","iteratorFunction","iteratorFn","scrollToIndex","distanceFromCurrentIndex","scroll","deactivateAfterEdit","deactivate","cloneElement","targetId","cloneNode","clonedCanvases","canvasIndex","clonedCanvas","getContext","thumbnailCanvas","drawImage","visibility","targetThumbnail","$imageThumbnail","useTransform","styleProperty","check","$clone","pointerEvents","appendChild","cursorX","cursorY","touches","pageX","pageY","handlers","mousemove","mouseup","viewerHeight","headerHeight","heightDiff","positionX","positionY","position","changedTouches","elemBelow","elementFromPoint","$viewportsDraggedOver","contains","middle","defaultMouseButtonTools","tools","gestures","zoomTouchPinch","enabled","panMultiTouch","numPointers","stackScrollMultiTouch","doubleTapZoom","toolDefaultStates","activate","disabledToolButtons","shadowConfig","shadow","shadowColor","shadowOffsetX","shadowOffsetY","textBoxConfig","centering","initialized","addTool","mouse","touch","wwwcTouchDrag","zoomTouchDrag","wwwcRegionTouch","dragProbeTouch","panTouchDrag","multiTouch","stackScrollTouchDrag","lengthTouch","simpleAngleTouch","magnifyTouchDrag","ellipticalRoiTouch","rectangleRoiTouch","arrowAnnotateTouch","rotate","rotateTouchDrag","textMarkerTouch","crosshairsTouch","public","defaultLeft","defaultRight","defaultMiddle","configureTools","textStyle","toolStyle","toolColors","setBackgroundColor","fontFamily","setFont","setToolWidth","setToolColor","setActiveColor","getToolDefaultStates","lengthConfig","ellipticalRoiConfig","drawHandlesOnHover","$startFrom","$ascending","textMarkerConfig","annotateConfig","drawHandles","arrowFirst","zoomConfig","minScale","maxScale","magnifyConfig","magnifySize","magnificationLevel","defaultGestures","stackScrollMultiTouchConfig","testPointers","panMultiTouchConfig","getKeysByValue","object","filter","handleLoadProgress","viewportIndices","encodedId","setGestures","newGestures","getGestures","base","getTools","setToolDefaultStates","states","setActiveToolForElement","relevantTools","newToolIdLeft","newCornerstoneToolLeft","newToolIdMiddle","newCornerstoneToolMiddle","newToolIdRight","newCornerstoneToolRight","zoomWheel","stackScrollWheel","leftToolSynchronizer","currentFrameOfReferenceUID","twoFingerMultiTouchConfig","elements","$elements","checkElementEnabled","allElementsEnabled","getAttribute","coords","allTools","touchDevice","nearbyTool","pointNearTool","toolInterfaceName","toolInterface","setDefaultTool","setConfigureTools","activateCommandButton","deactivateCommandButton","splice","unsavedChanges","confirmationMessage","returnValue","synchronizer","Synchronizer","WadoRsMetaDataBuilder","getRadiopharmaceuticalInfoMetaData","radiopharmaceuticalInfo","addTag","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","toJSON","getWadoRsInstanceMetaData","patientAge","patientSize","patientWeight","sliceThickness","imagePositionPatient","imageOrientationPatient","samplesPerPixel","photometricInterpretation","planarConfiguration","pixelSpacing","pixelAspectRatio","bitsAllocated","bitsStored","highBit","pixelRepresentation","smallestPixelValue","largestPixelValue","rescaleIntercept","rescaleSlope","rescaleType","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","imageRendering","thumbnailRendering","frameNumber","cornerstoneWADOImageLoader","wadors","metaDataManager","rowCosines","columnCosines","rowString","orientation","getOrientationString","columnString","oppositeRowString","invertOrientationString","oppositeColumnString","vflip","hflip","viewportOrientationMarkers","topMarker","leftMarker","rotation","property","patient","date","time","getEnabledElementForActiveElement","activeViewportElement","scaleIncrement","maximumScale","minimumScale","resetViewportWithElement","instanceClassDefaultViewport","reset","linkStackScroll","closeAction","hasAttribute","isClosed","stopAllClips","stopActiveClip","click","clipState","stackData","nImages","activeElement","isStackScrollLinkingDisabled","linkableViewportsCount","linkableViewports","getLinkableViewports","isStackScrollLinkingActive","syncedElements","pluck","syncedViewports","$renderedViewports","OBJECT","Array","isArray","defineProperty","getUID","attribute","attributes","sortingCallback","parentNode","layoutClassName","getLayoutClass","updateSessionFn","setDefaultViewportData","self","viewportsAmount","oldViewportData","sequenceMap","getDisplaySetSequenceMap","isSequenced","isDisplaySetsSequenced","currentViewportIndex","dSet","appendix","currentLength","beginIndex","values","next","displaySetIndex","endIndex","additionalData","getSOPInstanceUID","layoutClass","updateLayoutClass","newLayoutClass","viewportDataAndLayoutProps","$parentNode","html","viewportContainer","newViewportContainer","enlargeViewport","previousViewportData","singleViewportData","resetPreviousLayout","viewportDataList","Map","studyViewports","definedSequenceMap","lastDisplaySetIndex","lastViewportIndex","isMultiple","displaySetNavigationMultipleViewports","allowLooping","displaySetNavigationLoopOverSeries","endReached","studyViewport","layoutViewports","amount","move","lastStepIndex","beginReached","moveSingleViewportDisplaySets","currentDisplaySet","newIndex","newDisplaySetData","moveMultipleViewportDisplaySets","displaySetsToRender","firstIndex","steps","rest","baseIndex","direction","displaySetData","sortingFunction","isStudyLoadedIntoViewport","isMultipleLayout","constructor","_resizeHandler","repositionStudySeriesQuickSwitch","isViewer","nViewports","leftSidebar","rightSidebar","$leftQuickSwitch","$rightQuickSwitch","hasLeftSidebar","hasRightSidebar","leftOffset","leftPosition","rightPosition","relocateDialogs","$bottomRightDialogs","centerDialogs","resizeScrollbars","$currentOverlay","resizeViewportElement","resizeViewportElements","setResizeViewportElement","resizeTimer","resizeHandler","bind","syncViewports","activateByViewportIndexes","viewportIndexes","getViewportByIndexes","removeViewport","isViewportSynced","disabledListener","elementDisabledHandler","ELEMENT_DISABLED_EVENT","getViewportByElement","removeLinkedViewportFromSession","removeViewportByElement","linkedViewports","$viewportElements","isViewportsLinkable","viewportElementA","viewportElementB","viewportAImageNormal","getViewportImageNormal","viewportBImageNormal","angleInRadians","angleTo","PI","cross","errorMessage","BaseLoadingListener","getNewId","startListening","statsItemsLimit","stats","total","elapsedTime","speed","_addStatsData","_updateProgress","Date","newItem","shift","oldestItem","_getProgressSessionId","_clearSession","progressSessionId","stopListening","timeSlice","randomNumber","_dataSetUrl","_getDataSetUrl","_lastLoaded","_checkCachedData","dataSet","dataSetCacheManager","dataSetLength","byteArray","loaded","_getImageLoadProgressEventName","imageLoadProgressEventName","imageLoadProgressEventHandle","_imageLoadProgressEventHandle","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","imageIdsMap","array","_getImageLoadedEventName","_getImageCachePromiseRemoveEventName","imageLoadedEventName","imageCachePromiseRemovedEventName","imageLoadedEventHandle","_imageLoadedEventHandle","imageCachePromiseRemovedEventHandle","_imageCachePromiseRemovedEventHandle","_updateFrameStatus","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","_logProgress","progressBar","ch","listeners","addStack","stackMetaData","listener","_createListener","addStudy","displaySetInstanceUids","_getSchema","colonIndex","substring","_instance","getByInstanceUID","studyInstanceUID","loadStudy","prefetchDisplaySetsTimeout","lastActiveViewportElement","cacheFullHandlerBound","cacheFullHandler","stopPrefetching","prefetchActiveViewport","prefetchDisplaySets","disableViewportPrefetch","requestPoolManager","clearRequestStack","enablePrefetchOnElement","attachActiveViewportListeners","hasStack","newImageHandler","prefetchDisplaySetsAsync","timeout","prefetchDisplaySetsHandler","displaySetsToPrefetch","getDisplaySetsToPrefetch","getImageIdsFromDisplaySets","prefetchImageIds","nonCachedImageIds","filterCachedImageIds","requestType","preventCache","noop","addRequest","startGrabbing","getActiveViewportImage","seriesMetadata","instanceMetadata","getActiveDisplaySet","some","displaySetImage","displaySetCount","activeDisplaySet","prefetchMethodMap","topdown","downward","prefetchOrder","order","methodName","getFirstDisplaySets","selectedDisplaySets","getNextDisplaySets","activeDisplaySetIndex","begin","getClosestDisplaySets","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","MAX_COUNT","_operationCount","_elementList","_handlers","_invalidate","_elements","silent","_elementWithPayload","payload","_elementWithId","_trigger","limit","_isFunction","onInsert","updateById","found","propertyMap","findAllEntriesBy","foundCount","getElementId","findById","indexOfElement","indexOfId","_isObject","_compareToPropertyMapStrict","_sortListBy","list","subject","_isString","_hasOwnProperty","_getPropertyValue","targetObject","propertyValue","fragments","fragmentCount","firstFragment","remainingFragments","_isValidSortingSpecifier","specifiers","specifierCount","_sortListByCallback","specifier","aValue","bValue","Metadata","UNDEFINED","STUDY_INSTANCE_UID","SERIES_INSTANCE_UID","defineProperties","_sopInstanceUID","_imageId","_definePublicProperties","getTagValue","getStringValue","tagOrProperty","getIndexedValue","getFloatValue","idx","getIntValue","equals","tagExists","hasIndexValues","splitValues","isValidIndex","indexedValue","FUNCTION","_data","getObjectID","_uid","setCustomAttribute","_custom","getCustomAttribute","customAttributeExists","setCustomAttributes","attributeMap","isValidUID","isValidCallback","_seriesInstanceUID","_instances","_firstInstance","addInstance","getInstanceByIndex","indexOfInstance","findInstance","_studyInstanceUID","_series","_displaySets","_firstSeries","addDisplaySet","findDisplaySet","getDisplaySetCount","addSeries","getSeriesByIndex","reduce","sum","indexOfSeries","sortSeriesByDisplaySets","displaySetsMapping","actualSeries","seriesIndex","getFirstSeries","firstSeries","findSeriesAndInstanceByInstance","findSeriesByInstance","tagMap","addTags","tagName","tags","multi","json","Value","registerHelper","charAt","toUpperCase","formatDA","moment","format","dateAsMoment","strFormat","_getGlobalHelper","precision","formatPN","formatTM","dateTime","users","attributeName","currentNumberOfViewports","MaxTouchPoints","msMaxTouchPoints","fromNow","JSON","stringify","sortType","groupedArray","groupBy","groupingElement","getKeyValue","sortedArray","sortingElement","flatten","keyPath","has","stacks","thumbnails","thumbnailIndex","module1"],"mappings":"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W,6BA/vDgB;AAgwD3BC,aAAW,aAhwDgB;AAiwD3BC,aAAW,qBAjwDgB;AAkwD3BC,aAAW,eAlwDgB;AAmwD3BC,aAAW,sBAnwDgB;AAowD3BC,aAAW,gCApwDgB;AAqwD3BC,aAAW,wBArwDgB;AAswD3BC,aAAW,iBAtwDgB;AAuwD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAAW,0BAh1DgB;AAi1D3BC,aAAW,iCAj1DgB;AAk1D3BC,aAAW,kCAl1DgB;AAm1D3BC,aAAW,wBAn1DgB;AAo1D3BC,aAAW,yBAp1DgB;AAq1D3BC,aAAW,aAr1DgB;AAs1D3BC,aAAW,oBAt1DgB;AAu1D3BC,aAAW,sBAv1DgB;AAw1D3BC,aAAW,2BAx1DgB;AAy1D3BC,aAAW,iCAz1DgB;AA01D3BC,aAAW,8BA11DgB;AA21D3BC,aAAW,iCA31DgB;AA41D3BC,aAAW,0BA51DgB;AA61D3BC,aAAW,4BA71DgB;AA81D3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAAW,iBAh4DgB;AAi4D3BC,aAAW,mBAj4DgB;AAk4D3BC,aAAW,kBAl4DgB;AAm4D3BC,aAAW,kBAn4DgB;AAo4D3BC,aAAW,eAp4DgB;AAq4D3BC,aAAW,sBAr4DgB;AAs4D3BC,aAAW,qBAt4DgB;AAu4D3BC,aAAW,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","file":"/packages/ohif_viewerbase.js","sourcesContent":["Template.aboutModal.helpers({\n    githubUrl() {\n        return 'https://github.com/OHIF/Viewers';\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.studyBrowser.helpers({\n    studies() {\n        // @TypeSafeStudies\n        return OHIF.viewer.Studies.findAllBy({\n            selected: true\n        });\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { _ } from 'meteor/underscore';\nimport { Session } from 'meteor/session';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport { thumbnailDragHandlers } from '../../../lib/thumbnailDragHandlers';\n\nTemplate.thumbnailEntry.onCreated(() => {\n    const instance = Template.instance();\n\n    // Check if the thumbnails will be draggable or clickable\n    const isIndexUndefined = _.isUndefined(instance.data.viewportIndex);\n    instance.isDragAndDrop = isIndexUndefined && OHIF.uiSettings.leftSidebarDragAndDrop !== false;\n});\n\nTemplate.thumbnailEntry.events({\n    // Event handlers for drag and drop\n    'mousedown .thumbnailEntry'(event, instance) {\n        const data = instance.data.thumbnail.stack;\n        if (!instance.isDragAndDrop || event.button !== 0) return;\n        thumbnailDragHandlers.thumbnailDragStartHandler(event, data);\n    },\n\n    'touchstart .thumbnailEntry'(event, instance) {\n        const data = instance.data.thumbnail.stack;\n        if (!instance.isDragAndDrop) return;\n        thumbnailDragHandlers.thumbnailDragStartHandler(event, data);\n    },\n\n    'touchmove .thumbnailEntry'(event, instance) {\n        if (!instance.isDragAndDrop) return;\n        thumbnailDragHandlers.thumbnailDragHandler(event);\n    },\n\n    'touchend .thumbnailEntry'(event, instance) {\n        const data = instance.data.thumbnail.stack;\n        if (!instance.isDragAndDrop) return;\n        thumbnailDragHandlers.thumbnailDragEndHandler(event, data);\n    },\n\n    // Event handlers for click (quick switch)\n    'click .thumbnailEntry'(event, instance) {\n        if (instance.isDragAndDrop) return;\n\n        // Get the thumbnail stack data\n        const data = instance.data.thumbnail.stack;\n\n        // Get the viewport index\n        let { viewportIndex } = instance.data;\n        if (_.isUndefined(viewportIndex)) {\n            viewportIndex = Session.get('activeViewport') || 0;\n        }\n\n        // Rerender the viewport using the clicked thumbnail data\n        OHIF.viewerbase.layoutManager.rerenderViewportWithNewDisplaySet(viewportIndex, data);\n    },\n\n    // Event handlers for double click\n    'dblclick .thumbnailEntry'(event, instance) {\n        if (!instance.isDragAndDrop) return;\n\n        // Get the active viewport index and total number of viewports...\n        const viewportCount = OHIF.viewerbase.layoutManager.getNumberOfViewports();\n        let viewportIndex = Session.get('activeViewport') || 0;\n        if (viewportIndex >= viewportCount) {\n            viewportIndex = viewportCount > 0 ? viewportCount - 1 : 0;\n        }\n\n        // Get the thumbnail stack data\n        const data = instance.data.thumbnail.stack;\n\n        // Rerender the viewport using the clicked thumbnail data\n        OHIF.viewerbase.layoutManager.rerenderViewportWithNewDisplaySet(viewportIndex, data);\n    }\n});\n\nTemplate.thumbnailEntry.helpers({\n    draggableClass() {\n        return Template.instance().isDragAndDrop ? 'draggable' : '';\n    },\n\n    instanceNumber() {\n        const thumbnail = Template.instance().data.thumbnail;\n        if (!thumbnail) {\n            return;\n        }\n\n        const stack = thumbnail.stack;\n        if (!stack) {\n            return;\n        }\n\n        //  No need to show instance number for single-frame images\n        if (!stack.isMultiFrame) {\n            return;\n        }\n\n        const firstImage = stack.images[0];\n        if (!firstImage) {\n            return;\n        }\n\n        return firstImage.instanceNumber;\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone } from 'meteor/ohif:cornerstone';\n\nTemplate.imageThumbnail.onCreated(() => {\n    const instance = Template.instance();\n\n    // Get the image ID for current thumbnail\n    instance.getThumbnailImageId = () => {\n        const settingPath = 'public.ui.useMiddleSeriesInstanceAsThumbnail';\n        const useMiddleFrame = OHIF.utils.ObjectPath.get(Meteor.settings, settingPath);\n        const stack = instance.data.thumbnail.stack;\n        const lastIndex = (stack.numImageFrames || stack.images.length || 1) - 1;\n        let imageIndex = useMiddleFrame ? Math.floor(lastIndex / 2) : 0;\n        let imageInstance;\n\n        if (stack.isMultiFrame) {\n            imageInstance = stack.images[0];\n        } else {\n            imageInstance = stack.images[imageIndex];\n            imageIndex = undefined;\n        }\n\n        return imageInstance.getImageId(imageIndex, true);\n    };\n});\n\nTemplate.imageThumbnail.onRendered(() => {\n    const instance = Template.instance();\n\n    // Declare DOM and jQuery objects\n    const $parent = instance.$('.imageThumbnail');\n    const $loading = $parent.find('.imageThumbnailLoadingIndicator');\n    const $loadingError = $parent.find('.imageThumbnailErrorLoadingIndicator');\n    const $element = $parent.find('.imageThumbnailCanvas');\n    const element = $element.get(0);\n\n    instance.refreshImage = () => {\n        if (!element) {\n            return;\n        }\n\n        // Remove previously generated static images\n        $element.find('.static-image').remove();\n\n        // Enable cornerstone for thumbnail element again creating a new canvas\n        cornerstone.enable(element, { renderer: '' });\n\n        // Activate the loading state\n        $loading.css('display', 'block');\n\n        // Define a handler for success on image load\n        const loadSuccess = image => {\n            // Check to make sure the element is enabled.\n            try {\n                cornerstone.getEnabledElement(element);\n            } catch(error) {\n                return;\n            }\n\n            cornerstone.displayImage(element, image);\n\n            $element.one('cornerstoneimagerendered', event => {\n                const eventData = event.originalEvent.detail;\n                const { element } = eventData;\n                const enabledElement = cornerstone.getEnabledElement(element);\n\n                // Create a static image from\n                const imageElement = document.createElement('img');\n                imageElement.classList.add('static-image');\n                const dataUrl = enabledElement.canvas.toDataURL('image/jpeg', 1);\n                imageElement.src = dataUrl;\n\n                // Try to disable cornerstone for thumbnail element and remove its canvas\n                try {\n                    cornerstone.disable(element);\n                } catch (e) {}\n\n                $element.append(imageElement);\n\n                $loading.css('display', 'none');\n            });\n        };\n\n        // Define a handler for error on image load\n        const loadError = () => {\n            $loading.css('display', 'none');\n            $loadingError.css('display', 'block');\n        };\n\n        // Get the image ID\n        const imageId = instance.getThumbnailImageId();\n\n        // Call cornerstone image loader with the defined handlers\n        cornerstone.loadAndCacheImage(imageId).then(loadSuccess, loadError);\n    };\n\n    // Run this computation every time the current study is changed\n    instance.autorun(() => {\n        // Check if there is a reactive var set for current study\n        if (instance.data.currentStudy) {\n            // Register a dependency from this computation on current study\n            instance.data.currentStudy.dep.depend();\n        }\n\n        // Depend on external data and re-run this computation when it changes\n        Template.currentData();\n\n        // Wait for the new data and refresh the image thumbnail\n        Tracker.afterFlush(() => instance.refreshImage());\n    });\n});\n\nTemplate.imageThumbnail.onDestroyed(() => {\n    const instance = Template.instance();\n\n    // Declare DOM and jQuery objects\n    const $parent = instance.$('.imageThumbnail');\n    const $element = $parent.find('.imageThumbnailCanvas');\n    const element = $element.get(0);\n\n    // Try to disable the element if it still exists\n    try {\n        cornerstone.disable(element);\n    } catch (e) {}\n});\n\nTemplate.imageThumbnail.helpers({\n    // Executed every time the thumbnail image loading progress is changed\n    percentComplete() {\n        const instance = Template.instance();\n\n        // Get the encoded image ID for thumbnail\n        const encodedImageId = OHIF.string.encodeId(instance.getThumbnailImageId());\n\n        // Register a dependency from this computation on Session key\n        const percentComplete = Session.get('CornerstoneThumbnailLoadProgress' + encodedImageId);\n\n        // Return the complete percent amount of the image loading\n        if (percentComplete && percentComplete !== 100) {\n            return percentComplete + '%';\n        }\n    },\n\n    // Return how much the stack has already loaded\n    stackPercentComplete() {\n        const instance = Template.instance();\n        const stack = instance.data.thumbnail.stack;\n        const displaySetInstanceUid = stack.displaySetInstanceUid;\n        const progress = Session.get('StackProgress:' + displaySetInstanceUid);\n        const percentComplete = progress && progress.percentComplete;\n\n        return percentComplete;\n    },\n\n    showStackLoadingProgressBar() {\n        return OHIF.uiSettings.showStackLoadingProgressBar;\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\n// OHIF Modules\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\n// Local Modules\nimport { StackManager } from '../../../lib/StackManager';\nimport { setActiveViewport } from '../../../lib/setActiveViewport';\nimport { imageViewerViewportData } from '../../../lib/imageViewerViewportData';\nimport { updateCrosshairsSynchronizer } from '../../../lib/updateCrosshairsSynchronizer';\nimport { toolManager } from '../../../lib/toolManager';\nimport { updateOrientationMarkers } from '../../../lib/updateOrientationMarkers';\nimport { getInstanceClassDefaultViewport } from '../../../lib/instanceClassSpecificViewport';\nimport { OHIFError } from '../../../lib/classes/OHIFError';\n\nconst allCornerstoneEvents = ['click', 'cornerstonetoolsmousedown', 'cornerstonetoolsmousedownactivate',\n    'cornerstonetoolsmouseclick', 'cornerstonetoolsmousedrag', 'cornerstonetoolsmouseup',\n    'cornerstonetoolsmousewheel', 'cornerstonetoolsdoubletap', 'cornerstonetoolstouchpress',\n    'cornerstonetoolsmultitouchstart', 'cornerstonetoolsmultitouchstartactive', 'cornerstonetoolsmultitouchdrag'];\n\n/**\n * This function loads a study series into a viewport element.\n *\n * @param data {object} Object containing the study, series, and viewport element to be used\n */\nconst loadDisplaySetIntoViewport = (data, templateData) => {\n    OHIF.log.info('imageViewerViewport loadDisplaySetIntoViewport');\n\n    // Make sure we have all the data required to render the series\n    if (!data.study || !data.displaySet || !data.element) {\n        OHIF.log.warn('loadDisplaySetIntoViewport: No Study, Display Set, or Element provided');\n        return;\n    }\n\n    // Get the current element and it's index in the list of all viewports\n    // The viewport index is often used to store information about a viewport element\n    const element = data.element;\n    const viewportIndex = $('.imageViewerViewport').index(element);\n\n    const layoutManager = OHIF.viewerbase.layoutManager;\n    layoutManager.viewportData = layoutManager.viewportData || {};\n    layoutManager.viewportData[viewportIndex] = layoutManager.viewportData[viewportIndex] || {};\n    layoutManager.viewportData[viewportIndex].viewportIndex = viewportIndex;\n\n    // Stop here if no data was defined for the viewer\n    if (!OHIF.viewer.data) return;\n\n    // This data will be saved so that the viewport can be reloaded to the same state  later\n    OHIF.viewer.data.loadedSeriesData[viewportIndex] = {};\n\n    // Create shortcut to displaySet\n    const displaySet = data.displaySet;\n\n    // Get stack from Stack Manager\n    let stack = StackManager.findOrCreateStack(data.study, displaySet);\n\n    // If is a clip, updates the global FPS for cine dialog\n    if (stack.isClip && stack.frameRate > 0) {\n        // Sets the global variable\n        OHIF.viewer.cine.framesPerSecond = parseFloat(stack.frameRate);\n        // Update the cine dialog FPS\n        Session.set('UpdateCINE', Math.random());\n    }\n\n    // Shortcut for array with image IDs\n    const imageIds = stack.imageIds;\n\n    // Define the current image stack using the newly created image IDs\n    stack = {\n        currentImageIdIndex: data.currentImageIdIndex > 0 && data.currentImageIdIndex < imageIds.length ? data.currentImageIdIndex : 0,\n        imageIds: imageIds,\n        displaySetInstanceUid: data.displaySetInstanceUid\n    };\n\n    // Get the current image ID for the stack that will be rendered\n    const imageId = imageIds[stack.currentImageIdIndex];\n\n    // Save the current image ID inside the template data so it can be\n    // retrieved from the template helpers\n    templateData.imageId = imageId;\n\n    // Save the current image ID inside the ViewportLoading object.\n    //\n    // The ViewportLoading object relates the viewport elements with whichever\n    // image is currently being loaded into them. This is useful so that we can\n    // place progress (download %) for each image inside the proper viewports.\n    window.ViewportLoading[viewportIndex] = imageId;\n\n    // Enable Cornerstone for the viewport element\n    const options = {\n        renderer: OHIF.cornerstone.renderer\n    };\n    cornerstone.enable(element, options);\n\n    // Get the handler functions that will run when loading has finished or thrown\n    // an error. These are used to show/hide loading / error text boxes on each viewport.\n    const endLoadingHandler = cornerstoneTools.loadHandlerManager.getEndLoadHandler();\n    const errorLoadingHandler = cornerstoneTools.loadHandlerManager.getErrorLoadingHandler();\n\n    // Get the current viewport settings\n    const viewport = cornerstone.getViewport(element);\n\n    const { studyInstanceUid, seriesInstanceUid, displaySetInstanceUid, currentImageIdIndex } = data;\n\n    // Store the current series data inside the Layout Manager\n    layoutManager.viewportData[viewportIndex] = {\n        imageId,\n        studyInstanceUid,\n        seriesInstanceUid,\n        displaySetInstanceUid,\n        currentImageIdIndex,\n        viewport: viewport || data.viewport,\n        viewportIndex\n    };\n\n    // Handle the case where the imageId isn't loaded correctly and the\n    // imagePromise returns undefined\n    // To test, uncomment the next line\n    // data.imageId = 'AfileThatDoesntWork'; // For testing only!\n\n    let imagePromise;\n    try {\n        imagePromise = cornerstone.loadAndCacheImage(imageId);\n    } catch (error) {\n        OHIF.log.info(error);\n        if (!imagePromise) {\n            errorLoadingHandler(element, imageId, error);\n            return;\n        }\n    }\n\n    // Additional tasks for metadata provider. If using your own\n    // metadata provider, this may not be necessary.\n    // updateMetadata is important, though, to update image metadata that\n    // for any reason was missing some information such as rows, columns,\n    // sliceThickness, etc (See MetadataProvider class from ohif-cornerstone package)\n    const metadataProvider = OHIF.viewer.metadataProvider;\n    const isUpdateMetadataDefined = metadataProvider && typeof metadataProvider.updateMetadata === 'function';\n\n    // loadAndCacheImage configurable callbacks\n    const callbacks = imageViewerViewportData.callbacks;\n\n    // Check if it has before loadAndCacheImage callback\n    if (typeof callbacks.before === 'function') {\n        OHIF.log.info('imageViewerViewport before loadAndCacheImage callback');\n        callbacks.before(imagePromise, templateData);\n    }\n\n    // Start loading the image.\n    imagePromise.then(image => {\n        let enabledElement;\n        try {\n            enabledElement = cornerstone.getEnabledElement(element);\n        }\n        catch (error) {\n            OHIF.log.warn('Viewport destroyed before loaded image could be displayed');\n            return;\n        }\n\n        // Caches element's jQuery object\n        const $element = $(element);\n\n        // Update the enabled element with the image and viewport data\n        // This is not usually necessary, but we need them stored in case\n        // a sopClassUid-specific viewport setting is present.\n        enabledElement.image = image;\n        enabledElement.viewport = cornerstone.getDefaultViewport(enabledElement.canvas, image);\n\n        if (isUpdateMetadataDefined) {\n            // Update the metaData for missing fields\n            metadataProvider.updateMetadata(image);\n        }\n\n        // Check if there are default viewport settings for this sopClassUid\n        if (!displaySet.images || !displaySet.images.length) {\n            return;\n        }\n\n        const instance = displaySet.images[0];\n        const instanceClassViewport = getInstanceClassDefaultViewport(instance, enabledElement, image.imageId);\n\n        // If there are sopClassUid-specific viewport settings, apply them\n        if (instanceClassViewport) {\n            cornerstone.displayImage(element, image, instanceClassViewport);\n\n            // Mark that this element should not be fit to the window in the resize listeners\n            // TODO: Find another way to do this?\n            enabledElement.fitToWindow = false;\n\n            // Resize the canvas to fit the current viewport element size.\n            cornerstone.resize(element, false);\n        } else if (data.viewport) {\n            // If there is a saved object containing Cornerstone viewport data\n            // (e.g. scale, invert, window settings) in the input data, apply it now.\n            cornerstone.displayImage(element, image, data.viewport);\n\n            // Resize the canvas to fit the current viewport element size. Fit the displayed\n            // image to the canvas dimensions.\n            cornerstone.resize(element, true);\n        } else {\n            // If no saved viewport settings or modality-specific settings exists,\n            // display the loaded image in the viewport element with no loaded viewport\n            // settings.\n            cornerstone.displayImage(element, image);\n\n            // Resize the canvas to fit the current viewport element size. Fit the displayed\n            // image to the canvas dimensions.\n            cornerstone.resize(element, true);\n        }\n\n        // Remove the data for this viewport from the ViewportLoading object\n        // This will stop the loading percentage complete from being displayed.\n        delete window.ViewportLoading[viewportIndex];\n\n        // Call the handler function that represents the end of the image loading phase\n        // (e.g. hide the progress text box)\n        endLoadingHandler(element, image);\n\n        // Remove the 'empty' class from the viewport to hide any instruction text\n        element.classList.remove('empty');\n\n        // Hide the viewport instructions (i.e. 'Drag a stack here') and show\n        // the viewport overlay data.\n        $element.siblings('.viewportInstructions').hide();\n        $element.siblings('.imageViewerViewportOverlay').show();\n\n        // Add stack state managers for the stack tool, CINE tool, and reference lines\n        cornerstoneTools.addStackStateManager(element, ['stack', 'playClip', 'referenceLines']);\n\n        // Enable orientation markers, if applicable\n        updateOrientationMarkers(element);\n\n        // Clear any old stack data\n        cornerstoneTools.clearToolState(element, 'stack');\n        cornerstoneTools.addToolState(element, 'stack', stack);\n\n        // Set the default CINE settings\n        const multiframeMetadata = instance.getDataProperty('multiframeMetadata');\n\n        let fps;\n        if (multiframeMetadata && multiframeMetadata.averageFrameRate > 0) {\n            fps = multiframeMetadata.averageFrameRate;\n        } else {\n            fps = OHIF.viewer.cine.framesPerSecond;\n        }\n\n        const cineToolData = {\n            loop: OHIF.viewer.cine.loop,\n            framesPerSecond: fps\n        };\n\n        cornerstoneTools.addToolState(element, 'playClip', cineToolData);\n\n        // Autoplay datasets that have framerates set\n        if (multiframeMetadata && multiframeMetadata.isMultiframeImage && multiframeMetadata.averageFrameRate > 0) {\n            cornerstoneTools.playClip(element);\n        }\n\n        // Enable mouse, mouseWheel, touch, and keyboard input on the element\n        cornerstoneTools.mouseInput.enable(element);\n        cornerstoneTools.touchInput.enable(element);\n        cornerstoneTools.mouseWheelInput.enable(element);\n        cornerstoneTools.keyboardInput.enable(element);\n\n        // Use the tool manager to enable the currently active tool for this\n        // newly rendered element\n        const activeTool = toolManager.getActiveTool();\n        toolManager.setActiveTool(activeTool, [element]);\n\n        // Define a function to run whenever the Cornerstone viewport is rendered\n        // (e.g. following a change of window or zoom)\n        const onImageRendered = (event) => {\n            const eventData = event.detail;\n\n            // Attention: Adding OHIF.log.info in this function may decrease the performance\n            // since this callback function is called multiple times (eg: when a tool is\n            // enabled/disabled -> cornerstone[toolName].tool.enable)\n\n            if (!layoutManager.viewportData[viewportIndex]) {\n                OHIF.log.warn(`onImageRendered: LayoutManager has no viewport data for this viewport index?: ${viewportIndex}`);\n            }\n\n            // Use Session to trigger reactive updates in the viewportOverlay helper functions\n            // This lets the viewport overlay always display correct window / zoom values\n            Session.set('CornerstoneImageRendered' + viewportIndex, Math.random());\n\n            // Save the current viewport into the OHIF.viewer.data global variable\n            const viewport = cornerstone.getViewport(element);\n            layoutManager.viewportData[viewportIndex].viewport = viewport;\n            OHIF.viewer.data.loadedSeriesData[viewportIndex].viewport = viewport;\n\n            // Check if it has onImageRendered loadAndCacheImage callback\n            if (typeof callbacks.onImageRendered === 'function') {\n                callbacks.onImageRendered(event, eventData, viewportIndex, templateData);\n            }\n        };\n\n        // Attach the onImageRendered callback to the CornerstoneImageRendered event\n        element.removeEventListener('cornerstoneimagerendered', onImageRendered);\n        element.addEventListener('cornerstoneimagerendered', onImageRendered);\n\n        // Set a random value for the Session variable in order to trigger an overlay update\n        Session.set('CornerstoneImageRendered' + viewportIndex, Math.random());\n\n        // Define a function to run whenever the Cornerstone viewport changes images\n        // (e.g. during scrolling)\n        const onNewImage = (event) => {\n            const eventData = event.detail;\n\n            // Attention: Adding OHIF.log.info in this function may decrease the performance\n            // since this callback function is called multiple times (eg: when a tool is\n            // enabled/disabled -> cornerstone[toolName].tool.enable)\n\n            if (isUpdateMetadataDefined) {\n                // Update the metaData for missing fields\n                metadataProvider.updateMetadata(eventData.enabledElement.image);\n            }\n\n            // Update the templateData with the new imageId\n            // This allows the template helpers to update reactively\n            templateData.imageId = eventData.enabledElement.image.imageId;\n            Session.set('CornerstoneNewImage' + viewportIndex, Math.random());\n            layoutManager.viewportData[viewportIndex].imageId = eventData.enabledElement.image.imageId;\n\n            // Get the element and stack data\n            const element = event.target;\n            const toolData = cornerstoneTools.getToolState(element, 'stack');\n            if (!toolData || !toolData.data || !toolData.data.length) {\n                return;\n            }\n\n            // Update orientation markers in case new slices don't have the same orientation\n            // as the first slice\n            updateOrientationMarkers(element);\n\n            // If this viewport is displaying a stack of images, save the current image\n            // index in the stack to the global OHIF.viewer.data object.\n            const stack = cornerstoneTools.getToolState(element, 'stack');\n            if (stack && stack.data.length && stack.data[0].imageIds.length > 1) {\n                const imageIdIndex = stack.data[0].imageIds.indexOf(templateData.imageId);\n                layoutManager.viewportData[viewportIndex].currentImageIdIndex = imageIdIndex;\n                OHIF.viewer.data.loadedSeriesData[viewportIndex].currentImageIdIndex = imageIdIndex;\n            }\n\n            // Check if it has onNewImage loadAndCacheImage callback\n            if (typeof callbacks.onNewImage === 'function') {\n                callbacks.onNewImage(event, eventData, viewportIndex, templateData);\n            }\n        };\n\n        // Attach the onNewImage callback to the CornerstoneNewImage event\n        element.removeEventListener('cornerstonenewimage', onNewImage);\n        element.addEventListener('cornerstonenewimage', onNewImage);\n\n        // Set a random value for the Session variable in order to trigger an overlay update\n        Session.set('CornerstoneNewImage' + viewportIndex, Math.random());\n\n        const onStackScroll = () => {\n            // Attention: Adding OHIF.log.info in this function may decrease the performance\n            // since this callback function is called multiple times (eg: when a tool is\n            // enabled/disabled -> cornerstone[toolName].tool.enable)\n\n            // Update the imageSlider value\n            Session.set('CornerstoneNewImage' + viewportIndex, Math.random());\n        };\n\n        element.removeEventListener('cornerstonestackscroll', onStackScroll);\n        if (stack.imageIds.length > 1) {\n            element.addEventListener('cornerstonestackscroll', onStackScroll);\n        }\n\n        // Define a function to trigger an event whenever a new viewport is being used\n        // This is used to update the value of the \"active viewport\", when the user interacts\n        // with a new viewport element\n        const sendActivationTrigger = (event) => {\n            const eventData = event && event.detail;\n            // Attention: Adding OHIF.log.info in this function decrease the performance\n            // since this callback function is called multiple times (eg: when a tool is\n            // enabled/disabled -> cornerstone[toolName].tool.enable)\n\n            // Reset the focus, even if we don't need to re-enable reference lines or prefetching\n            const element = (eventData && eventData.element) || (event && event.currentTarget);\n            if (!element) return;\n            const $element = $(element);\n            $element.focus();\n\n            // Stop here if we don't have eventData set\n            if (!eventData) return;\n\n            // Check if the current active viewport in the Meteor Session\n            // Is the same as the viewport in which the activation event was fired.\n            // If it was, no changes are necessary, so stop here.\n            const activeViewportIndex = Session.get('activeViewport');\n            if (viewportIndex === activeViewportIndex) return;\n\n            OHIF.log.info('imageViewerViewport sendActivationTrigger');\n\n            // Otherwise, trigger an 'OHIFActivateViewport' event to be handled by the Template event\n            // handler\n            eventData.viewportIndex = viewportIndex;\n            const customEvent = $.Event('OHIFActivateViewport', eventData);\n\n            // Need to overwrite the type set in the original event\n            customEvent.type = 'OHIFActivateViewport';\n            $element.trigger(customEvent, eventData);\n        };\n\n        // Handle mouseenter event to send viewport activation trigger only if there is no focused dropdown\n        const onMouseEnter = () => {\n            if ($(':focus').closest('.dropdown').length) return;\n\n            sendActivationTrigger();\n        };\n\n        // Attach the sendActivationTrigger function to all of the Cornerstone interaction events\n        allCornerstoneEvents.forEach(eventType => {\n            element.removeEventListener(eventType, sendActivationTrigger);\n            element.addEventListener(eventType, sendActivationTrigger);\n        });\n        $element.off('mouseenter', onMouseEnter);\n        $element.on('mouseenter', onMouseEnter);\n\n        OHIF.viewer.data.loadedSeriesData = layoutManager.viewportData;\n\n        // Check if image plane (orientation / location) data is present for the current image\n        const imagePlane = cornerstone.metaData.get('imagePlane', image.imageId);\n        if (imagePlane && imagePlane.frameOfReferenceUID) {\n            // If it is, add this element to the global synchronizer...\n            OHIF.viewer.updateImageSynchronizer.add(element);\n\n            if (OHIF.viewer.refLinesEnabled) {\n                // ... and if reference lines are globally enabled, let cornerstoneTools know.\n                cornerstoneTools.referenceLines.tool.enable(element, OHIF.viewer.updateImageSynchronizer);\n            }\n\n            // If the crosshairs tool is active, update the synchronizer\n            // that is used for its synchronized viewport updating.\n            // This is necessary if this new image shares a frame of reference\n            // with currently displayed images\n            if (activeTool === 'crosshairs') {\n                updateCrosshairsSynchronizer(imagePlane.frameOfReferenceUID);\n            }\n        }\n\n        // Set the active viewport based on the Session variable\n        // This is done to ensure that the active element has the current\n        // focus, so that keyboard events are triggered.\n        if (viewportIndex === Session.get('activeViewport')) {\n            setActiveViewport(element);\n        }\n\n        // Run any renderedCallback that exists in the data context\n        if (data.renderedCallback && typeof data.renderedCallback === 'function') {\n            data.renderedCallback(element);\n        }\n\n        // Update the LayoutManagerUpdated session key\n        layoutManager.updateSession();\n\n        // Check if it has after loadAndCacheImage callback\n        if (typeof callbacks.after === 'function') {\n            OHIF.log.info('imageViewerViewport after callback');\n            callbacks.after(image, templateData, element);\n        }\n    }, error => {\n        // If something goes wrong while loading the image, fire the error handler.\n        errorLoadingHandler(element, imageId, error);\n    });\n};\n\n/**\n * This function sets the display set for the study and calls LoadDisplaySetIntoViewport function\n *\n * @param data includes study data\n * @param displaySetInstanceUid Display set information which is loaded in Template\n * @param templateData currentData of Template\n *\n */\nconst setDisplaySet = (data, displaySetInstanceUid, templateData) => {\n    const study = data.study;\n\n    if (!study) {\n        throw new OHIFError('Study does not exist');\n    }\n\n    let displaySets = study.displaySets;\n    if (!displaySets.length) {\n        displaySets = OHIF.viewerbase.sortingManager.getDisplaySets(study);\n        study.displaySets = displaySets;\n        study.setDisplaySets(displaySets);\n\n        study.forEachDisplaySet(displaySet => {\n            OHIF.viewerbase.stackManager.makeAndAddStack(study, displaySet);\n        });\n    }\n\n    if (!displaySets) {\n        throw new OHIFError('Study has no display sets');\n    }\n\n    displaySets.every(displaySet => {\n        if (displaySet.displaySetInstanceUid === displaySetInstanceUid) {\n            data.displaySet = displaySet;\n            return false;\n        }\n\n        return true;\n    });\n\n    // If we didn't find anything, stop here\n    if (!data.displaySet) {\n        data.displaySet = displaySets[0];\n        // throw new OHIFError('Display set not found in specified study!');\n    }\n\n    // Otherwise, load pass the data object into loadSeriesIntoViewport\n    loadDisplaySetIntoViewport(data, templateData);\n};\n\nMeteor.startup(() => {\n    window.ViewportLoading = window.ViewportLoading || {};\n    toolManager.configureLoadProcess();\n});\n\nTemplate.imageViewerViewport.onRendered(function() {\n    const templateData = Template.currentData();\n    OHIF.log.info('imageViewerViewport onRendered');\n\n    // When the imageViewerViewport template is rendered\n    const element = this.find('.imageViewerViewport');\n    this.element = element;\n    this.$element = $(element);\n\n    // Display the loading indicator for this element\n    this.$element.siblings('.imageViewerLoadingIndicator').css('display', 'block');\n\n    // Get the current active viewport index, if this viewport has the same index,\n    // add the CSS 'active' class to highlight this viewport.\n    const activeViewport = Session.get('activeViewport');\n\n    // Focus the viewport if it's the active one\n    if (templateData.viewportIndex === activeViewport) {\n        this.$element.focus();\n    }\n\n    let { currentImageIdIndex } = templateData;\n    const { viewport, studyInstanceUid, seriesInstanceUid, renderedCallback, displaySetInstanceUid } = templateData;\n\n    if (!currentImageIdIndex) {\n        currentImageIdIndex = 0;\n    }\n\n    // Calls extendData function to provide flexibility between systems\n    imageViewerViewportData.extendData(templateData);\n\n    // Create a data object to pass to the series loading function (loadSeriesIntoViewport)\n    const data = {\n        element,\n        viewport,\n        currentImageIdIndex,\n        displaySetInstanceUid,\n        studyInstanceUid,\n        seriesInstanceUid,\n        renderedCallback,\n        activeViewport\n    };\n\n    // If no displaySetInstanceUid was supplied, display the drag/drop\n    // instructions and then stop here since we don't know what to display in the viewport.\n    if (!displaySetInstanceUid) {\n        element.classList.add('empty');\n        this.$element.siblings('.imageViewerLoadingIndicator').css('display', 'none');\n        this.$element.siblings('.viewportInstructions').show();\n        return;\n    }\n\n    // @TypeSafeStudies\n    const study = OHIF.viewer.Studies.findBy({ studyInstanceUid });\n\n    data.study = study;\n    setDisplaySet(data, displaySetInstanceUid, templateData);\n\n    // Double click event handlers to handle viewport enlargement\n    function doubleClickHandler (event) {\n        const $element = $(this);\n        const { layoutManager } = OHIF.viewerbase;\n        const $viewports = $('.imageViewerViewport');\n\n        $element.trigger('ohif.viewer.viewport.toggleEnlargement');\n\n        // Get the double clicked viewport index\n        const viewportIndex = $viewports.index(event.currentTarget);\n\n        // Stop here if there's only one viewport\n        if (!layoutManager.isZoomed && $viewports.length <= 1) return;\n\n        // Enlarge the double clicked viewport\n        layoutManager.toggleEnlargement(viewportIndex);\n\n        // Wait for DOM re-rendering and update the active viewport\n        Tracker.afterFlush(() => {\n            let viewportIndexToZoom;\n            // Check if the viewer is zoomed\n            if (layoutManager.isZoomed) {\n                // Set the active viewport as the only one visible\n                viewportIndexToZoom = 0;\n            } else {\n                // Set the active viewport as the previous zoomed viewport\n                viewportIndexToZoom = layoutManager.zoomedViewportIndex || 0;\n            }\n            // Set zoomed viewport as active...\n            const element = $('.imageViewerViewport').get(viewportIndexToZoom);\n            setActiveViewport(element);\n        });\n    }\n\n    const doubleClickEvents = ['cornerstonetoolsmousedoubleclick', 'cornerstonetoolsdoubletap'];\n    doubleClickEvents.forEach(eventType => {\n        element.removeEventListener(eventType, doubleClickHandler);\n        element.addEventListener(eventType, doubleClickHandler);\n    });\n});\n\nTemplate.imageViewerViewport.onDestroyed(function() {\n    OHIF.log.info('imageViewerViewport onDestroyed');\n\n    // When a viewport element is being destroyed\n    const element = this.find('.imageViewerViewport');\n    const $element = $(element);\n    if (!element || $element.hasClass('empty') || !$element.find('canvas').length) {\n        return;\n    }\n\n    // Disable mouse functions\n    cornerstoneTools.mouseInput.disable(element);\n    cornerstoneTools.touchInput.disable(element);\n    cornerstoneTools.mouseWheelInput.disable(element);\n\n    OHIF.viewer.updateImageSynchronizer.remove(element);\n\n    // Clear the stack prefetch data\n    let stackPrefetchData = cornerstoneTools.getToolState(element, 'stackPrefetch');\n    stackPrefetchData = [];\n    cornerstoneTools.stackPrefetch.disable(element);\n\n    // Try to stop any currently playing clips\n    // Otherwise the interval will continuously throw errors\n    try {\n        const enabledElement = cornerstone.getEnabledElement(element);\n        if (enabledElement) {\n            cornerstoneTools.stopClip(element);\n        }\n    } catch (error) {\n        OHIF.log.warn(error);\n    }\n\n    // Trigger custom Destroy Viewport event\n    // for compatibility with other systems\n    $element.trigger('OHIFDestroyedViewport');\n\n    // Disable the viewport element with Cornerstone\n    // This also triggers the removal of the element from all available\n    // synchronizers, such as the one used for reference lines.\n    cornerstone.disable(element);\n});\n\nTemplate.imageViewerViewport.events({\n    'OHIFActivateViewport .imageViewerViewport'(event) {\n        OHIF.log.info('imageViewerViewport OHIFActivateViewport');\n        setActiveViewport(event.currentTarget);\n    }\n});\n","import { OHIF } from 'meteor/ohif:core';\nimport { Template } from 'meteor/templating';\n\nconst TOP_CLASS = 'top';\nconst BOTTOM_CLASS = 'bottom';\nconst MIDDLE_CLASS = 'middle';\n\nTemplate.gridLayout.helpers({\n    // Get the height percentage for each viewport\n    height() {\n        const instance = Template.instance();\n        const rows = instance.data.rows || 1;\n        return 100 / rows;\n    },\n\n    // Get the width percentage for each viewport\n    width() {\n        const instance = Template.instance();\n        const columns = instance.data.columns || 1;\n        return 100 / columns;\n    },\n\n    // Get class for each viewport, so each app\n    // using ohif-viewerbase can style on their own\n    getClass(index) {\n        const { rows, columns } = this;\n\n        if (rows === 1) {\n            return `${TOP_CLASS} ${BOTTOM_CLASS}`;\n        }\n\n        const actualRow = Math.floor(index / columns);\n            \n        if ( actualRow === 0 ) {\n            return TOP_CLASS;\n        }\n        if ( actualRow + 1 === rows ) {\n            return BOTTOM_CLASS;\n        }\n\n        return MIDDLE_CLASS;\n    },\n    \n    // Return the viewports list\n    viewports() {\n        const instance = Template.instance();\n        const rows = instance.data.rows;\n        const columns = instance.data.columns;\n        const numViewports = rows * columns;\n        const viewportData = instance.data.viewportData;\n        const numViewportsWithData = viewportData.length;\n\n        // Check if the viewportData length is different from the given\n        if (numViewportsWithData < numViewports) {\n            // Add the missing viewports\n            var difference = numViewports - numViewportsWithData;\n            for (var i = 0; i < difference; i++) {\n                viewportData.push({\n                    viewportIndex: numViewportsWithData + i + 1,\n                    rows,\n                    columns\n                });\n            }\n        } else if (numViewportsWithData > numViewports) {\n            // Remove the additional viewports\n            return viewportData.slice(0, numViewports);\n        }\n\n        // Return the viewports\n        return viewportData;\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\n\nMeteor.startup(() => {\n    // This checking is necessary because cornerstoneTools may not have some tools available.\n    // Example: when an app defines its own cornerstone's lib versions, so it \n    // uses only ohif-viewerbase and not ohif-cornerstone and those libs are added later.\n    if (cornerstoneTools.loadHandlerManager) {\n        cornerstoneTools.loadHandlerManager.setStartLoadHandler(startLoadingHandler);\n        cornerstoneTools.loadHandlerManager.setEndLoadHandler(doneLoadingHandler);\n        cornerstoneTools.loadHandlerManager.setErrorLoadingHandler(errorLoadingHandler);\n    }\n});\n\nlet loadHandlerTimeout;\n\nconst startLoadingHandler = element => {\n    clearTimeout(loadHandlerTimeout);\n    loadHandlerTimeout = setTimeout(() => {\n        console.log('startLoading');\n        const elem = $(element);\n        elem.siblings('.imageViewerErrorLoadingIndicator').css('display', 'none');\n        elem.find('canvas').not('.magnifyTool').addClass('faded');\n        elem.siblings('.imageViewerLoadingIndicator').css('display', 'block');\n    }, OHIF.viewer.loadIndicatorDelay);\n};\n\nconst doneLoadingHandler = element => {\n    clearTimeout(loadHandlerTimeout);\n    const elem = $(element);\n    elem.siblings('.imageViewerErrorLoadingIndicator').css('display', 'none');\n    elem.find('canvas').not('.magnifyTool').removeClass('faded');\n    elem.siblings('.imageViewerLoadingIndicator').css('display', 'none');\n};\n\nconst errorLoadingHandler = (element, imageId, error, source) => {\n    clearTimeout(loadHandlerTimeout);\n    const elem = $(element);\n\n    // Could probably chain all of these, but this is more readable\n    elem.find('canvas').not('.magnifyTool').removeClass('faded');\n    elem.siblings('.imageViewerLoadingIndicator').css('display', 'none');\n\n    // Don't display errors from the stackPrefetch tool\n    if (source === 'stackPrefetch') {\n        return;\n    }\n\n    const errorLoadingIndicator = elem.siblings('.imageViewerErrorLoadingIndicator');\n    errorLoadingIndicator.css('display', 'block');\n\n    // This is just used to expand upon some error messages that are sent\n    // when things fail. An example is a network error throwing the error\n    // which is only described as \"network\".\n    const errorDetails = {\n        network: 'A network error has occurred'\n        // We need to expand this further when we see more obscure error messages\n    };\n\n    if (errorDetails.hasOwnProperty(error)) {\n        error = errorDetails[error];\n    }\n\n    errorLoadingIndicator.find('.description').text(`An error has occurred while loading image: ${imageId}`);\n    if (error) {\n        errorLoadingIndicator.find('.details').text(`Details: ${error}`);\n    }\n};\n\nTemplate.loadingIndicator.helpers({\n    'percentComplete'() {\n        const percentComplete = Session.get('CornerstoneLoadProgress' + this.viewportIndex);\n        if (percentComplete && percentComplete !== 100) {\n            return `${percentComplete}%`;\n        }\n    }\n});\n","Template.annotationDialogs.onRendered(() => {\n    const instance = Template.instance();\n    const dialogIds = ['annotationDialog', 'relabelAnnotationDialog'];\n\n    dialogIds.forEach(id => {\n        const dialog = instance.$('#' + id);\n        dialog.draggable();\n        dialogPolyfill.registerDialog(dialog.get(0));\n    });\n});\n\n","import { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone } from 'meteor/ohif:cornerstone';\nimport { viewportOverlayUtils } from '../../../lib/viewportOverlayUtils';\nimport { getElementIfNotEmpty } from '../../../lib/getElementIfNotEmpty';\nimport { getStackDataIfNotEmpty } from '../../../lib/getStackDataIfNotEmpty';\n\nTemplate.viewportOverlay.onCreated(() => {\n    const instance = Template.instance();\n\n    instance.getImageIndex = () => {\n        const stack = getStackDataIfNotEmpty(instance.data.viewportIndex);\n        if (!stack || stack.currentImageIdIndex === undefined) return;\n\n        return stack.currentImageIdIndex;\n    };\n});\n\nTemplate.viewportOverlay.helpers({\n    wwwc() {\n        Session.get('CornerstoneImageRendered' + this.viewportIndex);\n\n        const element = getElementIfNotEmpty(this.viewportIndex);\n        if (!element) {\n            return '';\n        }\n\n        const viewport = cornerstone.getViewport(element);\n        if (!viewport) {\n            return '';\n        }\n\n        return 'W ' + viewport.voi.windowWidth.toFixed(0) + ' L ' + viewport.voi.windowCenter.toFixed(0);\n    },\n\n    zoom() {\n        Session.get('CornerstoneImageRendered' + this.viewportIndex);\n\n        const element = getElementIfNotEmpty(this.viewportIndex);\n        if (!element) {\n            return;\n        }\n\n        const viewport = cornerstone.getViewport(element);\n        if (!viewport) {\n            return;\n        }\n\n        return (viewport.scale * 100.0);\n    },\n\n    imageDimensions() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        const image = viewportOverlayUtils.getImage(this.viewportIndex);\n        if (!image) {\n            return '';\n        }\n\n        return image.width + ' x ' + image.height;\n    },\n\n    patientName() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getPatient.call(this, 'name');\n    },\n\n    patientId() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getPatient.call(this, 'id');\n    },\n\n    patientBirthDate() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getPatient.call(this, 'birthDate');\n    },\n\n    patientSex() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getPatient.call(this, 'sex');\n    },\n\n    studyDate() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getStudy.call(this, 'studyDate');\n    },\n\n    studyTime() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getStudy.call(this, 'studyTime');\n    },\n\n    studyDescription() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getStudy.call(this, 'studyDescription');\n    },\n\n    seriesDescription() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getSeries.call(this, 'seriesDescription');\n    },\n\n    frameRate() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        const frameTime = viewportOverlayUtils.getInstance.call(this, 'frameTime');\n        if (!frameTime) {\n            return;\n        }\n\n        const frameRate = 1000 / frameTime;\n        return frameRate.toFixed(1);\n    },\n\n    seriesNumber() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getSeries.call(this, 'seriesNumber');\n    },\n\n    instanceNumber() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getInstance.call(this, 'instanceNumber');\n    },\n\n    thickness() {\n        // Displays Slice Thickness (0018,0050)\n\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getInstance.call(this, 'sliceThickness');\n    },\n\n    location() {\n        // Displays Slice Location (0020,1041), if present.\n        // - Otherwise, displays Table Position (0018,9327)\n        // - TODO: Otherwise, displays a value derived from Image Position (Patient) (0020,0032)\n\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n        const sliceLocation = viewportOverlayUtils.getInstance.call(this, 'sliceLocation');\n        if (sliceLocation !== '') {\n            return sliceLocation;\n        }\n\n        const tablePosition = viewportOverlayUtils.getInstance.call(this, 'tablePosition');\n        if (tablePosition !== '') {\n            return tablePosition;\n        }\n\n        return viewportOverlayUtils.getInstance.call(this, 'imagePositionPatient');\n    },\n\n    spacingBetweenSlices() {\n        // Displays Spacing Between Slices (0018,0088), if present.\n\n        // TODO: Otherwise, displays a value derived from successive values\n        // of Image Position (Patient) (0020,0032) perpendicular to\n        // the Image Orientation (Patient) (0020,0037)\n\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getInstance.call(this, 'spacingBetweenSlices');\n    },\n\n    compression() {\n        // Displays whether or not lossy compression has been applied:\n        //\n        // - Checks Lossy Image Compression (0028,2110)\n        // - If so, displays the value of Lossy Image Compression Ratio (0028,2112)\n        //          and Lossy Image Compression Method (0028,2114)\n\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        if (!this.imageId) {\n            return false;\n        }\n\n        const instance = cornerstone.metaData.get('instance', this.imageId);\n        if (!instance) {\n            return '';\n        }\n\n        if (instance.lossyImageCompression === '01' &&\n            instance.lossyImageCompressionRatio !== '') {\n            const compressionMethod = instance.lossyImageCompressionMethod || 'Lossy: ';\n            const compressionRatio = parseFloat(instance.lossyImageCompressionRatio).toFixed(2);\n            return compressionMethod + compressionRatio + ' : 1';\n        }\n\n        return 'Lossless / Uncompressed';\n    },\n\n    tagDisplayLeftOnly() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getTagDisplay.call(this, 'side') === 'L';\n    },\n\n    tagDisplayRightOnly() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getTagDisplay.call(this, 'side') === 'R';\n    },\n\n    tagDisplaySpecified() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getTagDisplay.call(this, 'side');\n    },\n\n    imageNumber() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        return viewportOverlayUtils.getInstance.call(this, 'number');\n    },\n\n    imageIndex() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        const imageIndex = Template.instance().getImageIndex();\n        return _.isUndefined(imageIndex) ? 0 : imageIndex + 1;\n    },\n\n    numImages() {\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        const stack = getStackDataIfNotEmpty(this.viewportIndex);\n        if (!stack || !stack.imageIds) {\n            return;\n        }\n\n        return stack.imageIds.length;\n    },\n\n    prior() {\n        // This helper is updated whenever a new image is displayed in the viewport\n        Session.get('CornerstoneNewImage' + this.viewportIndex);\n\n        if (!this.imageId) {\n            return;\n        }\n\n        // @TypeSafeStudies\n        // Make sure there are more than two studies loaded in the viewer\n        const viewportStudies = OHIF.viewer.Studies.all();\n        if (viewportStudies.length < 2) {\n            return;\n        }\n\n        // Here we sort the collection in ascending order by study date, so\n        // that we can obtain the oldest study as the first element of the array\n        //\n        // TODO= Find out if we should encode studyDate as a Date in the OHIF.viewer.Studies Collection\n        const viewportStudiesArray = _.sortBy(viewportStudies, function(study) {\n            return viewportOverlayUtils.formatDateTime(study.studyDate, study.studyTime);\n        });\n\n        // Get study data\n        const study = cornerstone.metaData.get('study', this.imageId);\n        if (!study) {\n            return;\n        }\n\n        const oldestStudy = viewportStudiesArray[0];\n        if (viewportOverlayUtils.formatDateTime(study.studyDate, study.studyTime) <= viewportOverlayUtils.formatDateTime(oldestStudy.studyDate, oldestStudy.studyTime)) {\n            return 'Prior';\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { OHIF } from 'meteor/ohif:core';\n// Local Modules\nimport { unloadHandlers } from '../../../lib/unloadHandlers';\nimport { ResizeViewportManager } from '../../../lib/classes/ResizeViewportManager';\nimport { LayoutManager } from '../../../lib/classes/LayoutManager';\nimport { StudyPrefetcher } from '../../../lib/classes/StudyPrefetcher';\nimport { StudyLoadingListener } from '../../../lib/classes/StudyLoadingListener';\n\nMeteor.startup(() => {\n    window.ResizeViewportManager = window.ResizeViewportManager || new ResizeViewportManager();\n\n    // Set initial value for OHIFViewerMainRendered\n    // session variable. This can used in viewer main template\n    Session.set('OHIFViewerMainRendered', false);\n});\n\nTemplate.viewerMain.onCreated(() => {\n    // Attach the Window resize listener\n    // Don't use jQuery here. \"window.onresize\" will always be null\n    // If its necessary, check all the code for window.onresize getter\n    // and change it to jQuery._data(window, 'events')['resize'].\n    // Otherwise this function will be probably overrided.\n    // See cineDialog instance.setResizeHandler function\n    window.addEventListener('resize', window.ResizeViewportManager.getResizeHandler());\n\n    // Add beforeUnload event handler to check for unsaved changes\n    window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n});\n\nTemplate.viewerMain.onRendered(() => {\n    const instance = Template.instance();\n    const { studies } = instance.data;\n    const parentElement = instance.$('#layoutManagerTarget').get(0);\n    const studyPrefetcher = StudyPrefetcher.getInstance();\n    instance.studyPrefetcher = studyPrefetcher;\n\n    instance.studyLoadingListener = StudyLoadingListener.getInstance();\n    instance.studyLoadingListener.clear();\n    instance.studyLoadingListener.addStudies(studies);\n\n    OHIF.viewerbase.layoutManager = new LayoutManager(parentElement, studies);\n    studyPrefetcher.setStudies(studies);\n\n    Session.set('OHIFViewerMainRendered', Math.random());\n});\n\nTemplate.viewerMain.onDestroyed(() => {\n    const instance = Template.instance();\n\n    OHIF.log.info('viewerMain onDestroyed');\n\n    // Remove the Window resize listener\n    window.removeEventListener('resize', window.ResizeViewportManager.getResizeHandler());\n\n    // Remove beforeUnload event handler...\n    window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Destroy the synchronizer used to update reference lines\n    OHIF.viewer.updateImageSynchronizer.destroy();\n\n    delete OHIF.viewerbase.layoutManager;\n    ProtocolEngine = null;\n\n    Session.set('OHIFViewerMainRendered', false);\n\n    // Stop prefetching when we close the viewer\n    instance.studyPrefetcher.destroy();\n\n    // Destroy stack loading listeners when we close the viewer\n    instance.studyLoadingListener.clear();\n\n    // Clear references to all stacks in the StackManager\n    OHIF.viewerbase.stackManager.clearStacks();\n\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    OHIF.viewer.Studies.removeAll();\n\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    OHIF.viewer.StudyMetadataList.removeAll();\n});\n","import { Template } from 'meteor/templating';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\nimport { toolManager } from '../../../lib/toolManager';\n\nconst toolTypes = ['length', 'simpleAngle', 'probe', 'ellipticalRoi', 'rectangleRoi', 'arrowAnnotate'];\nconst TypeToLabelMap = {\n    length: 'Length',\n    simpleAngle: 'Angle',\n    probe: 'Probe',\n    ellipticalRoi: 'Elliptical ROI',\n    rectangleRoi: 'Rectangle ROI',\n    arrowAnnotate: 'Annotation'\n};\nlet dropdownItems = [{\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n        const element = eventData.element;\n\n        cornerstoneTools.removeToolState(element, nearbyToolData.toolType, nearbyToolData.tool);\n        cornerstone.updateImage(element);\n    }\n}];\n\nconst getTypeText = function(toolData, actionType) {\n    const toolType = toolData.toolType;\n    let message = `${TypeToLabelMap[toolType]}`;\n\n    if (toolType === 'arrowAnnotate') {\n        message = `${message} \"${toolData.tool.text}\"`;\n    }\n\n    return `${actionType} ${message}`;\n};\n\nconst createDropdown = function(eventData, isTouchEvent = false) {\n    const nearbyToolData = toolManager.getNearbyToolData(eventData.element, eventData.currentPoints.canvas, toolTypes);\n\n    // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n    if (isTouchEvent && nearbyToolData.toolType === 'arrowAnnotate') return;\n\n    if (nearbyToolData) {\n        dropdownItems.forEach(function(item) {\n            item.params = {\n                eventData,\n                nearbyToolData\n            };\n            item.text = getTypeText(nearbyToolData, item.actionType);\n        });\n\n        OHIF.ui.showDropdown(dropdownItems, {\n            menuClasses: 'dropdown-menu-left',\n            event: eventData.event\n        });\n    }\n};\n\nTemplate.viewerMain.events({\n    'cornerstonetoolsmouseclick .imageViewerViewport'(event) {\n        const { originalEvent } = event;\n        const eventData = originalEvent.detail;\n        if (eventData.which === 3) {\n            createDropdown(eventData);\n        }\n    },\n\n    'cornerstonetoolstouchpress .imageViewerViewport'(event) {\n        const { originalEvent } = event;\n        const eventData = originalEvent.detail;\n        createDropdown(eventData, true);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { $ } from 'meteor/jquery';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { setActiveViewport } from '../../../lib/setActiveViewport';\nimport { switchToImageByIndex } from '../../../lib/switchToImageByIndex';\n\nconst slideTimeoutTime = 40;\nlet slideTimeout;\n\nTemplate.imageControls.onRendered(() => {\n    const instance = Template.instance();\n\n    // Set the current imageSlider width to its parent's height\n    // (because webkit is stupid and can't style vertical sliders)\n    const $slider = instance.$('.imageSlider');\n    const $viewport = $slider.closest('.imageViewerViewportOverlay').siblings('.imageViewerViewport');\n\n    instance.handleResize = _.throttle(() => {\n        const viewportHeight = $viewport.height();\n        $slider.width(viewportHeight - 20);\n    }, 150);\n\n    instance.handleResize();\n\n    $(window).on('resize', instance.handleResize);\n});\n\nTemplate.imageControls.onDestroyed(() => {\n    const instance = Template.instance();\n    $(window).off('resize', instance.handleResize);\n});\n\nTemplate.imageControls.events({\n    'rescale .scrollbar'(event, instance) {\n        instance.handleResize();\n    },\n\n    'keydown input[type=range]'(event) {\n        // We don't allow direct keyboard up/down input on the\n        // image sliders since the natural direction is reversed (0 is at the top)\n\n        // Store the KeyCodes in an object for readability\n        const keys = {\n            DOWN: 40,\n            UP: 38\n        };\n\n        if (event.which === keys.DOWN) {\n            OHIF.commands.run('scrollDown');\n            event.preventDefault();\n        } else if (event.which === keys.UP) {\n            OHIF.commands.run('scrollUp');\n            event.preventDefault();\n        }\n    },\n\n    'input input[type=range], change input[type=range]'(event) {\n        // Note that we throttle requests to prevent the\n        // user's ultrafast scrolling from firing requests too quickly.\n        clearTimeout(slideTimeout);\n        slideTimeout = setTimeout(() => {\n            // Using the slider in an inactive viewport\n            // should cause that viewport to become active\n            const $slider = $(event.currentTarget);\n            const newActiveElement = $slider.parents('.viewportContainer').find('.imageViewerViewport');\n            setActiveViewport(newActiveElement);\n\n            // Subtract 1 here since the slider goes from 1 to N images\n            // But the stack indexing starts at 0\n            const newImageIdIndex = parseInt($slider.val(), 10) - 1;\n            switchToImageByIndex(newImageIdIndex);\n        }, slideTimeoutTime);\n\n        return false;\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { $ } from 'meteor/jquery';\nimport { viewportUtils } from '../../../lib/viewportUtils';\n\nTemplate.layoutButton.events({\n    // TODO: Check why 'click' event won't fire?\n    'mousedown .js-dropdown-toggle'(event) {\n        // Select the button and it's target dropdown menu\n        const $button = $(event.currentTarget);\n        const $dropdown = $($button.data('target'));\n\n        // Adjust the dropdown's CSS to properly place it on the page\n        $dropdown.css({\n            top: $button.offset().top + $button.outerHeight() + 'px',\n            left: $button.offset().left + 'px'\n        });\n\n        // Open or close the layout chooser dialog\n        viewportUtils.toggleDialog($dropdown);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\nimport { viewportUtils } from '../../../lib/viewportUtils';\n\nTemplate.layoutChooser.onRendered(() => {\n    const instance = Template.instance();\n\n    /**\n     * Adds the 'hover' class to cells above and to the left of the current cell\n     * This is used to \"fill in\" the grid that the user will change the layout to,\n     * if they click on a specific table cell.\n     *\n     * @param currentCell\n     */\n    instance.highlightCells = currentCell => {\n        const cells = this.$('.layoutChooser table td');\n        cells.removeClass('hover');\n\n        currentCell = this.$(currentCell);\n        const table = currentCell.parents('.layoutChooser table').get(0);\n        const rowIndex = currentCell.closest('tr').index();\n        const columnIndex = currentCell.index();\n\n        // Loop through the table row by row\n        // and cell by cell to apply the highlighting\n        for (let i = table.rows.length - 1; i >= 0; i--) {\n            const row = table.rows[i];\n            if (i <= rowIndex) {\n                for (let j = row.cells.length - 1; j >= 0; j--) {\n                    if (j <= columnIndex) {\n                        const cell = row.cells[j];\n                        cell.classList.add('hover');\n                    }\n                }\n            }\n        }\n    };\n\n    // Refresh layout chooser highlighting based on current viewports state\n    instance.refreshHighlights = () => {\n        // Stop here if layoutManager is not defined yet\n        if (!OHIF.viewerbase.layoutManager) {\n            return;\n        }\n\n        // Get the layout rows and columns amount\n        const info = OHIF.viewerbase.layoutManager.layoutProps;\n\n        // get the limiter cell\n        const cell = instance.$('tr').eq(info.rows - 1).children().eq(info.columns - 1);\n\n        // Highlight all cells before the limiter\n        instance.highlightCells(cell);\n    };\n\n    instance.autorun(() => {\n        // Run this computation every time the viewer layout is changed\n        Session.get('LayoutManagerUpdated');\n\n        instance.refreshHighlights();\n    });\n});\n\nTemplate.layoutChooser.events({\n    'touchstart .layoutChooser table td, mouseenter .layoutChooser table td'(event, instance) {\n        instance.highlightCells(event.currentTarget);\n    },\n\n    'mouseleave .layoutChooser'(event, instance) {\n        instance.refreshHighlights();\n    },\n\n    'click .layoutChooser table td'(event, instance) {\n        const $currentCell = instance.$(event.currentTarget);\n        const rowIndex = $currentCell.closest('tr').index();\n        const columnIndex = $currentCell.index();\n\n        // Add 1 because the indices start from zero\n        const layoutProps = {\n            rows: rowIndex + 1,\n            columns: columnIndex + 1\n        };\n\n        OHIF.viewerbase.layoutManager.layoutTemplateName = 'gridLayout';\n        OHIF.viewerbase.layoutManager.layoutProps = layoutProps;\n        OHIF.viewerbase.layoutManager.updateViewports();\n\n        const $dropdown = instance.$('.layoutChooser');\n        viewportUtils.toggleDialog($dropdown);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Session } from 'meteor/session';\nimport { Tracker } from 'meteor/tracker';\nimport { _ } from 'meteor/underscore';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstoneTools } from 'meteor/ohif:cornerstone';\nimport { viewportUtils } from '../../../lib/viewportUtils';\nimport { switchToImageRelative } from '../../../lib/switchToImageRelative';\nimport { switchToImageByIndex } from '../../../lib/switchToImageByIndex';\n\nTemplate.cineDialog.onCreated(() => {\n    const instance = Template.instance();\n\n    // Create the data schema for CINE controls\n    instance.schema = new SimpleSchema({\n        intervalId: {\n            type: Number,\n            optional: true\n        },\n        loop: {\n            type: Boolean,\n            label: 'Loop',\n            defaultValue: true\n        },\n        framesPerSecond: {\n            type: Number,\n            label: '',\n            defaultValue: 24,\n            min: 1,\n            max: 90,\n            optional: true\n        }\n    });\n\n    // Update the current viewport frame rate\n    instance.updateFramerate = rate => {\n        OHIF.viewer.cine.framesPerSecond = rate;\n\n        // Update playClip toolData for this imageId\n        const element = viewportUtils.getActiveViewportElement();\n        if (!element) {\n            return;\n        }\n\n        let playClipData = cornerstoneTools.getToolState(element, 'playClip');\n        if (!playClipData || !playClipData.data || !playClipData.data.length) {\n            return;\n        }\n\n        // A valid playClip data object is available.\n        playClipData = playClipData.data[0];\n\n        // If the movie is playing, stop/start to update the framerate\n        if (playClipData.intervalId !== void 0) {\n            cornerstoneTools.stopClip(element);\n            cornerstoneTools.playClip(element, OHIF.viewer.cine.framesPerSecond);\n        } else {\n            playClipData.framesPerSecond = OHIF.viewer.cine.framesPerSecond;\n        }\n\n        Session.set('UpdateCINE', Math.random());\n    };\n\n    // Define the actions API\n    instance.api = {\n        displaySetPrevious: () => OHIF.viewerbase.layoutManager.moveDisplaySets(false),\n        displaySetNext: () => OHIF.viewerbase.layoutManager.moveDisplaySets(true),\n        cineToggle: () => viewportUtils.toggleCinePlay(),\n        cineFirst: () => switchToImageByIndex(0),\n        cineLast: () => switchToImageByIndex(-1),\n        cinePrevious: () => switchToImageRelative(-1),\n        cineNext: () => switchToImageRelative(1),\n        cineSlowDown: () => {\n            const newValue = OHIF.viewer.cine.framesPerSecond - 1;\n            if (newValue > 0) {\n                instance.updateFramerate(newValue);\n            }\n        },\n        cineSpeedUp: () => {\n            const newValue = OHIF.viewer.cine.framesPerSecond + 1;\n            if (newValue <= 90) {\n                instance.updateFramerate(newValue);\n            }\n        }\n    };\n\n    // Run this computation every time the active viewport is changed\n    instance.autorun(() => {\n        Session.get('activeViewport');\n\n        Tracker.afterFlush(() => {\n            // Get the active viewportElement\n            const element = viewportUtils.getActiveViewportElement();\n            if (!element) {\n                return;\n            }\n\n            // check if playClip tool has been initialized...\n            const playClipData = cornerstoneTools.getToolState(element, 'playClip');\n            if (!playClipData) {\n                return;\n            }\n\n            // Get the cornerstone playClip tool data\n            const toolData = playClipData.data[0];\n\n            // Get the cine object\n            const cine = OHIF.viewer.cine;\n\n            // replace the cine values with the tool data\n            _.extend(cine, toolData);\n\n            // Set the defaults\n            cine.framesPerSecond = cine.framesPerSecond || 24;\n            cine.loop = _.isUndefined(cine.loop) ? true : cine.loop;\n\n            // Set the updated data on the form inputs\n            const elementComponent = instance.$('form:first').data('component');\n            if (elementComponent) {\n                elementComponent.value(cine);\n            }\n\n            // Update the session to refresh the framerate text\n            Session.set('UpdateCINE', Math.random());\n        });\n    });\n\n    /**\n     * Set/Reset Window resize handler. This function is a replacement for\n     * ... jQuery's on('resize', func) version which, for some unkown reason\n     * ... is currently not working for this portion of code.\n     * ... Further investigation is necessary.\n     *\n     * This happens because when an event is attached using jQuery's\n     * you can't get it using vanilla JavaScript, it returns null.\n     * You need to use jQuery for that. So, either you use vanilla JS or jQuery\n     * to get an element's event handler. See viewerMain for more details.\n     */\n\n    instance.setResizeHandler = handler => {\n        if (typeof handler === 'function') {\n            const origHandler = window.onresize;\n            instance.origWindowResizeHandler = typeof origHandler === 'function' ? origHandler : null;\n            window.onresize = event => {\n                if (typeof origHandler === 'function') {\n                    origHandler.call(window, event);\n                }\n\n                handler.call(window, event);\n            };\n        } else {\n            window.onresize = instance.origWindowResizeHandler || null;\n            window.origWindowResizeHandler = null;\n        }\n    };\n\n    /**\n     * Set optimal position for Cine dialog.\n     */\n\n    instance.setOptimalPosition = (event, options) => {\n        const $viewer = $('#viewer');\n        const $toolbarElement = $('.toolbarSection .toolbarSectionTools:first');\n        const $cineDialog = $('#cineDialog');\n        $cineDialog.width($('#cineDialogForm').outerWidth());\n\n        if ($toolbarElement.length < 1 || $cineDialog.length < 1) {\n            return;\n        }\n\n        if ($cineDialog.data('wasDragged') || $cineDialog.data('wasBounded')) {\n            // restore original handler...\n            instance.setResizeHandler(null);\n            return;\n        }\n\n        const cineDialogSize = {\n            width: $cineDialog.outerWidth() || 0,\n            height: $cineDialog.outerHeight() || 0\n        };\n\n        const topLeftCoords = {\n            top: 0,\n            left: 0\n        };\n\n        const toolbarRect = {\n            offset: $toolbarElement.offset() || topLeftCoords,\n            width: $toolbarElement.outerWidth() || 0,\n            height: $toolbarElement.outerHeight() || 0\n        };\n\n        const cineDialogCoords = {\n            left: toolbarRect.offset.left + toolbarRect.width + 20,\n            top: toolbarRect.offset.top + toolbarRect.height - cineDialogSize.height\n        };\n\n        if (options) {\n            if (options.left) {\n                cineDialogCoords.left = options.left;\n            }\n\n            if (options.top) {\n                cineDialogCoords.top = options.top;\n            }\n        }\n\n        // Check if it is out of screen\n        if (cineDialogCoords.top < 0) {\n            cineDialogCoords.top = 0;\n        } else if (cineDialogCoords.top + cineDialogSize.height > $viewer.height()) {\n            cineDialogCoords.top -= (cineDialogCoords.top + cineDialogSize.height) - $viewer.height();\n        }\n\n        if (cineDialogCoords.left < 0) {\n            cineDialogCoords.left = 0;\n        } else if (cineDialogCoords.left + cineDialogSize.width > $viewer.width()) {\n            cineDialogCoords.left -= (cineDialogCoords.left + cineDialogSize.width) - $viewer.width();\n        }\n\n        $cineDialog.css(cineDialogCoords);\n    };\n});\n\nTemplate.cineDialog.onRendered(() => {\n    const instance = Template.instance();\n    const $dialog = instance.$('#cineDialog');\n    const singleRowLayout = OHIF.uiSettings.displayEchoUltrasoundWorkflow;\n\n    // set dialog in optimal position and make sure it continues in a optimal position...\n    // ... when the window has been resized\n    instance.setOptimalPosition(null, { top: singleRowLayout ? 47 : 26 });\n\n    // The jQuery method does not seem to be working...\n    // ... $(window).resize(instance.setOptimalPosition)\n    // This requires additional investigation.\n    instance.setResizeHandler(instance.setOptimalPosition);\n\n    // Make the CINE dialog bounded and draggable\n    $dialog.draggable({ defaultElementCursor: 'move' }).bounded();\n\n    // Polyfill for older browsers\n    window.dialogPolyfill.registerDialog($dialog.get(0));\n\n    // Prevent dialog from being dragged when user clicks any button\n    const $controls = $dialog.find('.cine-navigation, .cine-controls, .cine-options');\n    $controls.on('mousedown touchstart', event => event.stopPropagation());\n});\n\nTemplate.cineDialog.onDestroyed(() => {\n    const instance = Template.instance();\n    // remove resize handler...\n    instance.setResizeHandler(null);\n});\n\nTemplate.cineDialog.events({\n    'change [data-key=loop] input'(event, instance) {\n        const element = viewportUtils.getActiveViewportElement();\n        OHIF.viewer.cine.loop = $(event.currentTarget).is(':checked');\n        // Update playClip tool data if available.\n        let playClipData = cornerstoneTools.getToolState(element, 'playClip');\n        if (playClipData && playClipData.data && playClipData.data.length > 0) {\n            playClipData.data[0].loop = OHIF.viewer.cine.loop;\n        }\n    },\n\n    'input [data-key=framesPerSecond] input, change [data-key=framesPerSecond] input'(event, instance) {\n        // Update the FPS text onscreen\n        const rate = parseFloat($(event.currentTarget).val());\n        instance.updateFramerate(rate);\n    },\n\n    'click .button-close'(event, instance) {\n        OHIF.commands.run('toggleCineDialog');\n    }\n});\n\nTemplate.cineDialog.helpers({\n    isPlaying() {\n        return viewportUtils.isPlaying();\n    },\n\n    framerate() {\n        Session.get('UpdateCINE');\n        return OHIF.viewer.cine.framesPerSecond.toFixed(1);\n    },\n\n    displaySetDisabled(isNext) {\n        Session.get('LayoutManagerUpdated');\n\n        // @TODO: Investigate why this is running while OHIF.viewerbase.layoutManager is undefined\n        if (!OHIF.viewerbase.layoutManager) {\n            return;\n        }\n\n        return !OHIF.viewerbase.layoutManager.canMoveDisplaySets(isNext) ? 'disabled' : '';\n    },\n\n    buttonDisabled() {\n        return viewportUtils.hasMultipleFrames();\n    },\n\n    getClassNames(baseClass) {\n        const style = OHIF.uiSettings.displayEchoUltrasoundWorkflow ? 'single' : 'double';\n        return `${baseClass} ${style}-row-style`;\n    }\n\n});\n","import { Template } from 'meteor/templating';\nimport { Tracker } from 'meteor/tracker';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\n\nOHIF.viewerbase.getImageDownloadDialogAnnotationTools = () => {\n    return ['length', 'probe', 'simpleAngle', 'arrowAnnotate', 'ellipticalRoi', 'rectangleRoi'];\n};\n\nTemplate.imageDownloadDialog.onCreated(() => {\n    const instance = Template.instance();\n\n    instance.schema = new SimpleSchema({\n        width: { type: Number },\n        height: { type: Number },\n        name: {\n            type: String,\n            defaultValue: 'image'\n        },\n        type: {\n            type: String,\n            allowedValues: ['jpeg', 'png'],\n            valuesLabels: ['JPEG', 'PNG'],\n            defaultValue: 'jpeg'\n        },\n        showAnnotations: {\n            type: Boolean,\n            label: 'Show Annotations',\n            defaultValue: true\n        },\n        quality: {\n            type: Number,\n            defaultValue: 100\n        }\n    });\n\n    instance.changeObserver = new Tracker.Dependency();\n\n    instance.keepAspect = new ReactiveVar(true);\n    instance.showAnnotations = new ReactiveVar(false);\n\n    instance.lastImage = {};\n\n    instance.getConfirmCallback = () => () => {\n        instance.downloadImage();\n    };\n});\n\nTemplate.imageDownloadDialog.onRendered(() => {\n    const instance = Template.instance();\n    const { viewportUtils } = OHIF.viewerbase;\n\n    instance.$viewportElement = instance.$('.viewport-element');\n    instance.viewportElement = instance.$viewportElement[0];\n    instance.$viewportPreview = instance.$('.viewport-preview');\n    instance.viewportPreview = instance.$viewportPreview[0];\n\n    cornerstone.enable(instance.viewportElement);\n    instance.downloadCanvas = $(instance.viewportElement).find('canvas')[0];\n\n    instance.form = instance.$('form').data('component');\n\n    instance.setElementSize = (element, canvas, size, value) => {\n        $(element)[size](value);\n        canvas[size] = value;\n        canvas.style[size] = `${value}px`;\n\n        instance.form.item(size).$element.val(value);\n    };\n\n    instance.toggleAnnotations = toggle => {\n        const action = toggle ? 'enable' : 'disable';\n        const annotationTools = OHIF.viewerbase.getImageDownloadDialogAnnotationTools();\n        annotationTools.forEach(tool => cornerstoneTools[tool][action](instance.viewportElement));\n    };\n\n    instance.updateViewportPreview = () => {\n        instance.$viewportElement.one('cornerstoneimagerendered', event => {\n            // Wait for the tools to handle CornerstoneImageRendered event\n            Tracker.afterFlush(() => {\n                const enabledElement = cornerstone.getEnabledElement(event.currentTarget);\n                const formData = instance.form.value();\n                const image = instance.viewportPreview;\n                const type = 'image/' + formData.type;\n                const quality = formData.type === 'png' ? 1 : formData.quality / 100;\n                const dataUrl = instance.downloadCanvas.toDataURL(type, quality);\n                image.src = dataUrl;\n\n                const $element = $(enabledElement.element);\n                let width = $element.width();\n                let height = $element.height();\n                if (width > 512 || height > 512) {\n                    const multiplier = 512 / Math.max(width, height);\n                    height *= multiplier;\n                    width *= multiplier;\n                }\n\n                image.width = width;\n                image.height = height;\n            });\n        });\n    };\n\n    // TODO: Add quality parameter to cornerstoneTools' saveAs method\n    instance.downloadImage = () => {\n        const formData = instance.form.value();\n        const link = document.createElement('a');\n        link.download = `${formData.name}.${formData.type}`;\n        link.href = instance.viewportPreview.src;\n\n        // Create a 'fake' click event to trigger the download\n        if (document.createEvent) {\n            const event = document.createEvent('MouseEvents');\n            event.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            link.dispatchEvent(event);\n        } else if (link.fireEvent) {\n            link.fireEvent('onclick');\n        }\n    };\n\n    instance.autorun(() => {\n        instance.changeObserver.depend();\n        Session.get('UpdateDownloadViewport');\n        const activeViewport = viewportUtils.getActiveViewportElement();\n\n        if (activeViewport) {\n            const enabledElement = cornerstone.getEnabledElement(activeViewport);\n\n            const viewport = Object.assign({}, enabledElement.viewport);\n            delete viewport.scale;\n            viewport.translation = {\n                x: 0,\n                y: 0\n            };\n\n            cornerstone.loadImage(enabledElement.image.imageId).then(image => {\n                instance.lastImage = image;\n                const { viewportElement, downloadCanvas } = instance;\n                const formData = instance.form.value();\n\n                cornerstone.displayImage(viewportElement, image);\n                cornerstone.setViewport(viewportElement, viewport);\n                cornerstone.resize(viewportElement, true);\n\n                instance.toggleAnnotations(formData.showAnnotations);\n\n                const width = Math.min(formData.width || image.width, 16384);\n                const height = Math.min(formData.height || image.height, 16384);\n                instance.setElementSize(viewportElement, downloadCanvas, 'width', width);\n                instance.setElementSize(viewportElement, downloadCanvas, 'height', height);\n\n                cornerstone.fitToWindow(viewportElement);\n                instance.updateViewportPreview();\n            });\n        }\n    });\n});\n\nTemplate.imageDownloadDialog.events({\n    'click .js-keep-aspect'(event, instance) {\n        const currentState = instance.keepAspect.get();\n        instance.keepAspect.set(!currentState);\n        instance.$('[data-key=width]').trigger('input');\n    },\n\n    'change [data-key=showAnnotations], change [data-key=type]'(event, instance) {\n        instance.changeObserver.changed();\n    },\n\n    'input [data-key=quality]'(event, instance) {\n        instance.changeObserver.changed();\n    },\n\n    'input [data-key=width]'(event, instance) {\n        const { viewportElement, downloadCanvas } = instance;\n        const formData = instance.form.value();\n        const { width, height } = instance.lastImage;\n        const newWidth = formData.width;\n        instance.setElementSize(viewportElement, downloadCanvas, 'width', newWidth);\n        if (instance.keepAspect.get()) {\n            const multiplier = newWidth / width;\n            const newHeight = Math.round(height * multiplier);\n            instance.setElementSize(viewportElement, downloadCanvas, 'height', newHeight);\n        }\n\n        instance.changeObserver.changed();\n    },\n\n    'input [data-key=height]'(event, instance) {\n        const { viewportElement, downloadCanvas } = instance;\n        const formData = instance.form.value();\n        const { width, height } = instance.lastImage;\n        const newHeight = formData.height;\n        instance.setElementSize(viewportElement, downloadCanvas, 'height', newHeight);\n        if (instance.keepAspect.get()) {\n            const multiplier = newHeight / height;\n            const newWidth = Math.round(width * multiplier);\n            instance.setElementSize(viewportElement, downloadCanvas, 'width', newWidth);\n        }\n\n        instance.changeObserver.changed();\n    }\n});\n\nTemplate.imageDownloadDialog.helpers({\n    keepAspect() {\n        return Template.instance().keepAspect.get();\n    },\n\n    showQuality() {\n        const instance = Template.instance();\n        instance.changeObserver.depend();\n        if (!instance.form) return true;\n        return instance.form.item('type').value() === 'jpeg';\n    }\n});\n","import { OHIF } from 'meteor/ohif:core';\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { _ } from 'meteor/underscore';\n\nTemplate.toolbarSectionButton.onCreated(() => {\n    const instance = Template.instance();\n\n    instance.isActive = activeToolId => {\n        OHIF.commands.last.dep.depend();\n        const subTools = instance.data.subTools;\n        const currentId = instance.data.id;\n        const isCurrentTool = currentId === activeToolId;\n        const isSubTool = subTools && _.findWhere(subTools, { id: activeToolId });\n        const activeCommandButtons = Session.get('ToolManagerActiveCommandButtons') || [];\n        const isActiveCommandButton = activeCommandButtons.indexOf(instance.data.id) !== -1;\n        const isActive = typeof instance.data.active === 'function' && instance.data.active();\n\n        // Check if the current tool, a sub tool or a command button is active\n        return isActive || isCurrentTool || isSubTool || isActiveCommandButton;\n    };\n\n    instance.getActiveToolSubProperty = (propertyName, activeToolId) => {\n        const instance = Template.instance();\n        const subTools = instance.data.subTools;\n        const defaultProperty = instance.data[propertyName];\n        const currentId = instance.data.id;\n\n        if (subTools && activeToolId !== currentId && instance.isActive(activeToolId)) {\n            const subTool = _.findWhere(subTools, { id: activeToolId });\n            return subTool ? subTool[propertyName] : defaultProperty;\n        } else {\n            return defaultProperty;\n        }\n    };\n\n    instance.autorun(computation => {\n        Session.get('ToolManagerActiveToolUpdated');\n\n        // Get the last executed command\n        const lastCommand = OHIF.commands.last.get();\n\n        // Prevent running this computation on its first run\n        if (computation.firstRun) return;\n\n        // Stop here if it's not the last command or if it's already an active tool\n        const { id } = instance.data;\n        const activeToolId = OHIF.viewerbase.toolManager.getActiveTool();\n        if (lastCommand !== id || instance.isActive(activeToolId)) return;\n\n        // Add an active class to a button for 100ms to give the impression the button was pressed\n        const flashButton = $element => {\n            $element.addClass('active');\n            setTimeout(() => {\n                if ($element.hasClass('expandable') && $element.find('.toolbarSectionButton.active').length) return;\n\n                const activeToolId = OHIF.viewerbase.toolManager.getActiveTool();\n                const isActive = instance.isActive(activeToolId);\n                if (!isActive) {\n                    $element.removeClass('active');\n                }\n            }, 100);\n        };\n\n        // Flash the active button\n        const $button = instance.$('.toolbarSectionButton').first();\n        flashButton($button);\n\n        // Flash the parent button as well in case of this button is inside a drawer\n        const $parentButton = $button.closest('.toolbarSectionButton.expandable');\n        if ($parentButton.length) {\n            flashButton($parentButton);\n        }\n    });\n});\n\nTemplate.toolbarSectionButton.helpers({\n    activeClass() {\n        Session.get('ToolManagerActiveToolUpdated');\n        const instance = Template.instance();\n        const activeToolId = OHIF.viewerbase.toolManager.getActiveTool();\n        const isActive = instance.isActive(activeToolId);\n        return isActive ? 'active' : '';\n    },\n\n    svgLink() {\n        Session.get('ToolManagerActiveToolUpdated');\n        const instance = Template.instance();\n        const activeToolId = OHIF.viewerbase.toolManager.getActiveTool();\n        const svgLink = instance.getActiveToolSubProperty('svgLink', activeToolId);\n        return _.isFunction(svgLink) ? svgLink() : svgLink;\n    },\n\n    iconClasses() {\n        Session.get('ToolManagerActiveToolUpdated');\n        const instance = Template.instance();\n        const activeToolId = OHIF.viewerbase.toolManager.getActiveTool();\n        const iconClasses = instance.getActiveToolSubProperty('iconClasses', activeToolId);\n        return _.isFunction(iconClasses) ? iconClasses() : iconClasses;\n    },\n\n    disableButton() {\n        Session.get('activeViewport');\n        Session.get('LayoutManagerUpdated');\n        const instance = Template.instance();\n        const isCommandDisabled = OHIF.commands.isDisabled(instance.data.id);\n        const isFunctionDisabled = instance.data.disableFunction && instance.data.disableFunction();\n        return isCommandDisabled || isFunctionDisabled;\n    }\n});\n\nTemplate.toolbarSectionButton.events({\n    'click .toolbarSectionButton:not(.expandable)'(event, instance) {\n        // Prevent the event from bubbling to parent tools\n        event.stopPropagation();\n\n        // Stop here if the button is disabled\n        if ($(event.currentTarget).hasClass('disabled')) return;\n\n        // Run the command attached to the button\n        OHIF.commands.run(instance.data.id);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { Meteor } from 'meteor/meteor';\n\nTemplate.toolbarSectionTools.events({\n    'click .expandable'(event, instance) {\n        const $target = $(event.currentTarget);\n        const isExpanded = $target.hasClass('expanded');\n        $target.toggleClass('expanded', !isExpanded);\n\n        // Remove the previously set repositioning css attribute\n        const $box = $target.find('.toolbarSectionDrawerContainer:first');\n        $box.css('left', '');\n\n        // Stop here if the tool group is not expanded\n        if (isExpanded) {\n            return;\n        }\n\n        // Move the box left or right if it is overflowing the window\n        const transitionendHandler = event => {\n            const originalEvent = event.originalEvent;\n            const propertyName = originalEvent && originalEvent.propertyName;\n            if (propertyName && propertyName === 'transform') {\n                $target.off('transitionend', transitionendHandler);\n            } else {\n                return;\n            }\n\n            const boxWidth = $box.outerWidth();\n            const start = $box.offset().left;\n            const bodyWidth = $(document.body).outerWidth();\n            const end = start + boxWidth;\n\n            if (start < 0) {\n                $box.css('left', `calc(50% - ${start}px)`);\n            } else if (end > bodyWidth) {\n                const diff = end - bodyWidth;\n                $box.css('left', `calc(50% - ${diff}px)`);\n            }\n        };\n\n        // Attach the handler to deal with position fixing\n        $target.on('transitionend', transitionendHandler);\n    },\n\n    'focusout .expandable'(event, instance) {\n        const target = event.target;\n        const currentTarget = event.currentTarget;\n\n        // Postpone the execution to be able to get the focused element\n        Meteor.defer(() => {\n            const $focused = $(':focus');\n            const $expandable = $(currentTarget).closest('.expandable');\n            const focusInside = $expandable.find(':focus').length;\n\n            // Check if the expandable lost the focus\n            if (!$focused.length || !focusInside) {\n                // Stop here if focus is going from subtool to expandable tool\n                if (currentTarget !== target && $focused[0] === currentTarget) {\n                    return;\n                }\n\n                $expandable.removeClass('expanded');\n            }\n        });\n    }\n});\n","import { Template } from 'meteor/templating';\n\nimport { dialogUtils } from '../../../lib/dialogUtils';\n\n// Global object of key names (TODO: put this somewhere else)\nconst keys = {\n    ESC: 27,\n    ENTER: 13\n};\n\nTemplate.confirmDeleteDialog.events({\n    'click #cancel, click #close'() {\n        // Action canceled, just close dialog without calling callback\n        dialogUtils.closeHandler(false);\n    },\n    'click #confirm'() {\n        // Action confirmed, close dialog and calls callback, if exists\n        dialogUtils.closeHandler();\n    },\n    'keydown #confirmDeleteDialog'(e) {\n        // Action canceled, just close dialog without calling callback\n        if (e.which === keys.ESC) {\n            dialogUtils.closeHandler(false);\n            return false;\n        }\n\n        if (this.keyPressAllowed === false) {\n            return;\n        }\n\n        // If Enter is pressed\n        if (e.which === keys.ENTER) {\n            // Action confirmed, close dialog and calls callback,  if exists\n            dialogUtils.closeHandler();\n        }\n    }\n});\n","/**\n * @TODO: add this to OHIF's Viewers\n */\n\nimport { Template } from 'meteor/templating';\nimport { $ } from 'meteor/jquery';\n\nimport { toolManager } from '../../../lib/toolManager';\nimport { viewportUtils } from '../../../lib/viewportUtils';\n\nTemplate.textMarkerDialogs.events({\n    'change #startFrom'(e) {\n        const config = cornerstoneTools.textMarker.getConfiguration();\n        config.current = $(e.target).val();\n        //console.log(\"Changed starting point to: \" + config.current);\n    },\n    'change #ascending'(e) {\n        const config = cornerstoneTools.textMarker.getConfiguration();\n        config.ascending = $(e.target).is(':checked');\n\n        const currentIndex = config.markers.indexOf(config.current);\n\n        config.current = config.markers[currentIndex];\n        const nextMarker = config.current;\n        $('#startFrom').val(nextMarker).trigger('change');\n        //console.log(\"Changed ascending to: \" + config.ascending);\n    },\n    'click #clearLabels'() {\n        const element = viewportUtils.getActiveViewportElement();\n        const toolType = 'textMarker';\n        const toolStateManager = cornerstoneTools.globalImageIdSpecificToolStateManager;\n        const toolState = toolStateManager.toolState;\n\n        // We might want to make this a convenience function in cornerstoneTools\n        const stack = cornerstoneTools.getToolState(element, 'stack');\n        if (stack && stack.data.length && stack.data[0].imageIds.length) {\n            const imageIds = stack.data[0].imageIds;\n            \n            // Clear the tool data for each image in the stack\n            imageIds.forEach( imageId => {\n                if(toolState.hasOwnProperty(imageId)) {\n                    const toolData = toolState[imageId];\n                    if (toolData.hasOwnProperty(toolType)) {\n                        delete toolData[toolType];\n                    }\n                }\n            });\n        }\n\n        cornerstone.updateImage(element);\n    },\n    'click .closeTextMarkerDialogs'() {\n        const defaultTool = toolManager.getDefaultTool();\n        toolManager.setActiveTool(defaultTool);\n        document.getElementById('textMarkerOptionsDialog').close();\n        $('#spine').removeClass('active');\n        $('#' + defaultTool).addClass('active');\n    }\n\n});\n\nTemplate.textMarkerDialogs.onRendered(function() {\n    const optionsDialog = $('#textMarkerOptionsDialog');\n    optionsDialog.draggable();\n    dialogPolyfill.registerDialog(optionsDialog.get(0));\n\n    const relabelDialog = $('#textMarkerRelabelDialog');\n    relabelDialog.draggable();\n    dialogPolyfill.registerDialog(relabelDialog.get(0));\n\n    $(document).on('click',  event => {\n        if (!$(event.target).closest('.select2-wrapper').length) {\n            setTimeout(() => {\n                $('#startFrom, .relabelSelect').select2('close');\n            }, 200);\n        }\n    });\n\n    $(document).on('touchmove', event => {\n        if (!$(event.target).closest('.select2-container').length) {\n            setTimeout(() => {\n                $('#startFrom, .relabelSelect').select2('close');\n            }, 200);\n        }\n    });\n\n    $(() => {\n\n        FastClick.attach(document.body);\n\n        const $customSelects = $('#startFrom, .relabelSelect')\n\n        $customSelects.select2({\n            /**\n             * Adds needsclick class to all DOM elements in the Select2 results list\n             * so they can be accessible on iOS mobile when FastClick is initiated too.\n             */\n            templateResult(result, container) {\n                if (!result.id) {\n                    return result.text;\n                }\n                container.className += ' needsclick';\n                return result.text;\n            },\n            placeholder: 'C1',\n            minimumResultsForSearch: -1,\n            theme: 'viewerDropdown'\n        });\n\n        /**\n         * Additional to tweaking the templateResult option in Select2,\n         * add needsclick class to all DOM elements in the Select2 container,\n         * so they can be accessible on iOS mobile when FastClick is initiated too.\n         *\n         * More info about needsclick:\n         * https://github.com/ftlabs/fastclick#ignore-certain-elements-with-needsclick\n         *\n         */\n        $customSelects.each( (index, el) =>{\n            $(el).data('select2').$container.find('*').addClass('needsclick');\n        });\n\n    });\n});","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.seriesQuickSwitch.onCreated(() => {\n    const instance = Template.instance();\n\n    // Defines the study being shown in the current viewport\n    instance.currentStudy = new ReactiveVar();\n\n    // Gets the viewport data for the given viewport index\n    instance.getViewportData = viewportIndex => {\n        const layoutManager = OHIF.viewerbase.layoutManager;\n        return layoutManager && layoutManager.viewportData && layoutManager.viewportData[viewportIndex];\n    };\n\n    // Gets the current viewport data\n    const viewportIndex = instance.data.viewportIndex;\n\n    instance.study = {};\n    instance.lastStudy = {};\n\n    instance.autorun(() => {\n        OHIF.viewerbase.layoutManager.observer.depend();\n\n        const viewportData = instance.getViewportData(viewportIndex);\n\n        // @TypeSafeStudies\n        if (viewportData) {\n            // Finds the current study and return it\n            instance.study = OHIF.viewer.Studies.findBy({\n                studyInstanceUid: viewportData.studyInstanceUid\n            });\n        }\n\n        if (!instance.study) {\n            instance.study = OHIF.viewer.Studies.getElementByIndex(0);\n        }\n\n        if (!instance.study) {\n            return;\n        }\n\n        if (instance.study.studyInstanceUid !== instance.lastStudy.studyInstanceUid) {\n            // Change the current study to update the thumbnails\n            instance.currentStudy.set(instance.study);\n\n            instance.lastStudy = instance.study;\n        }\n    });\n});\n\nTemplate.seriesQuickSwitch.helpers({\n    shallDisplay() {\n        const instance = Template.instance();\n        const { rows, columns } = instance.data;\n        return OHIF.viewer.displaySeriesQuickSwitch && rows === 1 && columns <= 2;\n    },\n\n    side() {\n        const instance = Template.instance();\n        const { columns, viewportIndex } = instance.data;\n        if (columns === 1) return '';\n        return viewportIndex === 0 ? 'left' : 'right';\n    },\n\n    seriesItems() {\n        const instance = Template.instance();\n\n        OHIF.viewerbase.layoutManager.observer.depend();\n        const { viewportIndex } = instance.data;\n        const viewportData = OHIF.viewerbase.layoutManager.viewportData[viewportIndex];\n        const study = instance.currentStudy.get();\n\n        const seriesItems = [];\n\n        let displaySets = study.displaySets;\n        if (!displaySets.length) {\n            displaySets = OHIF.viewerbase.sortingManager.getDisplaySets(study);\n            study.displaySets = displaySets;\n            study.setDisplaySets(displaySets);\n\n            study.forEachDisplaySet(displaySet => {\n                OHIF.viewerbase.stackManager.makeAndAddStack(study, displaySet);\n            });\n        }\n\n        const items = displaySets.length;\n        for (let i = 0; i < items; i++) {\n            const displaySet = displaySets[i];\n            const item = { class: '' };\n            seriesItems.push(item);\n            if (i === 8 && items !== 9) {\n                item.class += ' count';\n                item.value = items;\n                break;\n            }\n\n            if (displaySet.displaySetInstanceUid === viewportData.displaySetInstanceUid) {\n                item.class += ' active';\n            }\n        }\n\n        return seriesItems;\n    },\n\n    studyBrowserTemplate() {\n        return OHIF.viewer.quickSwitchStudyBrowserTemplate || 'studyBrowserQuickSwitch';\n    }\n});\n\nTemplate.seriesQuickSwitch.events({\n    'mouseenter .series-switch, rescale .series-switch'(event, instance) {\n        // Control the width of the series browser\n        const $switch = $(event.currentTarget);\n        const $seriesBrowser = $switch.find('.series-browser');\n        const $seriesQuickSwitch = $switch.closest('.series-quick-switch');\n\n        const isRight = $seriesQuickSwitch.hasClass('right');\n        const switchOffsetLeft = $switch.offset().left;\n        const switchOuterWidth = $switch.outerWidth();\n\n        let browserWidth;\n        if (isRight) {\n            browserWidth = $(window).width() - switchOffsetLeft;\n        } else {\n            browserWidth = switchOffsetLeft + switchOuterWidth;\n        }\n\n        $seriesBrowser.width(browserWidth - (browserWidth % 240));\n\n        const $quickSwitch = instance.$('.series-quick-switch');\n        if ($quickSwitch.is(':hover')) {\n            $quickSwitch.addClass('series-triggered');\n        }\n    },\n\n    'mouseleave .series-browser'(event, instance) {\n        $(event.currentTarget).children('.scrollable').stop().animate({ scrollTop: 0 }, 300, 'swing');\n    },\n\n    'mouseleave .series-quick-switch'(event, instance) {\n        $(event.currentTarget).removeClass('series-triggered');\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\n\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.studySeriesQuickSwitch.onCreated(() => {\n    const instance = Template.instance();\n\n    // Defines the study being shown in the current viewport\n    instance.data.currentStudy = new ReactiveVar();\n\n    // Gets the viewport data for the given viewport index\n    instance.getViewportData = viewportIndex => {\n        const layoutManager = OHIF.viewerbase.layoutManager;\n        return layoutManager && layoutManager.viewportData && layoutManager.viewportData[viewportIndex];\n    };\n\n    // Gets the current viewport data\n    const viewportIndex = instance.data.viewportIndex;\n\n    instance.study = {};\n    instance.lastStudy = {};\n\n    instance.autorun(() => {\n        Session.get('LayoutManagerUpdated');\n\n        const viewportData = instance.getViewportData(viewportIndex);\n\n        // @TypeSafeStudies\n        if (viewportData) {\n            // Finds the current study and return it\n            instance.study = OHIF.viewer.Studies.findBy({\n                studyInstanceUid: viewportData.studyInstanceUid\n            });\n        } else {\n            instance.study = OHIF.viewer.Studies.getElementByIndex(0);\n        }\n\n        if (!instance.study) {\n            return;\n        }\n\n        if (instance.study.studyInstanceUid !== instance.lastStudy.studyInstanceUid) {\n            // Change the current study to update the thumbnails\n            instance.data.currentStudy.set(instance.study);\n\n            instance.lastStudy = instance.study;\n        }\n    });\n});\n\nconst checkScrollArea = element => {\n    const { scrollHeight, offsetHeight, scrollTop } = element;\n\n    const matrix = $(element).find('.thumbnailsWrapper').css('transform');\n\n    let translateY = 0;\n\n    if(matrix && matrix !== 'none') {\n        translateY = parseInt(matrix.match(/-?[\\d\\.]+/g)[5]);\n    }\n\n    if(scrollHeight > offsetHeight + scrollTop + translateY) {\n        element.classList.add('show-scroll-indicator-down');\n    }\n    else {\n        element.classList.remove('show-scroll-indicator-down');\n    }\n\n    if(scrollTop > 0) {\n        element.classList.add('show-scroll-indicator-up');\n    }\n    else {\n        element.classList.remove('show-scroll-indicator-up');\n    }\n};\n\nTemplate.studySeriesQuickSwitch.events({\n    'mouseenter .js-quick-switch, mouseenter .js-quick-switch .switchSectionSeries'(event, instance) {\n        instance.$('.quickSwitchWrapper').addClass('overlay');\n        $(event.currentTarget).addClass('hover');\n        instance.$('.scrollArea').each((index, scrollAreaElement) => checkScrollArea(scrollAreaElement));\n    },\n    'mouseleave .js-quick-switch'(event, instance) {\n        instance.$('.js-quick-switch, .switchSectionSeries').removeClass('hover');\n        instance.$('.quickSwitchWrapper').removeClass('overlay');\n    },\n    'click .thumbnailEntry'(event, instance) {\n        // Close the quick switch if we have selected a series\n        instance.$('.js-quick-switch, .switchSectionSeries').removeClass('hover');\n        instance.$('.quickSwitchWrapper').removeClass('overlay');\n    },\n    'click .study-browser-item'(event, instance) {\n        instance.$('.switchSectionSeries').addClass('hover');\n    },\n    'scroll .scrollArea'(event) {\n        checkScrollArea(event.currentTarget);\n    }\n});\n\nTemplate.studySeriesQuickSwitch.helpers({\n    // Get the current study\n    currentStudy() {\n        return Template.instance().data.currentStudy.get();\n    },\n    // Check if is Mac OS\n    // This is necessary due to fix scrollbar space only in browsers in Mac OS:\n    // Since Lion version, the scrollbar is visible only when user scrolls a div\n    // As scrollbar is hidden, the space added to hide it in Windows browsers\n    // is not enough in Mac OS. For WebKit (Safari and Chrome in Mac OS) there is a CSS\n    // solution using ::-webkit-scrollbar, but unfortunately doesn't work for Firefox\n    // JS seems to be the only solution for now:\n    // - http://stackoverflow.com/questions/6165472/custom-css-scrollbar-for-firefox/6165489#6165489\n    // - http://stackoverflow.com/questions/18317634/force-visible-scrollbar-in-firefox-on-mac-os-x/18318273\n    isMac() {\n        return window.navigator.appVersion.indexOf('Mac');\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.studyTimepoint.onCreated(() => {\n    const instance = Template.instance();\n    const data = instance.data;\n\n    instance.isActive = {};\n    if (data.isUnassociatedStudy === true && data.studyInstanceUids.length === 1) {\n        instance.isActive[data.studyInstanceUids[0]] = true;\n    }\n});\n\n// Initialize the timepoint wrapper max-height to enable CSS transition\nTemplate.studyTimepoint.onRendered(() => {\n    const instance = Template.instance();\n\n    const $studies = instance.$('.studyTimepoint');\n    const $wrapper = $studies.closest('.studyTimepointWrapper');\n    const $timepoint = $wrapper.closest('.timepoint-item');\n    const studiesVisible = $studies.is(':visible');\n\n    if (!studiesVisible) {\n        $timepoint.addClass('active');\n    }\n\n    // Recalculates the timepoint height to make CSS transition smoother\n    $studies.trigger('displayStateChanged');\n\n    if (!studiesVisible) {\n        $timepoint.removeClass('active');\n    }\n});\n\nTemplate.studyTimepoint.events({\n    // Changes the selected study\n    'selectionChanged .studyTimepoint'(event, instance, changed) {\n        const $selection = $(changed.selection);\n\n        // Defines where will be the studies searched\n        let $studiesTarget = instance.$('.studyTimepoint');\n\n        // @TypeSafeStudies\n        if (changed.isQuickSwitch) {\n            // Changes the current quick switch study\n            const study = OHIF.viewer.Studies.findBy({\n                studyInstanceUid: changed.studyInstanceUid\n            });\n            instance.data.currentStudy.set(study);\n\n            // Changes the target to toggle the selection in all the studies\n            $studiesTarget = $studiesTarget.closest('.studyTimepointBrowser');\n        }\n\n        // Removes selected state from all studies but the triggered study\n        $studiesTarget.find('.study-browser-item').not($selection).removeClass('active');\n\n        if (changed.isQuickSwitch) {\n            // Reset active studies map to allow only one active study\n            instance.isActive = {};\n            // Add selected state for the triggered study\n            $selection.addClass('active');\n        } else {\n            const $timepoint = instance.$('.studyTimepoint');\n            // Set the max-height to inherit to be able to expand the wrapper on its full height\n            instance.$('.studyTimepointWrapper').css('max-height', 'inherit');\n            // Toggle selected state for the triggered study\n            $selection.removeClass('loading');\n            $selection.toggleClass('active');\n            // Recalculates the timepoint height to make CSS transition smoother\n            const $thumbnails = $selection.find('.study-browser-series');\n            $thumbnails.one('transitionend', () => $timepoint.trigger('displayStateChanged'));\n        }\n\n        // Set the current study as active\n        instance.isActive[changed.studyInstanceUid] = $selection.hasClass('active');\n    },\n    // It should be triggered when the timepoint height is changed\n    'displayStateChanged .studyTimepoint'(event, instance) {\n        const $timepoint = $(event.currentTarget);\n        const $wrapper = $timepoint.closest('.studyTimepointWrapper');\n\n        // Set the max-height for the wrapper to make CSS transition smoother\n        $wrapper.css('max-height', $timepoint.height());\n    }\n});\n\nTemplate.studyTimepoint.helpers({\n    isActive(study) {\n        const instance = Template.instance();\n\n        if (!study.studyInstanceUid) {\n            return;\n        }\n\n        return instance.isActive[study.studyInstanceUid];\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { OHIFError } from '../../../lib/classes/OHIFError';\n\nTemplate.studyTimepointBrowser.onCreated(() => {\n    const instance = Template.instance();\n\n    // Reactive variable to control the view type for all or key timepoints\n    instance.timepointViewType = new ReactiveVar(instance.data.timepointViewType);\n\n    // Defines whether to show all key timepoints or only the current one\n    instance.showAdditionalTimepoints = new ReactiveVar(true);\n\n    // Return the current study if it's defined\n    instance.getCurrentStudy = () => {\n        return instance.data.currentStudy && instance.data.currentStudy.get();\n    };\n\n    // Get the studies for a specific timepoint\n    instance.getStudies = timepoint => {\n        // @TypeSafeStudies\n\n        if (!timepoint) {\n            return OHIF.viewer.Studies.all();\n        }\n\n        return timepoint.studyInstanceUids.map(studyInstanceUid => {\n            const query = { studyInstanceUid };\n\n            const loadedStudy = OHIF.viewer.Studies.findBy(query);\n            if (loadedStudy) return loadedStudy;\n\n            const notYetLoaded = OHIF.studylist.collections.Studies.findOne(query);\n            if (notYetLoaded) return notYetLoaded;\n\n            // const studyData = _.findWhere(timepoint.studiesData, query);\n            // if (studyData) return studyData;\n\n            throw new OHIFError(`No study data available for Study: ${studyInstanceUid}`);\n        });\n    };\n});\n\nTemplate.studyTimepointBrowser.onRendered(() => {\n    const instance = Template.instance();\n\n    // Collapse all timepoints but first when timepoint view type changes\n    instance.autorun(() => {\n        // Runs this computation every time the timepointViewType is changed\n        const type = instance.timepointViewType.get();\n\n        // Removes all active classes to collapse the timepoints and studies\n        instance.$('.timepoint-item, .study-browser-item').removeClass('active');\n        if (type === 'key' && !instance.data.currentStudy) {\n            // Show only first timepoint expanded for key timepoints\n            instance.$('.timepoint-item:first').addClass('active');\n        }\n    });\n\n    // Expand only the timepoints with loaded studies in viewports\n    let lastStudy;\n    let activeStudiesUids = [];\n\n    // Wait for rerendering and set the timepoint as active\n    instance.refreshActiveStudies = () => Tracker.afterFlush(() => {\n        _.each(activeStudiesUids, studyInstanceUid => {\n            instance.$(`.study-browser-item[data-uid='${studyInstanceUid}']`).addClass('active');\n        });\n        // Show only first timepoint expanded for key timepoints\n        instance.$('.timepoint-item:first').addClass('active');\n    });\n\n    instance.autorun(() => {\n        // Runs this computation every time the curenty study is changed\n        const currentStudy = instance.data.currentStudy && instance.data.currentStudy.get();\n\n        // Stop here if there's no current study set\n        if (!currentStudy) {\n            return;\n        }\n\n        // Check if the study really changed and update the last study\n        if (currentStudy !== lastStudy) {\n            instance.showAdditionalTimepoints.set(false);\n            lastStudy = currentStudy;\n            activeStudiesUids = [currentStudy.studyInstanceUid];\n        }\n\n        instance.refreshActiveStudies();\n    });\n});\n\nTemplate.studyTimepointBrowser.events({\n    'click .timepointHeader'(event, instance) {\n        const $timepoint = $(event.currentTarget).closest('.timepoint-item');\n\n        // Recalculates the timepoint height to make CSS transition smoother\n        $timepoint.find('.studyTimepoint').trigger('displayStateChanged');\n\n        // Toggle active class to group/ungroup timepoint studies\n        $timepoint.toggleClass('active');\n    },\n\n    'click .study-item-box.additional'(event, instance) {\n        // Show all key timepoints\n        instance.showAdditionalTimepoints.set(true);\n    }\n});\n\nTemplate.studyTimepointBrowser.helpers({\n    // Decides if the timepoint view type switch shall be shown or omitted\n    shallShowViewType(timepointList) {\n        const instance = Template.instance();\n        return timepointList.length && !instance.data.timepointViewType;\n    },\n\n    // Returns the button group data for switching between timepoint view types\n    viewTypeButtonGroupData() {\n        return {\n            value: Template.instance().timepointViewType,\n            options: [{\n                value: 'key',\n                text: 'Key Timepoints'\n            }, {\n                value: 'all',\n                text: 'All Timepoints'\n            }]\n        };\n    },\n\n    // Defines whether to show all key timepoints or only the current one\n    showAdditionalTimepoints() {\n        return Template.instance().showAdditionalTimepoints.get();\n    },\n\n    hasAdditionalTimepoints() {\n        const instance = Template.instance();\n        const { timepointApi } = instance.data;\n        const allTimepoints = timepointApi && timepointApi.all();\n        return allTimepoints && allTimepoints.length > 1;\n    },\n\n    // Get the timepoints to be listed\n    timepoints() {\n        const instance = Template.instance();\n        // Get the current study\n        const currentStudy = instance.getCurrentStudy();\n        // Declare the timepoints\n        const { timepointApi } = instance.data;\n        let timepoints;\n        if (currentStudy && !instance.showAdditionalTimepoints.get()) {\n            // Show only the current study's timepoint\n            timepoints = timepointApi.study(currentStudy.studyInstanceUid);\n        } else {\n            if (!timepointApi) {\n                // If there is no timepoint API defined whatsoever, this means that there is no\n                // current timepoint ID, so we can just display all of the currently loaded studies\n                // in the study sidebar\n                timepoints = [];\n            } else if (instance.timepointViewType.get() === 'all') {\n                // Show all timepoints\n                timepoints = timepointApi.all();\n            } else {\n                // Show only key timepoints\n                timepoints = timepointApi.key();\n            }\n        }\n\n        // Filter timepoints and show only the current timepoint and previous ones\n        let result = [];\n        const currentTimepoint = timepointApi.current();\n        if (currentTimepoint) {\n            timepoints.forEach(timepoint => {\n                if (timepoint.latestDate.getTime() <= currentTimepoint.latestDate.getTime()) {\n                    result.push(timepoint);\n                }\n            });\n        }\n\n        // Returns the timepoints\n        return result;\n    },\n\n    // Get the studies for a specific timepoint\n    studies(timepoint) {\n        return Template.instance().getStudies(timepoint);\n    },\n\n    // Build the modalities summary for all timepoint's studies\n    modalitiesSummary(timepoint) {\n        const instance = Template.instance();\n\n        const studies = instance.getStudies(timepoint);\n\n        const modalities = {};\n        studies.forEach(study => {\n            const modality = study.modalities || 'UN';\n            modalities[modality] = modalities[modality] + 1 || 1;\n        });\n\n        const result = [];\n        _.each(modalities, (count, modality) => {\n            result.push(`${count} ${modality}`);\n        });\n\n        return result.join(', ');\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { _ } from 'meteor/underscore';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.studyTimepointStudy.onCreated(() => {\n    const instance = Template.instance();\n\n    instance.loading = new ReactiveVar(false);\n\n    const studyMetadata = OHIF.viewerbase.getStudyMetadata(instance.data.study);\n    const firstInstance = studyMetadata.getFirstInstance();\n    if (firstInstance) {\n        instance.modalities = firstInstance.getRawValue('x00080060');\n        instance.studyDescription = firstInstance.getRawValue('x00081030');\n        instance.studyDate = firstInstance.getRawValue('x00080020');\n    }\n\n    // Get the current study element\n    instance.getStudyElement = (isGlobal=false) => {\n        const studyInstanceUid = instance.data.study.studyInstanceUid;\n        const selector = `.study-browser-item[data-uid='${studyInstanceUid}']`;\n        return isGlobal ? $(selector) : instance.$browser.find(selector);\n    };\n\n    instance.isQuickSwitch = () => {\n        return !_.isUndefined(instance.data.viewportIndex);\n    };\n\n    // Set the current study as selected in the studies list\n    instance.select = (isQuickSwitch=false) => {\n        const studyInstanceUid = instance.data.study.studyInstanceUid;\n\n        const $study = instance.getStudyElement();\n        const $timepoint = $study.closest('.studyTimepoint');\n\n        const selectionChanged = {\n            selection: [$study[0]],\n            studyInstanceUid,\n            isQuickSwitch\n        };\n\n        $timepoint.trigger('selectionChanged', selectionChanged);\n    };\n\n    instance.initializeStudyWrapper = () => {\n        // Stop here if it's a quick switch\n        if (instance.isQuickSwitch()) {\n            return;\n        }\n\n        const $study = instance.getStudyElement();\n        const $thumbnails = $study.find('.study-browser-series');\n        $study.addClass('active');\n        // If element already has max-height property set, .height()\n        // will return that value, so remove it to recalculate\n        $thumbnails.css('max-height', '');\n        $thumbnails.css('max-height', $thumbnails.height());\n        $study.removeClass('active');\n\n        // Here we add, remove, and add the active class again because this way\n        // the max-height animation appears smooth to the user.\n        if (instance.data.active) {\n            Meteor.setTimeout(() => $study.addClass('active'), 1);\n        }\n    };\n});\n\n// Initialize the study wrapper max-height to enable CSS transition\nTemplate.studyTimepointStudy.onRendered(() => {\n    const instance = Template.instance();\n\n    // Keep the study timepoint browser element to manipulate elements even after DOM is removed\n    instance.$browser = instance.$('.study-browser-item').closest('.studyTimepointBrowser');\n\n    instance.initializeStudyWrapper();\n});\n\nTemplate.studyTimepointStudy.events({\n    // Recalculates the timepoint height to make CSS transition smoother\n    'transitionend .study-browser-series'(event, instance) {\n        if (event.target === event.currentTarget) {\n            $(event.currentTarget).closest('.studyTimepoint').trigger('displayStateChanged');\n        }\n    },\n\n    // Transfers the active state to the current study\n    'click .studyQuickSwitchTimepoint .study-item-container'(event, instance) {\n        instance.select(true);\n    },\n\n    // Set loading state\n    'loadStarted .study-browser-item'(event, instance) {\n        instance.loading.set(true);\n    },\n\n    // Remove loading state and fix the thumbnails wrappers height\n    'loadEnded .study-browser-item'(event, instance) {\n        instance.loading.set(false);\n        instance.initializeStudyWrapper();\n    },\n\n    // Changes the current study selection for the clicked study\n    'click .study-item-box'(event, instance) {\n        const studyData = instance.data.study;\n        const { studyInstanceUid } = studyData;\n        const isQuickSwitch = instance.isQuickSwitch();\n\n        // @TypeSafeStudies\n        // Check if the study already has series data,\n        // and if not, retrieve it.\n        if (!studyData.seriesList) {\n            const alreadyLoaded = OHIF.viewer.Studies.findBy({ studyInstanceUid });\n\n            if (!alreadyLoaded) {\n                const $studies = instance.getStudyElement(true);\n                $studies.trigger('loadStarted');\n                OHIF.studies.retrieveStudyMetadata(studyInstanceUid).then(study => {\n                    instance.data.study = study;\n                    OHIF.viewer.Studies.insert(study);\n\n                    Meteor.setTimeout(() => {\n                        $studies.trigger('loadEnded');\n                        instance.select(isQuickSwitch);\n                    }, 1);\n                }).catch(error => {\n                    OHIF.log.error(`There was an error trying to retrieve the study\\'s metadata for studyInstanceUid: ${studyInstanceUid}`);\n                    OHIF.log.error(error.stack);\n\n                    OHIF.log.trace();\n                });\n            } else {\n                studyData.seriesList = alreadyLoaded.seriesList;\n                instance.select(isQuickSwitch);\n            }\n        } else {\n            instance.select(isQuickSwitch);\n        }\n    }\n});\n\nTemplate.studyTimepointStudy.helpers({\n    isLoading() {\n        // @TypeSafeStudies\n        const instance = Template.instance();\n        const studyData = instance.data.study;\n        const alreadyLoaded = OHIF.viewer.Studies.findBy({ studyInstanceUid: studyData.studyInstanceUid });\n        return instance.loading.get() && !alreadyLoaded;\n    },\n\n    modalities() {\n        const instance = Template.instance();\n        const modalities = instance.modalities || 'UN';\n\n        // Replace backslashes with spaces\n        return modalities.replace(/\\\\/g, ' ');\n    },\n\n    modalityStyle() {\n        // Responsively styles the Modality Acronyms for studies\n        // with more than one modality\n        const instance = Template.instance();\n        const modalities = instance.modalities || 'UN';\n        const numModalities = modalities.split(/\\\\/g).length;\n\n        if (numModalities === 1) {\n            // If we have only one modality, it should take up the whole div.\n            return 'font-size: 1em';\n        } else if (numModalities === 2) {\n            // If we have two, let them sit side-by-side\n            return 'font-size: 0.75em';\n        } else {\n            // If we have more than two modalities, change the line height to display multiple rows,\n            // depending on the number of modalities we need to display.\n            const lineHeight = Math.ceil(numModalities / 2) * 1.2;\n            return 'line-height: ' + lineHeight + 'em';\n        }\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.windowLevelPresetsForm.onCreated(() => {\n    const instance = Template.instance();\n    const { wlPresets } = OHIF.viewerbase;\n\n    instance.api = {\n        save() {\n            const form = instance.$('form').first().data('component');\n            const definitions = form.value();\n            const promise = wlPresets.store(definitions);\n            promise.then(() => OHIF.ui.notifications.success({\n                text: 'The Window/Levels preferences were successfully saved.'\n            }));\n            return promise;\n        },\n\n        resetDefaults() {\n            const dialogOptions = {\n                class: 'themed',\n                title: 'Reset Window/Levels Presets',\n                message: 'Are you sure you want to reset all the window level presets to their defaults?'\n            };\n\n            return OHIF.ui.showDialog('dialogConfirm', dialogOptions).then(() => wlPresets.resetDefaults());\n        }\n    };\n});\n\nTemplate.windowLevelPresetsForm.helpers({\n    getPresetsInputInformationList() {\n        OHIF.viewerbase.wlPresets.changeObserver.depend();\n        return _.toArray(OHIF.viewer.wlPresets);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from '../namespace';\nimport { TypeSafeCollection } from './lib/classes/TypeSafeCollection';\n\n// Create main Studies collection which will be used across the entire viewer...\nconst Studies = new TypeSafeCollection();\n\n// Make it publicly available on \"OHIF.viewer\" namespace...\nOHIF.viewer.Studies = Studies;\n\n// Create main StudyMetadataList collection which will be used across the entire viewer...\nconst StudyMetadataList = new TypeSafeCollection();\n\n// Make it publicly available on \"OHIF.viewer\" namespace...\nOHIF.viewer.StudyMetadataList = StudyMetadataList;\n\n// Subscriptions...\nMeteor.subscribe('studyImportStatus');\n","import { Viewerbase } from '../namespace';\n\n/**\n * Imports file with side effects only (files that do not export anything...)\n */\n\nimport './collections';\nimport './lib/debugReactivity';\n\n/**\n * Exported Functions\n */\n\n// getElementIfNotEmpty\nimport { getElementIfNotEmpty } from './lib/getElementIfNotEmpty';\nViewerbase.getElementIfNotEmpty = getElementIfNotEmpty;\n\n// getStackDataIfNotEmpty\nimport { getStackDataIfNotEmpty } from './lib/getStackDataIfNotEmpty';\nViewerbase.getStackDataIfNotEmpty = getStackDataIfNotEmpty;\n\n// switchToImageRelative\nimport { switchToImageRelative } from './lib/switchToImageRelative';\nViewerbase.switchToImageRelative = switchToImageRelative;\n\n// switchToImageByIndex\nimport { switchToImageByIndex } from './lib/switchToImageByIndex';\nViewerbase.switchToImageByIndex = switchToImageByIndex;\n\n// getFrameOfReferenceUID\nimport { getFrameOfReferenceUID } from './lib/getFrameOfReferenceUID';\nViewerbase.getFrameOfReferenceUID = getFrameOfReferenceUID;\n\n// getImageIdForImagePath\nimport { getImageIdForImagePath } from './lib/getImageIdForImagePath';\nViewerbase.getImageIdForImagePath = getImageIdForImagePath;\n\n// updateCrosshairsSynchronizer\nimport { updateCrosshairsSynchronizer } from './lib/updateCrosshairsSynchronizer';\nViewerbase.updateCrosshairsSynchronizer = updateCrosshairsSynchronizer;\n\n// getImageId\nimport { getImageId } from './lib/getImageId';\nViewerbase.getImageId = getImageId;\n\n// setActiveViewport\nimport { setActiveViewport } from './lib/setActiveViewport';\nViewerbase.setActiveViewport = setActiveViewport;\n\n// setFocusToActiveViewport\nimport { setFocusToActiveViewport } from './lib/setFocusToActiveViewport';\nViewerbase.setFocusToActiveViewport = setFocusToActiveViewport;\n\n// getWADORSImageId\nimport { getWADORSImageId } from './lib/getWADORSImageId';\nViewerbase.getWADORSImageId = getWADORSImageId;\n\n// updateAllViewports\nimport { updateAllViewports } from './lib/updateAllViewports';\nViewerbase.updateAllViewports = updateAllViewports;\n\n// sortStudy\nimport { sortStudy } from './lib/sortStudy';\nViewerbase.sortStudy = sortStudy;\n\n// updateMetaDataManager\nimport { updateMetaDataManager } from './lib/updateMetaDataManager';\nViewerbase.updateMetaDataManager = updateMetaDataManager;\n\n// updateOrientationMarkers\nimport { updateOrientationMarkers } from './lib/updateOrientationMarkers';\nViewerbase.updateOrientationMarkers = updateOrientationMarkers;\n\n// isImage\nimport { isImage } from './lib/isImage';\nViewerbase.isImage = isImage;\n\n// getInstanceClassDefaultViewport, setInstanceClassDefaultViewportFunction\nimport { getInstanceClassDefaultViewport, setInstanceClassDefaultViewportFunction } from './lib/instanceClassSpecificViewport';\nViewerbase.getInstanceClassDefaultViewport = getInstanceClassDefaultViewport;\nViewerbase.setInstanceClassDefaultViewportFunction = setInstanceClassDefaultViewportFunction;\n\n// displayReferenceLines\nimport { displayReferenceLines } from './lib/displayReferenceLines';\nViewerbase.displayReferenceLines = displayReferenceLines;\n\n// getStudyMetadata\nimport { getStudyMetadata } from './lib/getStudyMetadata';\nViewerbase.getStudyMetadata = getStudyMetadata;\n\n/**\n * Exported Namespaces (sub-namespaces)\n */\n\n// imageViewerViewportData.*\nimport { imageViewerViewportData } from './lib/imageViewerViewportData';\nViewerbase.imageViewerViewportData = imageViewerViewportData;\n\n// panelNavigation.*\nimport { panelNavigation } from './lib/panelNavigation';\nViewerbase.panelNavigation = panelNavigation;\n\n// prepareViewerData\nimport { prepareViewerData } from './lib/prepareViewerData';\nViewerbase.prepareViewerData = prepareViewerData;\n\n// renderViewer\nimport { renderViewer } from './lib/renderViewer';\nViewerbase.renderViewer = renderViewer;\n\n// WLPresets.*\nimport { WLPresets } from './lib/WLPresets';\nViewerbase.wlPresets = WLPresets;\n\n// hotkeyUtils.*\nimport { hotkeyUtils } from './lib/hotkeyUtils';\nViewerbase.hotkeyUtils = hotkeyUtils;\n\n// viewportOverlayUtils.*\nimport { viewportOverlayUtils } from './lib/viewportOverlayUtils';\nViewerbase.viewportOverlayUtils = viewportOverlayUtils;\n\n// viewportUtils.*\nimport { viewportUtils } from './lib/viewportUtils';\nViewerbase.viewportUtils = viewportUtils;\n\n// thumbnailDragHandlers.*\nimport { thumbnailDragHandlers } from './lib/thumbnailDragHandlers';\nViewerbase.thumbnailDragHandlers = thumbnailDragHandlers;\n\n// dialogUtils.*\nimport { dialogUtils } from './lib/dialogUtils';\nViewerbase.dialogUtils = dialogUtils;\n\n// unloadHandlers.*\nimport { unloadHandlers } from './lib/unloadHandlers';\nViewerbase.unloadHandlers = unloadHandlers;\n\n// sortingManager.*\nimport { sortingManager } from './lib/sortingManager';\nViewerbase.sortingManager = sortingManager;\n\n// crosshairsSynchronizers.*\nimport { crosshairsSynchronizers } from './lib/crosshairsSynchronizers';\nViewerbase.crosshairsSynchronizers = crosshairsSynchronizers;\n\n// annotateTextUtils.*\nimport { annotateTextUtils } from './lib/annotateTextUtils';\nViewerbase.annotateTextUtils = annotateTextUtils;\n\n// textMarkerUtils.*\nimport { textMarkerUtils } from './lib/textMarkerUtils';\nViewerbase.textMarkerUtils = textMarkerUtils;\n\n// createStacks.*\nimport { createStacks } from './lib/createStacks';\nViewerbase.createStacks = createStacks;\n\n\n/**\n * Exported Singletons\n */\n\n// StackManager as \"stackManager\" (since it's a plain object instance, the exported name starts with a lowercase letter)\nimport { StackManager } from './lib/StackManager';\nViewerbase.stackManager = StackManager;\n\n// toolManager\nimport { toolManager } from './lib/toolManager';\nViewerbase.toolManager = toolManager;\n\n/**\n * Exported Helpers\n */\n\nimport { helpers } from './lib/helpers/';\nViewerbase.helpers = helpers;\n\n/**\n * Exported Collections\n */\n\n// sopClassDictionary\nimport { sopClassDictionary } from './lib/sopClassDictionary';\nViewerbase.sopClassDictionary = sopClassDictionary;\n\n// dicomTagDescriptions\nimport { DICOMTagDescriptions } from './lib/DICOMTagDescriptions';\nViewerbase.DICOMTagDescriptions = DICOMTagDescriptions;\n\n/**\n * Exported Classes\n */\n\n// ImageSet\nimport { ImageSet } from './lib/classes/ImageSet';\nViewerbase.ImageSet = ImageSet;\n\n// LayoutManager\nimport { LayoutManager } from './lib/classes/LayoutManager';\nViewerbase.LayoutManager = LayoutManager;\n\n// StudyPrefetcher\nimport { StudyPrefetcher } from './lib/classes/StudyPrefetcher';\nViewerbase.StudyPrefetcher = StudyPrefetcher;\n\n// ResizeViewportManager\nimport { ResizeViewportManager } from './lib/classes/ResizeViewportManager';\nViewerbase.ResizeViewportManager = ResizeViewportManager;\n\n// StudyLoadingListener\nimport { StudyLoadingListener } from './lib/classes/StudyLoadingListener';\nViewerbase.StudyLoadingListener = StudyLoadingListener;\n\n// StackLoadingListener\nimport { StackLoadingListener } from './lib/classes/StudyLoadingListener';\nViewerbase.StackLoadingListener = StackLoadingListener;\n\n// DICOMFileLoadingListener\nimport { DICOMFileLoadingListener } from './lib/classes/StudyLoadingListener';\nViewerbase.DICOMFileLoadingListener = DICOMFileLoadingListener;\n\n// StudyMetadata, SeriesMetadata, InstanceMetadata\nimport { StudyMetadata } from './lib/classes/metadata/StudyMetadata';\nimport { SeriesMetadata } from './lib/classes/metadata/SeriesMetadata';\nimport { InstanceMetadata } from './lib/classes/metadata/InstanceMetadata';\nimport { StudySummary } from './lib/classes/metadata/StudySummary';\nViewerbase.metadata = { StudyMetadata, SeriesMetadata, InstanceMetadata, StudySummary };\n\n// TypeSafeCollection\nimport { TypeSafeCollection } from './lib/classes/TypeSafeCollection';\nViewerbase.TypeSafeCollection = TypeSafeCollection;\n\n// OHIFError\nimport { OHIFError } from './lib/classes/OHIFError';\nViewerbase.OHIFError = OHIFError;\n\n// StackImagePositionOffsetSynchronizer\nimport { StackImagePositionOffsetSynchronizer } from './lib/classes/StackImagePositionOffsetSynchronizer';\nViewerbase.StackImagePositionOffsetSynchronizer = StackImagePositionOffsetSynchronizer;\n\n// StudyMetadataSource\nimport { StudyMetadataSource } from './lib/classes/StudyMetadataSource';\nViewerbase.StudyMetadataSource = StudyMetadataSource;\n","\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst REGEX_TAG = /^x[0-9a-fx]{8}$/;\n\nconst DICOMTagDescriptions = Object.create(Object.prototype, {\n    _descriptions: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Object.create(null)\n    },\n    tagNumberToString: {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: function tagNumberToString(tag) {\n            let string; // by default, undefined is returned...\n            if (this.isValidTagNumber(tag)) {\n                // if it's a number, build its hexadecimal representation...\n                string = 'x' + ('00000000' + tag.toString(16)).substr(-8);\n            }\n            return string;\n        }\n    },\n    isValidTagNumber: {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: function isValidTagNumber(tag) {\n            return (typeof tag === NUMBER && tag >= 0 && tag <= 0xFFFFFFFF);\n        }\n    },\n    isValidTag: {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: function isValidTag(tag) {\n            return (typeof tag === STRING ? REGEX_TAG.test(tag) : this.isValidTagNumber(tag));\n        }\n    },\n    find: {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: function find(name) {\n            let description; // by default, undefined is returned...\n            if (typeof name !== STRING) {\n                // if it's a number, a tag string will be returned...\n                name = this.tagNumberToString(name);\n            }\n            if (typeof name === STRING) {\n                description = this._descriptions[name];\n            }\n            return description;\n        }\n    },\n    init: {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: function init(descriptionMap) {\n            const _hasOwn = Object.prototype.hasOwnProperty;\n            const _descriptions = this._descriptions;\n            for (let tag in descriptionMap) {\n                if (_hasOwn.call(descriptionMap, tag)) {\n                    if (!this.isValidTag(tag)) {\n                        // Skip in case tag is not valid...\n                        console.info(`DICOMTagDescriptions: Invalid tag \"${tag}\"...`);\n                        continue;\n                    }\n                    if (tag in _descriptions) {\n                        // Skip in case the tag is duplicated...\n                        console.info(`DICOMTagDescriptions: Duplicated tag \"${tag}\"...`);\n                        continue;\n                    }\n                    // Save keyword...\n                    const keyword = descriptionMap[tag];\n                    // Create a description entry and freeze it...\n                    const entry = Object.create(null);\n                    entry.tag = tag;\n                    entry.keyword = keyword;\n                    Object.freeze(entry);\n                    // Add tag references to entry...\n                    _descriptions[tag] = entry;\n                    // Add keyword references to entry (if not present already)...\n                    if (keyword in _descriptions) {\n                        const currentEntry = _descriptions[keyword];\n                        console.info(`DICOMTagDescriptions: Using <${currentEntry.tag},${currentEntry.keyword}> instead of <${entry.tag},${entry.keyword}> for keyword \"${keyword}\"...`);\n                    } else {\n                        _descriptions[keyword] = entry;\n                    }\n                }\n            }\n            // Freeze internal description map...\n            Object.freeze(_descriptions);\n            // Freeze itself...\n            Object.freeze(this);\n        }\n    },\n});\n\n/**\n * Map with DICOM Tag Descriptions\n */\nlet initialTagDescriptionMap = {\n    x00020000: 'FileMetaInfoGroupLength',\n    x00020001: 'FileMetaInfoVersion',\n    x00020002: 'MediaStorageSOPClassUID',\n    x00020003: 'MediaStorageSOPInstanceUID',\n    x00020010: 'TransferSyntaxUID',\n    x00020012: 'ImplementationClassUID',\n    x00020013: 'ImplementationVersionName',\n    x00020016: 'SourceApplicationEntityTitle',\n    x00020100: 'PrivateInformationCreatorUID',\n    x00020102: 'PrivateInformation',\n    x00041130: 'FileSetID',\n    x00041141: 'FileSetDescriptorFileID',\n    x00041142: 'SpecificCharacterSetOfFile',\n    x00041200: 'FirstDirectoryRecordOffset',\n    x00041202: 'LastDirectoryRecordOffset',\n    x00041212: 'FileSetConsistencyFlag',\n    x00041220: 'DirectoryRecordSequence',\n    x00041400: 'OffsetOfNextDirectoryRecord',\n    x00041410: 'RecordInUseFlag',\n    x00041420: 'LowerLevelDirectoryEntityOffset',\n    x00041430: 'DirectoryRecordType',\n    x00041432: 'PrivateRecordUID',\n    x00041500: 'ReferencedFileID',\n    x00041504: 'MRDRDirectoryRecordOffset',\n    x00041510: 'ReferencedSOPClassUIDInFile',\n    x00041511: 'ReferencedSOPInstanceUIDInFile',\n    x00041512: 'ReferencedTransferSyntaxUIDInFile',\n    x0004151a: 'ReferencedRelatedSOPClassUIDInFile',\n    x00041600: 'NumberOfReferences',\n    x00080000: 'IdentifyingGroupLength',\n    x00080001: 'LengthToEnd',\n    x00080005: 'SpecificCharacterSet',\n    x00080006: 'LanguageCodeSequence',\n    x00080008: 'ImageType',\n    x00080010: 'RecognitionCode',\n    x00080012: 'InstanceCreationDate',\n    x00080013: 'InstanceCreationTime',\n    x00080014: 'InstanceCreatorUID',\n    x00080016: 'SOPClassUID',\n    x00080018: 'SOPInstanceUID',\n    x0008001a: 'RelatedGeneralSOPClassUID',\n    x0008001b: 'OriginalSpecializedSOPClassUID',\n    x00080020: 'StudyDate',\n    x00080021: 'SeriesDate',\n    x00080022: 'AcquisitionDate',\n    x00080023: 'ContentDate',\n    x00080024: 'OverlayDate',\n    x00080025: 'CurveDate',\n    x0008002a: 'AcquisitionDateTime',\n    x00080030: 'StudyTime',\n    x00080031: 'SeriesTime',\n    x00080032: 'AcquisitionTime',\n    x00080033: 'ContentTime',\n    x00080034: 'OverlayTime',\n    x00080035: 'CurveTime',\n    x00080040: 'DataSetType',\n    x00080041: 'DataSetSubtype',\n    x00080042: 'NuclearMedicineSeriesType',\n    x00080050: 'AccessionNumber',\n    x00080052: 'QueryRetrieveLevel',\n    x00080054: 'RetrieveAETitle',\n    x00080056: 'InstanceAvailability',\n    x00080058: 'FailedSOPInstanceUIDList',\n    x00080060: 'Modality',\n    x00080061: 'ModalitiesInStudy',\n    x00080062: 'SOPClassesInStudy',\n    x00080064: 'ConversionType',\n    x00080068: 'PresentationIntentType',\n    x00080070: 'Manufacturer',\n    x00080080: 'InstitutionName',\n    x00080081: 'InstitutionAddress',\n    x00080082: 'InstitutionCodeSequence',\n    x00080090: 'ReferringPhysicianName',\n    x00080092: 'ReferringPhysicianAddress',\n    x00080094: 'ReferringPhysicianTelephoneNumber',\n    x00080096: 'ReferringPhysicianIDSequence',\n    x00080100: 'CodeValue',\n    x00080102: 'CodingSchemeDesignator',\n    x00080103: 'CodingSchemeVersion',\n    x00080104: 'CodeMeaning',\n    x00080105: 'MappingResource',\n    x00080106: 'ContextGroupVersion',\n    x00080107: 'ContextGroupLocalVersion',\n    x0008010b: 'ContextGroupExtensionFlag',\n    x0008010c: 'CodingSchemeUID',\n    x0008010d: 'ContextGroupExtensionCreatorUID',\n    x0008010f: 'ContextIdentifier',\n    x00080110: 'CodingSchemeIDSequence',\n    x00080112: 'CodingSchemeRegistry',\n    x00080114: 'CodingSchemeExternalID',\n    x00080115: 'CodingSchemeName',\n    x00080116: 'CodingSchemeResponsibleOrganization',\n    x00080117: 'ContextUID',\n    x00080201: 'TimezoneOffsetFromUTC',\n    x00081000: 'NetworkID',\n    x00081010: 'StationName',\n    x00081030: 'StudyDescription',\n    x00081032: 'ProcedureCodeSequence',\n    x0008103e: 'SeriesDescription',\n    x00081040: 'InstitutionalDepartmentName',\n    x00081048: 'PhysiciansOfRecord',\n    x00081049: 'PhysiciansOfRecordIDSequence',\n    x00081050: 'PerformingPhysicianName',\n    x00081052: 'PerformingPhysicianIDSequence',\n    x00081060: 'NameOfPhysicianReadingStudy',\n    x00081062: 'PhysicianReadingStudyIDSequence',\n    x00081070: 'OperatorsName',\n    x00081072: 'OperatorIDSequence',\n    x00081080: 'AdmittingDiagnosesDescription',\n    x00081084: 'AdmittingDiagnosesCodeSequence',\n    x00081090: 'ManufacturersModelName',\n    x00081100: 'ReferencedResultsSequence',\n    x00081110: 'ReferencedStudySequence',\n    x00081111: 'ReferencedPerformedProcedureStepSequence',\n    x00081115: 'ReferencedSeriesSequence',\n    x00081120: 'ReferencedPatientSequence',\n    x00081125: 'ReferencedVisitSequence',\n    x00081130: 'ReferencedOverlaySequence',\n    x0008113a: 'ReferencedWaveformSequence',\n    x00081140: 'ReferencedImageSequence',\n    x00081145: 'ReferencedCurveSequence',\n    x0008114a: 'ReferencedInstanceSequence',\n    x00081150: 'ReferencedSOPClassUID',\n    x00081155: 'ReferencedSOPInstanceUID',\n    x0008115a: 'SOPClassesSupported',\n    x00081160: 'ReferencedFrameNumber',\n    x00081161: 'SimpleFrameList',\n    x00081162: 'CalculatedFrameList',\n    x00081163: 'TimeRange',\n    x00081164: 'FrameExtractionSequence',\n    x00081195: 'TransactionUID',\n    x00081197: 'FailureReason',\n    x00081198: 'FailedSOPSequence',\n    x00081199: 'ReferencedSOPSequence',\n    x00081200: 'OtherReferencedStudiesSequence',\n    x00081250: 'RelatedSeriesSequence',\n    x00082110: 'LossyImageCompressionRetired',\n    x00082111: 'DerivationDescription',\n    x00082112: 'SourceImageSequence',\n    x00082120: 'StageName',\n    x00082122: 'StageNumber',\n    x00082124: 'NumberOfStages',\n    x00082127: 'ViewName',\n    x00082128: 'ViewNumber',\n    x00082129: 'NumberOfEventTimers',\n    x0008212a: 'NumberOfViewsInStage',\n    x00082130: 'EventElapsedTimes',\n    x00082132: 'EventTimerNames',\n    x00082133: 'EventTimerSequence',\n    x00082134: 'EventTimeOffset',\n    x00082135: 'EventCodeSequence',\n    x00082142: 'StartTrim',\n    x00082143: 'StopTrim',\n    x00082144: 'RecommendedDisplayFrameRate',\n    x00082200: 'TransducerPosition',\n    x00082204: 'TransducerOrientation',\n    x00082208: 'AnatomicStructure',\n    x00082218: 'AnatomicRegionSequence',\n    x00082220: 'AnatomicRegionModifierSequence',\n    x00082228: 'PrimaryAnatomicStructureSequence',\n    x00082229: 'AnatomicStructureOrRegionSequence',\n    x00082230: 'AnatomicStructureModifierSequence',\n    x00082240: 'TransducerPositionSequence',\n    x00082242: 'TransducerPositionModifierSequence',\n    x00082244: 'TransducerOrientationSequence',\n    x00082246: 'TransducerOrientationModifierSeq',\n    x00082253: 'AnatomicEntrancePortalCodeSeqTrial',\n    x00082255: 'AnatomicApproachDirCodeSeqTrial',\n    x00082256: 'AnatomicPerspectiveDescrTrial',\n    x00082257: 'AnatomicPerspectiveCodeSeqTrial',\n    x00083001: 'AlternateRepresentationSequence',\n    x00083010: 'IrradiationEventUID',\n    x00084000: 'IdentifyingComments',\n    x00089007: 'FrameType',\n    x00089092: 'ReferencedImageEvidenceSequence',\n    x00089121: 'ReferencedRawDataSequence',\n    x00089123: 'CreatorVersionUID',\n    x00089124: 'DerivationImageSequence',\n    x00089154: 'SourceImageEvidenceSequence',\n    x00089205: 'PixelPresentation',\n    x00089206: 'VolumetricProperties',\n    x00089207: 'VolumeBasedCalculationTechnique',\n    x00089208: 'ComplexImageComponent',\n    x00089209: 'AcquisitionContrast',\n    x00089215: 'DerivationCodeSequence',\n    x00089237: 'GrayscalePresentationStateSequence',\n    x00089410: 'ReferencedOtherPlaneSequence',\n    x00089458: 'FrameDisplaySequence',\n    x00089459: 'RecommendedDisplayFrameRateInFloat',\n    x00089460: 'SkipFrameRangeFlag',\n    // x00091001: 'FullFidelity',\n    // x00091002: 'SuiteID',\n    // x00091004: 'ProductID',\n    // x00091027: 'ImageActualDate',\n    // x00091030: 'ServiceID',\n    // x00091031: 'MobileLocationNumber',\n    // x000910e3: 'EquipmentUID',\n    // x000910e6: 'GenesisVersionNow',\n    // x000910e7: 'ExamRecordChecksum',\n    // x000910e9: 'ActualSeriesDataTimeStamp',\n    x00100000: 'PatientGroupLength',\n    x00100010: 'PatientName',\n    x00100020: 'PatientID',\n    x00100021: 'IssuerOfPatientID',\n    x00100022: 'TypeOfPatientID',\n    x00100030: 'PatientBirthDate',\n    x00100032: 'PatientBirthTime',\n    x00100040: 'PatientSex',\n    x00100050: 'PatientInsurancePlanCodeSequence',\n    x00100101: 'PatientPrimaryLanguageCodeSeq',\n    x00100102: 'PatientPrimaryLanguageCodeModSeq',\n    x00101000: 'OtherPatientIDs',\n    x00101001: 'OtherPatientNames',\n    x00101002: 'OtherPatientIDsSequence',\n    x00101005: 'PatientBirthName',\n    x00101010: 'PatientAge',\n    x00101020: 'PatientSize',\n    x00101030: 'PatientWeight',\n    x00101040: 'PatientAddress',\n    x00101050: 'InsurancePlanIdentification',\n    x00101060: 'PatientMotherBirthName',\n    x00101080: 'MilitaryRank',\n    x00101081: 'BranchOfService',\n    x00101090: 'MedicalRecordLocator',\n    x00102000: 'MedicalAlerts',\n    x00102110: 'Allergies',\n    x00102150: 'CountryOfResidence',\n    x00102152: 'RegionOfResidence',\n    x00102154: 'PatientTelephoneNumbers',\n    x00102160: 'EthnicGroup',\n    x00102180: 'Occupation',\n    x001021a0: 'SmokingStatus',\n    x001021b0: 'AdditionalPatientHistory',\n    x001021c0: 'PregnancyStatus',\n    x001021d0: 'LastMenstrualDate',\n    x001021f0: 'PatientReligiousPreference',\n    x00102201: 'PatientSpeciesDescription',\n    x00102202: 'PatientSpeciesCodeSequence',\n    x00102203: 'PatientSexNeutered',\n    x00102210: 'AnatomicalOrientationType',\n    x00102292: 'PatientBreedDescription',\n    x00102293: 'PatientBreedCodeSequence',\n    x00102294: 'BreedRegistrationSequence',\n    x00102295: 'BreedRegistrationNumber',\n    x00102296: 'BreedRegistryCodeSequence',\n    x00102297: 'ResponsiblePerson',\n    x00102298: 'ResponsiblePersonRole',\n    x00102299: 'ResponsibleOrganization',\n    x00104000: 'PatientComments',\n    x00109431: 'ExaminedBodyThickness',\n    x00111010: 'PatientStatus',\n    x00120010: 'ClinicalTrialSponsorName',\n    x00120020: 'ClinicalTrialProtocolID',\n    x00120021: 'ClinicalTrialProtocolName',\n    x00120030: 'ClinicalTrialSiteID',\n    x00120031: 'ClinicalTrialSiteName',\n    x00120040: 'ClinicalTrialSubjectID',\n    x00120042: 'ClinicalTrialSubjectReadingID',\n    x00120050: 'ClinicalTrialTimePointID',\n    x00120051: 'ClinicalTrialTimePointDescription',\n    x00120060: 'ClinicalTrialCoordinatingCenter',\n    x00120062: 'PatientIdentityRemoved',\n    x00120063: 'DeidentificationMethod',\n    x00120064: 'DeidentificationMethodCodeSequence',\n    x00120071: 'ClinicalTrialSeriesID',\n    x00120072: 'ClinicalTrialSeriesDescription',\n    x00120084: 'DistributionType',\n    x00120085: 'ConsentForDistributionFlag',\n    x00180000: 'AcquisitionGroupLength',\n    x00180010: 'ContrastBolusAgent',\n    x00180012: 'ContrastBolusAgentSequence',\n    x00180014: 'ContrastBolusAdministrationRoute',\n    x00180015: 'BodyPartExamined',\n    x00180020: 'ScanningSequence',\n    x00180021: 'SequenceVariant',\n    x00180022: 'ScanOptions',\n    x00180023: 'MRAcquisitionType',\n    x00180024: 'SequenceName',\n    x00180025: 'AngioFlag',\n    x00180026: 'InterventionDrugInformationSeq',\n    x00180027: 'InterventionDrugStopTime',\n    x00180028: 'InterventionDrugDose',\n    x00180029: 'InterventionDrugSequence',\n    x0018002a: 'AdditionalDrugSequence',\n    x00180030: 'Radionuclide',\n    x00180031: 'Radiopharmaceutical',\n    x00180032: 'EnergyWindowCenterline',\n    x00180033: 'EnergyWindowTotalWidth',\n    x00180034: 'InterventionDrugName',\n    x00180035: 'InterventionDrugStartTime',\n    x00180036: 'InterventionSequence',\n    x00180037: 'TherapyType',\n    x00180038: 'InterventionStatus',\n    x00180039: 'TherapyDescription',\n    x0018003a: 'InterventionDescription',\n    x00180040: 'CineRate',\n    x00180042: 'InitialCineRunState',\n    x00180050: 'SliceThickness',\n    x00180060: 'KVP',\n    x00180070: 'CountsAccumulated',\n    x00180071: 'AcquisitionTerminationCondition',\n    x00180072: 'EffectiveDuration',\n    x00180073: 'AcquisitionStartCondition',\n    x00180074: 'AcquisitionStartConditionData',\n    x00180075: 'AcquisitionEndConditionData',\n    x00180080: 'RepetitionTime',\n    x00180081: 'EchoTime',\n    x00180082: 'InversionTime',\n    x00180083: 'NumberOfAverages',\n    x00180084: 'ImagingFrequency',\n    x00180085: 'ImagedNucleus',\n    x00180086: 'EchoNumber',\n    x00180087: 'MagneticFieldStrength',\n    x00180088: 'SpacingBetweenSlices',\n    x00180089: 'NumberOfPhaseEncodingSteps',\n    x00180090: 'DataCollectionDiameter',\n    x00180091: 'EchoTrainLength',\n    x00180093: 'PercentSampling',\n    x00180094: 'PercentPhaseFieldOfView',\n    x00180095: 'PixelBandwidth',\n    x00181000: 'DeviceSerialNumber',\n    x00181002: 'DeviceUID',\n    x00181003: 'DeviceID',\n    x00181004: 'PlateID',\n    x00181005: 'GeneratorID',\n    x00181006: 'GridID',\n    x00181007: 'CassetteID',\n    x00181008: 'GantryID',\n    x00181010: 'SecondaryCaptureDeviceID',\n    x00181011: 'HardcopyCreationDeviceID',\n    x00181012: 'DateOfSecondaryCapture',\n    x00181014: 'TimeOfSecondaryCapture',\n    x00181016: 'SecondaryCaptureDeviceManufacturer',\n    x00181017: 'HardcopyDeviceManufacturer',\n    x00181018: 'SecondaryCaptureDeviceModelName',\n    x00181019: 'SecondaryCaptureDeviceSoftwareVers',\n    x0018101a: 'HardcopyDeviceSoftwareVersion',\n    x0018101b: 'HardcopyDeviceModelName',\n    x00181020: 'SoftwareVersion',\n    x00181022: 'VideoImageFormatAcquired',\n    x00181023: 'DigitalImageFormatAcquired',\n    x00181030: 'ProtocolName',\n    x00181040: 'ContrastBolusRoute',\n    x00181041: 'ContrastBolusVolume',\n    x00181042: 'ContrastBolusStartTime',\n    x00181043: 'ContrastBolusStopTime',\n    x00181044: 'ContrastBolusTotalDose',\n    x00181045: 'SyringeCounts',\n    x00181046: 'ContrastFlowRate',\n    x00181047: 'ContrastFlowDuration',\n    x00181048: 'ContrastBolusIngredient',\n    x00181049: 'ContrastBolusConcentration',\n    x00181050: 'SpatialResolution',\n    x00181060: 'TriggerTime',\n    x00181061: 'TriggerSourceOrType',\n    x00181062: 'NominalInterval',\n    x00181063: 'FrameTime',\n    x00181064: 'CardiacFramingType',\n    x00181065: 'FrameTimeVector',\n    x00181066: 'FrameDelay',\n    x00181067: 'ImageTriggerDelay',\n    x00181068: 'MultiplexGroupTimeOffset',\n    x00181069: 'TriggerTimeOffset',\n    x0018106a: 'SynchronizationTrigger',\n    x0018106c: 'SynchronizationChannel',\n    x0018106e: 'TriggerSamplePosition',\n    x00181070: 'RadiopharmaceuticalRoute',\n    x00181071: 'RadiopharmaceuticalVolume',\n    x00181072: 'RadiopharmaceuticalStartTime',\n    x00181073: 'RadiopharmaceuticalStopTime',\n    x00181074: 'RadionuclideTotalDose',\n    x00181075: 'RadionuclideHalfLife',\n    x00181076: 'RadionuclidePositronFraction',\n    x00181077: 'RadiopharmaceuticalSpecActivity',\n    x00181078: 'RadiopharmaceuticalStartDateTime',\n    x00181079: 'RadiopharmaceuticalStopDateTime',\n    x00181080: 'BeatRejectionFlag',\n    x00181081: 'LowRRValue',\n    x00181082: 'HighRRValue',\n    x00181083: 'IntervalsAcquired',\n    x00181084: 'IntervalsRejected',\n    x00181085: 'PVCRejection',\n    x00181086: 'SkipBeats',\n    x00181088: 'HeartRate',\n    x00181090: 'CardiacNumberOfImages',\n    x00181094: 'TriggerWindow',\n    x00181100: 'ReconstructionDiameter',\n    x00181110: 'DistanceSourceToDetector',\n    x00181111: 'DistanceSourceToPatient',\n    x00181114: 'EstimatedRadiographicMagnification',\n    x00181120: 'GantryDetectorTilt',\n    x00181121: 'GantryDetectorSlew',\n    x00181130: 'TableHeight',\n    x00181131: 'TableTraverse',\n    x00181134: 'TableMotion',\n    x00181135: 'TableVerticalIncrement',\n    x00181136: 'TableLateralIncrement',\n    x00181137: 'TableLongitudinalIncrement',\n    x00181138: 'TableAngle',\n    x0018113a: 'TableType',\n    x00181140: 'RotationDirection',\n    x00181141: 'AngularPosition',\n    x00181142: 'RadialPosition',\n    x00181143: 'ScanArc',\n    x00181144: 'AngularStep',\n    x00181145: 'CenterOfRotationOffset',\n    x00181146: 'RotationOffset',\n    x00181147: 'FieldOfViewShape',\n    x00181149: 'FieldOfViewDimensions',\n    x00181150: 'ExposureTime',\n    x00181151: 'XRayTubeCurrent',\n    x00181152: 'Exposure',\n    x00181153: 'ExposureInMicroAmpSec',\n    x00181154: 'AveragePulseWidth',\n    x00181155: 'RadiationSetting',\n    x00181156: 'RectificationType',\n    x0018115a: 'RadiationMode',\n    x0018115e: 'ImageAreaDoseProduct',\n    x00181160: 'FilterType',\n    x00181161: 'TypeOfFilters',\n    x00181162: 'IntensifierSize',\n    x00181164: 'ImagerPixelSpacing',\n    x00181166: 'Grid',\n    x00181170: 'GeneratorPower',\n    x00181180: 'CollimatorGridName',\n    x00181181: 'CollimatorType',\n    x00181182: 'FocalDistance',\n    x00181183: 'XFocusCenter',\n    x00181184: 'YFocusCenter',\n    x00181190: 'FocalSpots',\n    x00181191: 'AnodeTargetMaterial',\n    x001811a0: 'BodyPartThickness',\n    x001811a2: 'CompressionForce',\n    x00181200: 'DateOfLastCalibration',\n    x00181201: 'TimeOfLastCalibration',\n    x00181210: 'ConvolutionKernel',\n    x00181240: 'UpperLowerPixelValues',\n    x00181242: 'ActualFrameDuration',\n    x00181243: 'CountRate',\n    x00181244: 'PreferredPlaybackSequencing',\n    x00181250: 'ReceiveCoilName',\n    x00181251: 'TransmitCoilName',\n    x00181260: 'PlateType',\n    x00181261: 'PhosphorType',\n    x00181300: 'ScanVelocity',\n    x00181301: 'WholeBodyTechnique',\n    x00181302: 'ScanLength',\n    x00181310: 'AcquisitionMatrix',\n    x00181312: 'InPlanePhaseEncodingDirection',\n    x00181314: 'FlipAngle',\n    x00181315: 'VariableFlipAngleFlag',\n    x00181316: 'SAR',\n    x00181318: 'DB-Dt',\n    x00181400: 'AcquisitionDeviceProcessingDescr',\n    x00181401: 'AcquisitionDeviceProcessingCode',\n    x00181402: 'CassetteOrientation',\n    x00181403: 'CassetteSize',\n    x00181404: 'ExposuresOnPlate',\n    x00181405: 'RelativeXRayExposure',\n    x00181450: 'ColumnAngulation',\n    x00181460: 'TomoLayerHeight',\n    x00181470: 'TomoAngle',\n    x00181480: 'TomoTime',\n    x00181490: 'TomoType',\n    x00181491: 'TomoClass',\n    x00181495: 'NumberOfTomosynthesisSourceImages',\n    x00181500: 'PositionerMotion',\n    x00181508: 'PositionerType',\n    x00181510: 'PositionerPrimaryAngle',\n    x00181511: 'PositionerSecondaryAngle',\n    x00181520: 'PositionerPrimaryAngleIncrement',\n    x00181521: 'PositionerSecondaryAngleIncrement',\n    x00181530: 'DetectorPrimaryAngle',\n    x00181531: 'DetectorSecondaryAngle',\n    x00181600: 'ShutterShape',\n    x00181602: 'ShutterLeftVerticalEdge',\n    x00181604: 'ShutterRightVerticalEdge',\n    x00181606: 'ShutterUpperHorizontalEdge',\n    x00181608: 'ShutterLowerHorizontalEdge',\n    x00181610: 'CenterOfCircularShutter',\n    x00181612: 'RadiusOfCircularShutter',\n    x00181620: 'VerticesOfPolygonalShutter',\n    x00181622: 'ShutterPresentationValue',\n    x00181623: 'ShutterOverlayGroup',\n    x00181624: 'ShutterPresentationColorCIELabVal',\n    x00181700: 'CollimatorShape',\n    x00181702: 'CollimatorLeftVerticalEdge',\n    x00181704: 'CollimatorRightVerticalEdge',\n    x00181706: 'CollimatorUpperHorizontalEdge',\n    x00181708: 'CollimatorLowerHorizontalEdge',\n    x00181710: 'CenterOfCircularCollimator',\n    x00181712: 'RadiusOfCircularCollimator',\n    x00181720: 'VerticesOfPolygonalCollimator',\n    x00181800: 'AcquisitionTimeSynchronized',\n    x00181801: 'TimeSource',\n    x00181802: 'TimeDistributionProtocol',\n    x00181803: 'NTPSourceAddress',\n    x00182001: 'PageNumberVector',\n    x00182002: 'FrameLabelVector',\n    x00182003: 'FramePrimaryAngleVector',\n    x00182004: 'FrameSecondaryAngleVector',\n    x00182005: 'SliceLocationVector',\n    x00182006: 'DisplayWindowLabelVector',\n    x00182010: 'NominalScannedPixelSpacing',\n    x00182020: 'DigitizingDeviceTransportDirection',\n    x00182030: 'RotationOfScannedFilm',\n    x00183100: 'IVUSAcquisition',\n    x00183101: 'IVUSPullbackRate',\n    x00183102: 'IVUSGatedRate',\n    x00183103: 'IVUSPullbackStartFrameNumber',\n    x00183104: 'IVUSPullbackStopFrameNumber',\n    x00183105: 'LesionNumber',\n    x00184000: 'AcquisitionComments',\n    x00185000: 'OutputPower',\n    x00185010: 'TransducerData',\n    x00185012: 'FocusDepth',\n    x00185020: 'ProcessingFunction',\n    x00185021: 'PostprocessingFunction',\n    x00185022: 'MechanicalIndex',\n    x00185024: 'BoneThermalIndex',\n    x00185026: 'CranialThermalIndex',\n    x00185027: 'SoftTissueThermalIndex',\n    x00185028: 'SoftTissueFocusThermalIndex',\n    x00185029: 'SoftTissueSurfaceThermalIndex',\n    x00185030: 'DynamicRange',\n    x00185040: 'TotalGain',\n    x00185050: 'DepthOfScanField',\n    x00185100: 'PatientPosition',\n    x00185101: 'ViewPosition',\n    x00185104: 'ProjectionEponymousNameCodeSeq',\n    x00185210: 'ImageTransformationMatrix',\n    x00185212: 'ImageTranslationVector',\n    x00186000: 'Sensitivity',\n    x00186011: 'SequenceOfUltrasoundRegions',\n    x00186012: 'RegionSpatialFormat',\n    x00186014: 'RegionDataType',\n    x00186016: 'RegionFlags',\n    x00186018: 'RegionLocationMinX0',\n    x0018601a: 'RegionLocationMinY0',\n    x0018601c: 'RegionLocationMaxX1',\n    x0018601e: 'RegionLocationMaxY1',\n    x00186020: 'ReferencePixelX0',\n    x00186022: 'ReferencePixelY0',\n    x00186024: 'PhysicalUnitsXDirection',\n    x00186026: 'PhysicalUnitsYDirection',\n    x00186028: 'ReferencePixelPhysicalValueX',\n    x0018602a: 'ReferencePixelPhysicalValueY',\n    x0018602c: 'PhysicalDeltaX',\n    x0018602e: 'PhysicalDeltaY',\n    x00186030: 'TransducerFrequency',\n    x00186031: 'TransducerType',\n    x00186032: 'PulseRepetitionFrequency',\n    x00186034: 'DopplerCorrectionAngle',\n    x00186036: 'SteeringAngle',\n    x00186038: 'DopplerSampleVolumeXPosRetired',\n    x00186039: 'DopplerSampleVolumeXPosition',\n    x0018603a: 'DopplerSampleVolumeYPosRetired',\n    x0018603b: 'DopplerSampleVolumeYPosition',\n    x0018603c: 'TMLinePositionX0Retired',\n    x0018603d: 'TMLinePositionX0',\n    x0018603e: 'TMLinePositionY0Retired',\n    x0018603f: 'TMLinePositionY0',\n    x00186040: 'TMLinePositionX1Retired',\n    x00186041: 'TMLinePositionX1',\n    x00186042: 'TMLinePositionY1Retired',\n    x00186043: 'TMLinePositionY1',\n    x00186044: 'PixelComponentOrganization',\n    x00186046: 'PixelComponentMask',\n    x00186048: 'PixelComponentRangeStart',\n    x0018604a: 'PixelComponentRangeStop',\n    x0018604c: 'PixelComponentPhysicalUnits',\n    x0018604e: 'PixelComponentDataType',\n    x00186050: 'NumberOfTableBreakPoints',\n    x00186052: 'TableOfXBreakPoints',\n    x00186054: 'TableOfYBreakPoints',\n    x00186056: 'NumberOfTableEntries',\n    x00186058: 'TableOfPixelValues',\n    x0018605a: 'TableOfParameterValues',\n    x00186060: 'RWaveTimeVector',\n    x00187000: 'DetectorConditionsNominalFlag',\n    x00187001: 'DetectorTemperature',\n    x00187004: 'DetectorType',\n    x00187005: 'DetectorConfiguration',\n    x00187006: 'DetectorDescription',\n    x00187008: 'DetectorMode',\n    x0018700a: 'DetectorID',\n    x0018700c: 'DateOfLastDetectorCalibration',\n    x0018700e: 'TimeOfLastDetectorCalibration',\n    x00187010: 'DetectorExposuresSinceCalibration',\n    x00187011: 'DetectorExposuresSinceManufactured',\n    x00187012: 'DetectorTimeSinceLastExposure',\n    x00187014: 'DetectorActiveTime',\n    x00187016: 'DetectorActiveOffsetFromExposure',\n    x0018701a: 'DetectorBinning',\n    x00187020: 'DetectorElementPhysicalSize',\n    x00187022: 'DetectorElementSpacing',\n    x00187024: 'DetectorActiveShape',\n    x00187026: 'DetectorActiveDimensions',\n    x00187028: 'DetectorActiveOrigin',\n    x0018702a: 'DetectorManufacturerName',\n    x0018702b: 'DetectorManufacturersModelName',\n    x00187030: 'FieldOfViewOrigin',\n    x00187032: 'FieldOfViewRotation',\n    x00187034: 'FieldOfViewHorizontalFlip',\n    x00187040: 'GridAbsorbingMaterial',\n    x00187041: 'GridSpacingMaterial',\n    x00187042: 'GridThickness',\n    x00187044: 'GridPitch',\n    x00187046: 'GridAspectRatio',\n    x00187048: 'GridPeriod',\n    x0018704c: 'GridFocalDistance',\n    x00187050: 'FilterMaterial',\n    x00187052: 'FilterThicknessMinimum',\n    x00187054: 'FilterThicknessMaximum',\n    x00187060: 'ExposureControlMode',\n    x00187062: 'ExposureControlModeDescription',\n    x00187064: 'ExposureStatus',\n    x00187065: 'PhototimerSetting',\n    x00188150: 'ExposureTimeInMicroSec',\n    x00188151: 'XRayTubeCurrentInMicroAmps',\n    x00189004: 'ContentQualification',\n    x00189005: 'PulseSequenceName',\n    x00189006: 'MRImagingModifierSequence',\n    x00189008: 'EchoPulseSequence',\n    x00189009: 'InversionRecovery',\n    x00189010: 'FlowCompensation',\n    x00189011: 'MultipleSpinEcho',\n    x00189012: 'MultiPlanarExcitation',\n    x00189014: 'PhaseContrast',\n    x00189015: 'TimeOfFlightContrast',\n    x00189016: 'Spoiling',\n    x00189017: 'SteadyStatePulseSequence',\n    x00189018: 'EchoPlanarPulseSequence',\n    x00189019: 'TagAngleFirstAxis',\n    x00189020: 'MagnetizationTransfer',\n    x00189021: 'T2Preparation',\n    x00189022: 'BloodSignalNulling',\n    x00189024: 'SaturationRecovery',\n    x00189025: 'SpectrallySelectedSuppression',\n    x00189026: 'SpectrallySelectedExcitation',\n    x00189027: 'SpatialPresaturation',\n    x00189028: 'Tagging',\n    x00189029: 'OversamplingPhase',\n    x00189030: 'TagSpacingFirstDimension',\n    x00189032: 'GeometryOfKSpaceTraversal',\n    x00189033: 'SegmentedKSpaceTraversal',\n    x00189034: 'RectilinearPhaseEncodeReordering',\n    x00189035: 'TagThickness',\n    x00189036: 'PartialFourierDirection',\n    x00189037: 'CardiacSynchronizationTechnique',\n    x00189041: 'ReceiveCoilManufacturerName',\n    x00189042: 'MRReceiveCoilSequence',\n    x00189043: 'ReceiveCoilType',\n    x00189044: 'QuadratureReceiveCoil',\n    x00189045: 'MultiCoilDefinitionSequence',\n    x00189046: 'MultiCoilConfiguration',\n    x00189047: 'MultiCoilElementName',\n    x00189048: 'MultiCoilElementUsed',\n    x00189049: 'MRTransmitCoilSequence',\n    x00189050: 'TransmitCoilManufacturerName',\n    x00189051: 'TransmitCoilType',\n    x00189052: 'SpectralWidth',\n    x00189053: 'ChemicalShiftReference',\n    x00189054: 'VolumeLocalizationTechnique',\n    x00189058: 'MRAcquisitionFrequencyEncodeSteps',\n    x00189059: 'Decoupling',\n    x00189060: 'DecoupledNucleus',\n    x00189061: 'DecouplingFrequency',\n    x00189062: 'DecouplingMethod',\n    x00189063: 'DecouplingChemicalShiftReference',\n    x00189064: 'KSpaceFiltering',\n    x00189065: 'TimeDomainFiltering',\n    x00189066: 'NumberOfZeroFills',\n    x00189067: 'BaselineCorrection',\n    x00189069: 'ParallelReductionFactorInPlane',\n    x00189070: 'CardiacRRIntervalSpecified',\n    x00189073: 'AcquisitionDuration',\n    x00189074: 'FrameAcquisitionDateTime',\n    x00189075: 'DiffusionDirectionality',\n    x00189076: 'DiffusionGradientDirectionSequence',\n    x00189077: 'ParallelAcquisition',\n    x00189078: 'ParallelAcquisitionTechnique',\n    x00189079: 'InversionTimes',\n    x00189080: 'MetaboliteMapDescription',\n    x00189081: 'PartialFourier',\n    x00189082: 'EffectiveEchoTime',\n    x00189083: 'MetaboliteMapCodeSequence',\n    x00189084: 'ChemicalShiftSequence',\n    x00189085: 'CardiacSignalSource',\n    x00189087: 'DiffusionBValue',\n    x00189089: 'DiffusionGradientOrientation',\n    x00189090: 'VelocityEncodingDirection',\n    x00189091: 'VelocityEncodingMinimumValue',\n    x00189093: 'NumberOfKSpaceTrajectories',\n    x00189094: 'CoverageOfKSpace',\n    x00189095: 'SpectroscopyAcquisitionPhaseRows',\n    x00189096: 'ParallelReductFactorInPlaneRetired',\n    x00189098: 'TransmitterFrequency',\n    x00189100: 'ResonantNucleus',\n    x00189101: 'FrequencyCorrection',\n    x00189103: 'MRSpectroscopyFOV-GeometrySequence',\n    x00189104: 'SlabThickness',\n    x00189105: 'SlabOrientation',\n    x00189106: 'MidSlabPosition',\n    x00189107: 'MRSpatialSaturationSequence',\n    x00189112: 'MRTimingAndRelatedParametersSeq',\n    x00189114: 'MREchoSequence',\n    x00189115: 'MRModifierSequence',\n    x00189117: 'MRDiffusionSequence',\n    x00189118: 'CardiacTriggerSequence',\n    x00189119: 'MRAveragesSequence',\n    x00189125: 'MRFOV-GeometrySequence',\n    x00189126: 'VolumeLocalizationSequence',\n    x00189127: 'SpectroscopyAcquisitionDataColumns',\n    x00189147: 'DiffusionAnisotropyType',\n    x00189151: 'FrameReferenceDateTime',\n    x00189152: 'MRMetaboliteMapSequence',\n    x00189155: 'ParallelReductionFactorOutOfPlane',\n    x00189159: 'SpectroscopyOutOfPlanePhaseSteps',\n    x00189166: 'BulkMotionStatus',\n    x00189168: 'ParallelReductionFactSecondInPlane',\n    x00189169: 'CardiacBeatRejectionTechnique',\n    x00189170: 'RespiratoryMotionCompTechnique',\n    x00189171: 'RespiratorySignalSource',\n    x00189172: 'BulkMotionCompensationTechnique',\n    x00189173: 'BulkMotionSignalSource',\n    x00189174: 'ApplicableSafetyStandardAgency',\n    x00189175: 'ApplicableSafetyStandardDescr',\n    x00189176: 'OperatingModeSequence',\n    x00189177: 'OperatingModeType',\n    x00189178: 'OperatingMode',\n    x00189179: 'SpecificAbsorptionRateDefinition',\n    x00189180: 'GradientOutputType',\n    x00189181: 'SpecificAbsorptionRateValue',\n    x00189182: 'GradientOutput',\n    x00189183: 'FlowCompensationDirection',\n    x00189184: 'TaggingDelay',\n    x00189185: 'RespiratoryMotionCompTechDescr',\n    x00189186: 'RespiratorySignalSourceID',\n    x00189195: 'ChemicalShiftsMinIntegrateLimitHz',\n    x00189196: 'ChemicalShiftsMaxIntegrateLimitHz',\n    x00189197: 'MRVelocityEncodingSequence',\n    x00189198: 'FirstOrderPhaseCorrection',\n    x00189199: 'WaterReferencedPhaseCorrection',\n    x00189200: 'MRSpectroscopyAcquisitionType',\n    x00189214: 'RespiratoryCyclePosition',\n    x00189217: 'VelocityEncodingMaximumValue',\n    x00189218: 'TagSpacingSecondDimension',\n    x00189219: 'TagAngleSecondAxis',\n    x00189220: 'FrameAcquisitionDuration',\n    x00189226: 'MRImageFrameTypeSequence',\n    x00189227: 'MRSpectroscopyFrameTypeSequence',\n    x00189231: 'MRAcqPhaseEncodingStepsInPlane',\n    x00189232: 'MRAcqPhaseEncodingStepsOutOfPlane',\n    x00189234: 'SpectroscopyAcqPhaseColumns',\n    x00189236: 'CardiacCyclePosition',\n    x00189239: 'SpecificAbsorptionRateSequence',\n    x00189240: 'RFEchoTrainLength',\n    x00189241: 'GradientEchoTrainLength',\n    x00189295: 'ChemicalShiftsMinIntegrateLimitPPM',\n    x00189296: 'ChemicalShiftsMaxIntegrateLimitPPM',\n    x00189301: 'CTAcquisitionTypeSequence',\n    x00189302: 'AcquisitionType',\n    x00189303: 'TubeAngle',\n    x00189304: 'CTAcquisitionDetailsSequence',\n    x00189305: 'RevolutionTime',\n    x00189306: 'SingleCollimationWidth',\n    x00189307: 'TotalCollimationWidth',\n    x00189308: 'CTTableDynamicsSequence',\n    x00189309: 'TableSpeed',\n    x00189310: 'TableFeedPerRotation',\n    x00189311: 'SpiralPitchFactor',\n    x00189312: 'CTGeometrySequence',\n    x00189313: 'DataCollectionCenterPatient',\n    x00189314: 'CTReconstructionSequence',\n    x00189315: 'ReconstructionAlgorithm',\n    x00189316: 'ConvolutionKernelGroup',\n    x00189317: 'ReconstructionFieldOfView',\n    x00189318: 'ReconstructionTargetCenterPatient',\n    x00189319: 'ReconstructionAngle',\n    x00189320: 'ImageFilter',\n    x00189321: 'CTExposureSequence',\n    x00189322: 'ReconstructionPixelSpacing',\n    x00189323: 'ExposureModulationType',\n    x00189324: 'EstimatedDoseSaving',\n    x00189325: 'CTXRayDetailsSequence',\n    x00189326: 'CTPositionSequence',\n    x00189327: 'TablePosition',\n    x00189328: 'ExposureTimeInMilliSec',\n    x00189329: 'CTImageFrameTypeSequence',\n    x00189330: 'XRayTubeCurrentInMilliAmps',\n    x00189332: 'ExposureInMilliAmpSec',\n    x00189333: 'ConstantVolumeFlag',\n    x00189334: 'FluoroscopyFlag',\n    x00189335: 'SourceToDataCollectionCenterDist',\n    x00189337: 'ContrastBolusAgentNumber',\n    x00189338: 'ContrastBolusIngredientCodeSeq',\n    x00189340: 'ContrastAdministrationProfileSeq',\n    x00189341: 'ContrastBolusUsageSequence',\n    x00189342: 'ContrastBolusAgentAdministered',\n    x00189343: 'ContrastBolusAgentDetected',\n    x00189344: 'ContrastBolusAgentPhase',\n    x00189345: 'CTDIvol',\n    x00189346: 'CTDIPhantomTypeCodeSequence',\n    x00189351: 'CalciumScoringMassFactorPatient',\n    x00189352: 'CalciumScoringMassFactorDevice',\n    x00189353: 'EnergyWeightingFactor',\n    x00189360: 'CTAdditionalXRaySourceSequence',\n    x00189401: 'ProjectionPixelCalibrationSequence',\n    x00189402: 'DistanceSourceToIsocenter',\n    x00189403: 'DistanceObjectToTableTop',\n    x00189404: 'ObjectPixelSpacingInCenterOfBeam',\n    x00189405: 'PositionerPositionSequence',\n    x00189406: 'TablePositionSequence',\n    x00189407: 'CollimatorShapeSequence',\n    x00189412: 'XA-XRFFrameCharacteristicsSequence',\n    x00189417: 'FrameAcquisitionSequence',\n    x00189420: 'XRayReceptorType',\n    x00189423: 'AcquisitionProtocolName',\n    x00189424: 'AcquisitionProtocolDescription',\n    x00189425: 'ContrastBolusIngredientOpaque',\n    x00189426: 'DistanceReceptorPlaneToDetHousing',\n    x00189427: 'IntensifierActiveShape',\n    x00189428: 'IntensifierActiveDimensions',\n    x00189429: 'PhysicalDetectorSize',\n    x00189430: 'PositionOfIsocenterProjection',\n    x00189432: 'FieldOfViewSequence',\n    x00189433: 'FieldOfViewDescription',\n    x00189434: 'ExposureControlSensingRegionsSeq',\n    x00189435: 'ExposureControlSensingRegionShape',\n    x00189436: 'ExposureControlSensRegionLeftEdge',\n    x00189437: 'ExposureControlSensRegionRightEdge',\n    x00189440: 'CenterOfCircExposControlSensRegion',\n    x00189441: 'RadiusOfCircExposControlSensRegion',\n    x00189447: 'ColumnAngulationPatient',\n    x00189449: 'BeamAngle',\n    x00189451: 'FrameDetectorParametersSequence',\n    x00189452: 'CalculatedAnatomyThickness',\n    x00189455: 'CalibrationSequence',\n    x00189456: 'ObjectThicknessSequence',\n    x00189457: 'PlaneIdentification',\n    x00189461: 'FieldOfViewDimensionsInFloat',\n    x00189462: 'IsocenterReferenceSystemSequence',\n    x00189463: 'PositionerIsocenterPrimaryAngle',\n    x00189464: 'PositionerIsocenterSecondaryAngle',\n    x00189465: 'PositionerIsocenterDetRotAngle',\n    x00189466: 'TableXPositionToIsocenter',\n    x00189467: 'TableYPositionToIsocenter',\n    x00189468: 'TableZPositionToIsocenter',\n    x00189469: 'TableHorizontalRotationAngle',\n    x00189470: 'TableHeadTiltAngle',\n    x00189471: 'TableCradleTiltAngle',\n    x00189472: 'FrameDisplayShutterSequence',\n    x00189473: 'AcquiredImageAreaDoseProduct',\n    x00189474: 'CArmPositionerTabletopRelationship',\n    x00189476: 'XRayGeometrySequence',\n    x00189477: 'IrradiationEventIDSequence',\n    x00189504: 'XRay3DFrameTypeSequence',\n    x00189506: 'ContributingSourcesSequence',\n    x00189507: 'XRay3DAcquisitionSequence',\n    x00189508: 'PrimaryPositionerScanArc',\n    x00189509: 'SecondaryPositionerScanArc',\n    x00189510: 'PrimaryPositionerScanStartAngle',\n    x00189511: 'SecondaryPositionerScanStartAngle',\n    x00189514: 'PrimaryPositionerIncrement',\n    x00189515: 'SecondaryPositionerIncrement',\n    x00189516: 'StartAcquisitionDateTime',\n    x00189517: 'EndAcquisitionDateTime',\n    x00189524: 'ApplicationName',\n    x00189525: 'ApplicationVersion',\n    x00189526: 'ApplicationManufacturer',\n    x00189527: 'AlgorithmType',\n    x00189528: 'AlgorithmDescription',\n    x00189530: 'XRay3DReconstructionSequence',\n    x00189531: 'ReconstructionDescription',\n    x00189538: 'PerProjectionAcquisitionSequence',\n    x00189601: 'DiffusionBMatrixSequence',\n    x00189602: 'DiffusionBValueXX',\n    x00189603: 'DiffusionBValueXY',\n    x00189604: 'DiffusionBValueXZ',\n    x00189605: 'DiffusionBValueYY',\n    x00189606: 'DiffusionBValueYZ',\n    x00189607: 'DiffusionBValueZZ',\n    x00189701: 'DecayCorrectionDateTime',\n    x00189715: 'StartDensityThreshold',\n    x00189722: 'TerminationTimeThreshold',\n    x00189725: 'DetectorGeometry',\n    x00189727: 'AxialDetectorDimension',\n    x00189735: 'PETPositionSequence',\n    x00189739: 'NumberOfIterations',\n    x00189740: 'NumberOfSubsets',\n    x00189751: 'PETFrameTypeSequence',\n    x00189756: 'ReconstructionType',\n    x00189758: 'DecayCorrected',\n    x00189759: 'AttenuationCorrected',\n    x00189760: 'ScatterCorrected',\n    x00189761: 'DeadTimeCorrected',\n    x00189762: 'GantryMotionCorrected',\n    x00189763: 'PatientMotionCorrected',\n    x00189765: 'RandomsCorrected',\n    x00189767: 'SensitivityCalibrated',\n    x00189801: 'DepthsOfFocus',\n    x00189804: 'ExclusionStartDatetime',\n    x00189805: 'ExclusionDuration',\n    x00189807: 'ImageDataTypeSequence',\n    x00189808: 'DataType',\n    x0018980b: 'AliasedDataType',\n    x0018a001: 'ContributingEquipmentSequence',\n    x0018a002: 'ContributionDateTime',\n    x0018a003: 'ContributionDescription',\n    // x00191002: 'NumberOfCellsIInDetector',\n    // x00191003: 'CellNumberAtTheta',\n    // x00191004: 'CellSpacing',\n    // x0019100f: 'HorizFrameOfRef',\n    // x00191011: 'SeriesContrast',\n    // x00191012: 'LastPseq',\n    // x00191013: 'StartNumberForBaseline',\n    // x00191014: 'EndNumberForBaseline',\n    // x00191015: 'StartNumberForEnhancedScans',\n    // x00191016: 'EndNumberForEnhancedScans',\n    // x00191017: 'SeriesPlane',\n    // x00191018: 'FirstScanRas',\n    // x00191019: 'FirstScanLocation',\n    // x0019101a: 'LastScanRas',\n    // x0019101b: 'LastScanLoc',\n    // x0019101e: 'DisplayFieldOfView',\n    // x00191023: 'TableSpeed',\n    // x00191024: 'MidScanTime',\n    // x00191025: 'MidScanFlag',\n    // x00191026: 'DegreesOfAzimuth',\n    // x00191027: 'GantryPeriod',\n    // x0019102a: 'XRayOnPosition',\n    // x0019102b: 'XRayOffPosition',\n    // x0019102c: 'NumberOfTriggers',\n    // x0019102e: 'AngleOfFirstView',\n    // x0019102f: 'TriggerFrequency',\n    // x00191039: 'ScanFOVType',\n    // x00191040: 'StatReconFlag',\n    // x00191041: 'ComputeType',\n    // x00191042: 'SegmentNumber',\n    // x00191043: 'TotalSegmentsRequested',\n    // x00191044: 'InterscanDelay',\n    // x00191047: 'ViewCompressionFactor',\n    // x0019104a: 'TotalNoOfRefChannels',\n    // x0019104b: 'DataSizeForScanData',\n    // x00191052: 'ReconPostProcflag',\n    // x00191057: 'CTWaterNumber',\n    // x00191058: 'CTBoneNumber',\n    // x0019105a: 'AcquisitionDuration',\n    // x0019105e: 'NumberOfChannels',\n    // x0019105f: 'IncrementBetweenChannels',\n    // x00191060: 'StartingView',\n    // x00191061: 'NumberOfViews',\n    // x00191062: 'IncrementBetweenViews',\n    // x0019106a: 'DependantOnNoViewsProcessed',\n    // x0019106b: 'FieldOfViewInDetectorCells',\n    // x00191070: 'ValueOfBackProjectionButton',\n    // x00191071: 'SetIfFatqEstimatesWereUsed',\n    // x00191072: 'ZChanAvgOverViews',\n    // x00191073: 'AvgOfLeftRefChansOverViews',\n    // x00191074: 'MaxLeftChanOverViews',\n    // x00191075: 'AvgOfRightRefChansOverViews',\n    // x00191076: 'MaxRightChanOverViews',\n    // x0019107d: 'SecondEcho',\n    // x0019107e: 'NumberOfEchoes',\n    // x0019107f: 'TableDelta',\n    // x00191081: 'Contiguous',\n    // x00191084: 'PeakSAR',\n    // x00191085: 'MonitorSAR',\n    // x00191087: 'CardiacRepetitionTime',\n    // x00191088: 'ImagesPerCardiacCycle',\n    // x0019108a: 'ActualReceiveGainAnalog',\n    // x0019108b: 'ActualReceiveGainDigital',\n    // x0019108d: 'DelayAfterTrigger',\n    // x0019108f: 'Swappf',\n    // x00191090: 'PauseInterval',\n    // x00191091: 'PulseTime',\n    // x00191092: 'SliceOffsetOnFreqAxis',\n    // x00191093: 'CenterFrequency',\n    // x00191094: 'TransmitGain',\n    // x00191095: 'AnalogReceiverGain',\n    // x00191096: 'DigitalReceiverGain',\n    // x00191097: 'BitmapDefiningCVs',\n    // x00191098: 'CenterFreqMethod',\n    // x0019109b: 'PulseSeqMode',\n    // x0019109c: 'PulseSeqName',\n    // x0019109d: 'PulseSeqDate',\n    // x0019109e: 'InternalPulseSeqName',\n    // x0019109f: 'TransmittingCoil',\n    // x001910a0: 'SurfaceCoilType',\n    // x001910a1: 'ExtremityCoilFlag',\n    // x001910a2: 'RawDataRunNumber',\n    // x001910a3: 'CalibratedFieldStrength',\n    // x001910a4: 'SATFatWaterBone',\n    // x001910a5: 'ReceiveBandwidth',\n    // x001910a7: 'UserData01',\n    // x001910a8: 'UserData02',\n    // x001910a9: 'UserData03',\n    // x001910aa: 'UserData04',\n    // x001910ab: 'UserData05',\n    // x001910ac: 'UserData06',\n    // x001910ad: 'UserData07',\n    // x001910ae: 'UserData08',\n    // x001910af: 'UserData09',\n    // x001910b0: 'UserData10',\n    // x001910b1: 'UserData11',\n    // x001910b2: 'UserData12',\n    // x001910b3: 'UserData13',\n    // x001910b4: 'UserData14',\n    // x001910b5: 'UserData15',\n    // x001910b6: 'UserData16',\n    // x001910b7: 'UserData17',\n    // x001910b8: 'UserData18',\n    // x001910b9: 'UserData19',\n    // x001910ba: 'UserData20',\n    // x001910bb: 'UserData21',\n    // x001910bc: 'UserData22',\n    // x001910bd: 'UserData23',\n    // x001910be: 'ProjectionAngle',\n    // x001910c0: 'SaturationPlanes',\n    // x001910c1: 'SurfaceCoilIntensity',\n    // x001910c2: 'SATLocationR',\n    // x001910c3: 'SATLocationL',\n    // x001910c4: 'SATLocationA',\n    // x001910c5: 'SATLocationP',\n    // x001910c6: 'SATLocationH',\n    // x001910c7: 'SATLocationF',\n    // x001910c8: 'SATThicknessR-L',\n    // x001910c9: 'SATThicknessA-P',\n    // x001910ca: 'SATThicknessH-F',\n    // x001910cb: 'PrescribedFlowAxis',\n    // x001910cc: 'VelocityEncoding',\n    // x001910cd: 'ThicknessDisclaimer',\n    // x001910ce: 'PrescanType',\n    // x001910cf: 'PrescanStatus',\n    // x001910d0: 'RawDataType',\n    // x001910d2: 'ProjectionAlgorithm',\n    // x001910d3: 'ProjectionAlgorithm',\n    // x001910d5: 'FractionalEcho',\n    // x001910d6: 'PrepPulse',\n    // x001910d7: 'CardiacPhases',\n    // x001910d8: 'VariableEchoflag',\n    // x001910d9: 'ConcatenatedSAT',\n    // x001910da: 'ReferenceChannelUsed',\n    // x001910db: 'BackProjectorCoefficient',\n    // x001910dc: 'PrimarySpeedCorrectionUsed',\n    // x001910dd: 'OverrangeCorrectionUsed',\n    // x001910de: 'DynamicZAlphaValue',\n    // x001910df: 'UserData',\n    // x001910e0: 'UserData',\n    // x001910e2: 'VelocityEncodeScale',\n    // x001910f2: 'FastPhases',\n    // x001910f9: 'TransmissionGain',\n    x00200000: 'RelationshipGroupLength',\n    x0020000d: 'StudyInstanceUID',\n    x0020000e: 'SeriesInstanceUID',\n    x00200010: 'StudyID',\n    x00200011: 'SeriesNumber',\n    x00200012: 'AcquisitionNumber',\n    x00200013: 'InstanceNumber',\n    x00200014: 'IsotopeNumber',\n    x00200015: 'PhaseNumber',\n    x00200016: 'IntervalNumber',\n    x00200017: 'TimeSlotNumber',\n    x00200018: 'AngleNumber',\n    x00200019: 'ItemNumber',\n    x00200020: 'PatientOrientation',\n    x00200022: 'OverlayNumber',\n    x00200024: 'CurveNumber',\n    x00200026: 'LookupTableNumber',\n    x00200030: 'ImagePosition',\n    x00200032: 'ImagePositionPatient',\n    x00200035: 'ImageOrientation',\n    x00200037: 'ImageOrientationPatient',\n    x00200050: 'Location',\n    x00200052: 'FrameOfReferenceUID',\n    x00200060: 'Laterality',\n    x00200062: 'ImageLaterality',\n    x00200070: 'ImageGeometryType',\n    x00200080: 'MaskingImage',\n    x00200100: 'TemporalPositionIdentifier',\n    x00200105: 'NumberOfTemporalPositions',\n    x00200110: 'TemporalResolution',\n    x00200200: 'SynchronizationFrameOfReferenceUID',\n    x00201000: 'SeriesInStudy',\n    x00201001: 'AcquisitionsInSeries',\n    x00201002: 'ImagesInAcquisition',\n    x00201003: 'ImagesInSeries',\n    x00201004: 'AcquisitionsInStudy',\n    x00201005: 'ImagesInStudy',\n    x00201020: 'Reference',\n    x00201040: 'PositionReferenceIndicator',\n    x00201041: 'SliceLocation',\n    x00201070: 'OtherStudyNumbers',\n    x00201200: 'NumberOfPatientRelatedStudies',\n    x00201202: 'NumberOfPatientRelatedSeries',\n    x00201204: 'NumberOfPatientRelatedInstances',\n    x00201206: 'NumberOfStudyRelatedSeries',\n    x00201208: 'NumberOfStudyRelatedInstances',\n    x00201209: 'NumberOfSeriesRelatedInstances',\n    x002031xx: 'SourceImageIDs',\n    x00203401: 'ModifyingDeviceID',\n    x00203402: 'ModifiedImageID',\n    x00203403: 'ModifiedImageDate',\n    x00203404: 'ModifyingDeviceManufacturer',\n    x00203405: 'ModifiedImageTime',\n    x00203406: 'ModifiedImageDescription',\n    x00204000: 'ImageComments',\n    x00205000: 'OriginalImageIdentification',\n    x00205002: 'OriginalImageIdentNomenclature',\n    x00209056: 'StackID',\n    x00209057: 'InStackPositionNumber',\n    x00209071: 'FrameAnatomySequence',\n    x00209072: 'FrameLaterality',\n    x00209111: 'FrameContentSequence',\n    x00209113: 'PlanePositionSequence',\n    x00209116: 'PlaneOrientationSequence',\n    x00209128: 'TemporalPositionIndex',\n    x00209153: 'TriggerDelayTime',\n    x00209156: 'FrameAcquisitionNumber',\n    x00209157: 'DimensionIndexValues',\n    x00209158: 'FrameComments',\n    x00209161: 'ConcatenationUID',\n    x00209162: 'InConcatenationNumber',\n    x00209163: 'InConcatenationTotalNumber',\n    x00209164: 'DimensionOrganizationUID',\n    x00209165: 'DimensionIndexPointer',\n    x00209167: 'FunctionalGroupPointer',\n    x00209213: 'DimensionIndexPrivateCreator',\n    x00209221: 'DimensionOrganizationSequence',\n    x00209222: 'DimensionIndexSequence',\n    x00209228: 'ConcatenationFrameOffsetNumber',\n    x00209238: 'FunctionalGroupPrivateCreator',\n    x00209241: 'NominalPercentageOfCardiacPhase',\n    x00209245: 'NominalPercentOfRespiratoryPhase',\n    x00209246: 'StartingRespiratoryAmplitude',\n    x00209247: 'StartingRespiratoryPhase',\n    x00209248: 'EndingRespiratoryAmplitude',\n    x00209249: 'EndingRespiratoryPhase',\n    x00209250: 'RespiratoryTriggerType',\n    x00209251: 'RRIntervalTimeNominal',\n    x00209252: 'ActualCardiacTriggerDelayTime',\n    x00209253: 'RespiratorySynchronizationSequence',\n    x00209254: 'RespiratoryIntervalTime',\n    x00209255: 'NominalRespiratoryTriggerDelayTime',\n    x00209256: 'RespiratoryTriggerDelayThreshold',\n    x00209257: 'ActualRespiratoryTriggerDelayTime',\n    x00209301: 'ImagePositionVolume',\n    x00209302: 'ImageOrientationVolume',\n    x00209308: 'ApexPosition',\n    x00209421: 'DimensionDescriptionLabel',\n    x00209450: 'PatientOrientationInFrameSequence',\n    x00209453: 'FrameLabel',\n    x00209518: 'AcquisitionIndex',\n    x00209529: 'ContributingSOPInstancesRefSeq',\n    x00209536: 'ReconstructionIndex',\n    // x00211003: 'SeriesFromWhichPrescribed',\n    // x00211005: 'GenesisVersionNow',\n    // x00211007: 'SeriesRecordChecksum',\n    // x00211018: 'GenesisVersionNow',\n    // x00211019: 'AcqreconRecordChecksum',\n    // x00211020: 'TableStartLocation',\n    // x00211035: 'SeriesFromWhichPrescribed',\n    // x00211036: 'ImageFromWhichPrescribed',\n    // x00211037: 'ScreenFormat',\n    // x0021104a: 'AnatomicalReferenceForScout',\n    // x0021104f: 'LocationsInAcquisition',\n    // x00211050: 'GraphicallyPrescribed',\n    // x00211051: 'RotationFromSourceXRot',\n    // x00211052: 'RotationFromSourceYRot',\n    // x00211053: 'RotationFromSourceZRot',\n    // x00211054: 'ImagePosition',\n    // x00211055: 'ImageOrientation',\n    // x00211056: 'IntegerSlop',\n    // x00211057: 'IntegerSlop',\n    // x00211058: 'IntegerSlop',\n    // x00211059: 'IntegerSlop',\n    // x0021105a: 'IntegerSlop',\n    // x0021105b: 'FloatSlop',\n    // x0021105c: 'FloatSlop',\n    // x0021105d: 'FloatSlop',\n    // x0021105e: 'FloatSlop',\n    // x0021105f: 'FloatSlop',\n    // x00211081: 'AutoWindowLevelAlpha',\n    // x00211082: 'AutoWindowLevelBeta',\n    // x00211083: 'AutoWindowLevelWindow',\n    // x00211084: 'ToWindowLevelLevel',\n    // x00211090: 'TubeFocalSpotPosition',\n    // x00211091: 'BiopsyPosition',\n    // x00211092: 'BiopsyTLocation',\n    // x00211093: 'BiopsyRefLocation',\n    x00220001: 'LightPathFilterPassThroughWavelen',\n    x00220002: 'LightPathFilterPassBand',\n    x00220003: 'ImagePathFilterPassThroughWavelen',\n    x00220004: 'ImagePathFilterPassBand',\n    x00220005: 'PatientEyeMovementCommanded',\n    x00220006: 'PatientEyeMovementCommandCodeSeq',\n    x00220007: 'SphericalLensPower',\n    x00220008: 'CylinderLensPower',\n    x00220009: 'CylinderAxis',\n    x0022000a: 'EmmetropicMagnification',\n    x0022000b: 'IntraOcularPressure',\n    x0022000c: 'HorizontalFieldOfView',\n    x0022000d: 'PupilDilated',\n    x0022000e: 'DegreeOfDilation',\n    x00220010: 'StereoBaselineAngle',\n    x00220011: 'StereoBaselineDisplacement',\n    x00220012: 'StereoHorizontalPixelOffset',\n    x00220013: 'StereoVerticalPixelOffset',\n    x00220014: 'StereoRotation',\n    x00220015: 'AcquisitionDeviceTypeCodeSequence',\n    x00220016: 'IlluminationTypeCodeSequence',\n    x00220017: 'LightPathFilterTypeStackCodeSeq',\n    x00220018: 'ImagePathFilterTypeStackCodeSeq',\n    x00220019: 'LensesCodeSequence',\n    x0022001a: 'ChannelDescriptionCodeSequence',\n    x0022001b: 'RefractiveStateSequence',\n    x0022001c: 'MydriaticAgentCodeSequence',\n    x0022001d: 'RelativeImagePositionCodeSequence',\n    x00220020: 'StereoPairsSequence',\n    x00220021: 'LeftImageSequence',\n    x00220022: 'RightImageSequence',\n    x00220030: 'AxialLengthOfTheEye',\n    x00220031: 'OphthalmicFrameLocationSequence',\n    x00220032: 'ReferenceCoordinates',\n    x00220035: 'DepthSpatialResolution',\n    x00220036: 'MaximumDepthDistortion',\n    x00220037: 'AlongScanSpatialResolution',\n    x00220038: 'MaximumAlongScanDistortion',\n    x00220039: 'OphthalmicImageOrientation',\n    x00220041: 'DepthOfTransverseImage',\n    x00220042: 'MydriaticAgentConcUnitsSeq',\n    x00220048: 'AcrossScanSpatialResolution',\n    x00220049: 'MaximumAcrossScanDistortion',\n    x0022004e: 'MydriaticAgentConcentration',\n    x00220055: 'IlluminationWaveLength',\n    x00220056: 'IlluminationPower',\n    x00220057: 'IlluminationBandwidth',\n    x00220058: 'MydriaticAgentSequence',\n    // x00231001: 'NumberOfSeriesInStudy',\n    // x00231002: 'NumberOfUnarchivedSeries',\n    // x00231010: 'ReferenceImageField',\n    // x00231050: 'SummaryImage',\n    // x00231070: 'StartTimeSecsInFirstAxial',\n    // x00231074: 'NoofUpdatesToHeader',\n    // x0023107d: 'IndicatesIfTheStudyHasCompleteInfo',\n    // x00251006: 'LastPulseSequenceUsed',\n    // x00251007: 'ImagesInSeries',\n    // x00251010: 'LandmarkCounter',\n    // x00251011: 'NumberOfAcquisitions',\n    // x00251014: 'IndicatesNoofUpdatesToHeader',\n    // x00251017: 'SeriesCompleteFlag',\n    // x00251018: 'NumberOfImagesArchived',\n    // x00251019: 'LastImageNumberUsed',\n    // x0025101a: 'PrimaryReceiverSuiteAndHost',\n    // x00271006: 'ImageArchiveFlag',\n    // x00271010: 'ScoutType',\n    // x0027101c: 'VmaMamp',\n    // x0027101d: 'VmaPhase',\n    // x0027101e: 'VmaMod',\n    // x0027101f: 'VmaClip',\n    // x00271020: 'SmartScanOnOffFlag',\n    // x00271030: 'ForeignImageRevision',\n    // x00271031: 'ImagingMode',\n    // x00271032: 'PulseSequence',\n    // x00271033: 'ImagingOptions',\n    // x00271035: 'PlaneType',\n    // x00271036: 'ObliquePlane',\n    // x00271040: 'RASLetterOfImageLocation',\n    // x00271041: 'ImageLocation',\n    // x00271042: 'CenterRCoordOfPlaneImage',\n    // x00271043: 'CenterACoordOfPlaneImage',\n    // x00271044: 'CenterSCoordOfPlaneImage',\n    // x00271045: 'NormalRCoord',\n    // x00271046: 'NormalACoord',\n    // x00271047: 'NormalSCoord',\n    // x00271048: 'RCoordOfTopRightCorner',\n    // x00271049: 'ACoordOfTopRightCorner',\n    // x0027104a: 'SCoordOfTopRightCorner',\n    // x0027104b: 'RCoordOfBottomRightCorner',\n    // x0027104c: 'ACoordOfBottomRightCorner',\n    // x0027104d: 'SCoordOfBottomRightCorner',\n    // x00271050: 'TableStartLocation',\n    // x00271051: 'TableEndLocation',\n    // x00271052: 'RASLetterForSideOfImage',\n    // x00271053: 'RASLetterForAnteriorPosterior',\n    // x00271054: 'RASLetterForScoutStartLoc',\n    // x00271055: 'RASLetterForScoutEndLoc',\n    // x00271060: 'ImageDimensionX',\n    // x00271061: 'ImageDimensionY',\n    // x00271062: 'NumberOfExcitations',\n    x00280000: 'ImagePresentationGroupLength',\n    x00280002: 'SamplesPerPixel',\n    x00280003: 'SamplesPerPixelUsed',\n    x00280004: 'PhotometricInterpretation',\n    x00280005: 'ImageDimensions',\n    x00280006: 'PlanarConfiguration',\n    x00280008: 'NumberOfFrames',\n    x00280009: 'FrameIncrementPointer',\n    x0028000a: 'FrameDimensionPointer',\n    x00280010: 'Rows',\n    x00280011: 'Columns',\n    x00280012: 'Planes',\n    x00280014: 'UltrasoundColorDataPresent',\n    x00280030: 'PixelSpacing',\n    x00280031: 'ZoomFactor',\n    x00280032: 'ZoomCenter',\n    x00280034: 'PixelAspectRatio',\n    x00280040: 'ImageFormat',\n    x00280050: 'ManipulatedImage',\n    x00280051: 'CorrectedImage',\n    x0028005f: 'CompressionRecognitionCode',\n    x00280060: 'CompressionCode',\n    x00280061: 'CompressionOriginator',\n    x00280062: 'CompressionLabel',\n    x00280063: 'CompressionDescription',\n    x00280065: 'CompressionSequence',\n    x00280066: 'CompressionStepPointers',\n    x00280068: 'RepeatInterval',\n    x00280069: 'BitsGrouped',\n    x00280070: 'PerimeterTable',\n    x00280071: 'PerimeterValue',\n    x00280080: 'PredictorRows',\n    x00280081: 'PredictorColumns',\n    x00280082: 'PredictorConstants',\n    x00280090: 'BlockedPixels',\n    x00280091: 'BlockRows',\n    x00280092: 'BlockColumns',\n    x00280093: 'RowOverlap',\n    x00280094: 'ColumnOverlap',\n    x00280100: 'BitsAllocated',\n    x00280101: 'BitsStored',\n    x00280102: 'HighBit',\n    x00280103: 'PixelRepresentation',\n    x00280104: 'SmallestValidPixelValue',\n    x00280105: 'LargestValidPixelValue',\n    x00280106: 'SmallestImagePixelValue',\n    x00280107: 'LargestImagePixelValue',\n    x00280108: 'SmallestPixelValueInSeries',\n    x00280109: 'LargestPixelValueInSeries',\n    x00280110: 'SmallestImagePixelValueInPlane',\n    x00280111: 'LargestImagePixelValueInPlane',\n    x00280120: 'PixelPaddingValue',\n    x00280121: 'PixelPaddingRangeLimit',\n    x00280200: 'ImageLocation',\n    x00280300: 'QualityControlImage',\n    x00280301: 'BurnedInAnnotation',\n    x00280400: 'TransformLabel',\n    x00280401: 'TransformVersionNumber',\n    x00280402: 'NumberOfTransformSteps',\n    x00280403: 'SequenceOfCompressedData',\n    x00280404: 'DetailsOfCoefficients',\n    x002804x2: 'CoefficientCoding',\n    x002804x3: 'CoefficientCodingPointers',\n    x00280700: 'DCTLabel',\n    x00280701: 'DataBlockDescription',\n    x00280702: 'DataBlock',\n    x00280710: 'NormalizationFactorFormat',\n    x00280720: 'ZonalMapNumberFormat',\n    x00280721: 'ZonalMapLocation',\n    x00280722: 'ZonalMapFormat',\n    x00280730: 'AdaptiveMapFormat',\n    x00280740: 'CodeNumberFormat',\n    x002808x0: 'CodeLabel',\n    x002808x2: 'NumberOfTables',\n    x002808x3: 'CodeTableLocation',\n    x002808x4: 'BitsForCodeWord',\n    x002808x8: 'ImageDataLocation',\n    x00280a02: 'PixelSpacingCalibrationType',\n    x00280a04: 'PixelSpacingCalibrationDescription',\n    x00281040: 'PixelIntensityRelationship',\n    x00281041: 'PixelIntensityRelationshipSign',\n    x00281050: 'WindowCenter',\n    x00281051: 'WindowWidth',\n    x00281052: 'RescaleIntercept',\n    x00281053: 'RescaleSlope',\n    x00281054: 'RescaleType',\n    x00281055: 'WindowCenterAndWidthExplanation',\n    x00281056: 'VOI_LUTFunction',\n    x00281080: 'GrayScale',\n    x00281090: 'RecommendedViewingMode',\n    x00281100: 'GrayLookupTableDescriptor',\n    x00281101: 'RedPaletteColorTableDescriptor',\n    x00281102: 'GreenPaletteColorTableDescriptor',\n    x00281103: 'BluePaletteColorTableDescriptor',\n    x00281111: 'LargeRedPaletteColorTableDescr',\n    x00281112: 'LargeGreenPaletteColorTableDescr',\n    x00281113: 'LargeBluePaletteColorTableDescr',\n    x00281199: 'PaletteColorTableUID',\n    x00281200: 'GrayLookupTableData',\n    x00281201: 'RedPaletteColorTableData',\n    x00281202: 'GreenPaletteColorTableData',\n    x00281203: 'BluePaletteColorTableData',\n    x00281211: 'LargeRedPaletteColorTableData',\n    x00281212: 'LargeGreenPaletteColorTableData',\n    x00281213: 'LargeBluePaletteColorTableData',\n    x00281214: 'LargePaletteColorLookupTableUID',\n    x00281221: 'SegmentedRedColorTableData',\n    x00281222: 'SegmentedGreenColorTableData',\n    x00281223: 'SegmentedBlueColorTableData',\n    x00281300: 'BreastImplantPresent',\n    x00281350: 'PartialView',\n    x00281351: 'PartialViewDescription',\n    x00281352: 'PartialViewCodeSequence',\n    x0028135a: 'SpatialLocationsPreserved',\n    x00281402: 'DataPathAssignment',\n    x00281404: 'BlendingLUT1Sequence',\n    x00281406: 'BlendingWeightConstant',\n    x00281408: 'BlendingLookupTableData',\n    x0028140c: 'BlendingLUT2Sequence',\n    x0028140e: 'DataPathID',\n    x0028140f: 'RGBLUTTransferFunction',\n    x00281410: 'AlphaLUTTransferFunction',\n    x00282000: 'ICCProfile',\n    x00282110: 'LossyImageCompression',\n    x00282112: 'LossyImageCompressionRatio',\n    x00282114: 'LossyImageCompressionMethod',\n    x00283000: 'ModalityLUTSequence',\n    x00283002: 'LUTDescriptor',\n    x00283003: 'LUTExplanation',\n    x00283004: 'ModalityLUTType',\n    x00283006: 'LUTData',\n    x00283010: 'VOILUTSequence',\n    x00283110: 'SoftcopyVOILUTSequence',\n    x00284000: 'ImagePresentationComments',\n    x00285000: 'BiPlaneAcquisitionSequence',\n    x00286010: 'RepresentativeFrameNumber',\n    x00286020: 'FrameNumbersOfInterest',\n    x00286022: 'FrameOfInterestDescription',\n    x00286023: 'FrameOfInterestType',\n    x00286030: 'MaskPointers',\n    x00286040: 'RWavePointer',\n    x00286100: 'MaskSubtractionSequence',\n    x00286101: 'MaskOperation',\n    x00286102: 'ApplicableFrameRange',\n    x00286110: 'MaskFrameNumbers',\n    x00286112: 'ContrastFrameAveraging',\n    x00286114: 'MaskSubPixelShift',\n    x00286120: 'TIDOffset',\n    x00286190: 'MaskOperationExplanation',\n    x00287fe0: 'PixelDataProviderURL',\n    x00289001: 'DataPointRows',\n    x00289002: 'DataPointColumns',\n    x00289003: 'SignalDomainColumns',\n    x00289099: 'LargestMonochromePixelValue',\n    x00289108: 'DataRepresentation',\n    x00289110: 'PixelMeasuresSequence',\n    x00289132: 'FrameVOILUTSequence',\n    x00289145: 'PixelValueTransformationSequence',\n    x00289235: 'SignalDomainRows',\n    x00289411: 'DisplayFilterPercentage',\n    x00289415: 'FramePixelShiftSequence',\n    x00289416: 'SubtractionItemID',\n    x00289422: 'PixelIntensityRelationshipLUTSeq',\n    x00289443: 'FramePixelDataPropertiesSequence',\n    x00289444: 'GeometricalProperties',\n    x00289445: 'GeometricMaximumDistortion',\n    x00289446: 'ImageProcessingApplied',\n    x00289454: 'MaskSelectionMode',\n    x00289474: 'LUTFunction',\n    x00289478: 'MaskVisibilityPercentage',\n    x00289501: 'PixelShiftSequence',\n    x00289502: 'RegionPixelShiftSequence',\n    x00289503: 'VerticesOfTheRegion',\n    x00289506: 'PixelShiftFrameRange',\n    x00289507: 'LUTFrameRange',\n    x00289520: 'ImageToEquipmentMappingMatrix',\n    x00289537: 'EquipmentCoordinateSystemID',\n    // x00291004: 'LowerRangeOfPixels1a',\n    // x00291005: 'LowerRangeOfPixels1b',\n    // x00291006: 'LowerRangeOfPixels1c',\n    // x00291007: 'LowerRangeOfPixels1d',\n    // x00291008: 'LowerRangeOfPixels1e',\n    // x00291009: 'LowerRangeOfPixels1f',\n    // x0029100a: 'LowerRangeOfPixels1g',\n    // x00291015: 'LowerRangeOfPixels1h',\n    // x00291016: 'LowerRangeOfPixels1i',\n    // x00291017: 'LowerRangeOfPixels2',\n    // x00291018: 'UpperRangeOfPixels2',\n    // x0029101a: 'LenOfTotHdrInBytes',\n    // x00291026: 'VersionOfTheHdrStruct',\n    // x00291034: 'AdvantageCompOverflow',\n    // x00291035: 'AdvantageCompUnderflow',\n    x00320000: 'StudyGroupLength',\n    x0032000a: 'StudyStatusID',\n    x0032000c: 'StudyPriorityID',\n    x00320012: 'StudyIDIssuer',\n    x00320032: 'StudyVerifiedDate',\n    x00320033: 'StudyVerifiedTime',\n    x00320034: 'StudyReadDate',\n    x00320035: 'StudyReadTime',\n    x00321000: 'ScheduledStudyStartDate',\n    x00321001: 'ScheduledStudyStartTime',\n    x00321010: 'ScheduledStudyStopDate',\n    x00321011: 'ScheduledStudyStopTime',\n    x00321020: 'ScheduledStudyLocation',\n    x00321021: 'ScheduledStudyLocationAETitle',\n    x00321030: 'ReasonForStudy',\n    x00321031: 'RequestingPhysicianIDSequence',\n    x00321032: 'RequestingPhysician',\n    x00321033: 'RequestingService',\n    x00321040: 'StudyArrivalDate',\n    x00321041: 'StudyArrivalTime',\n    x00321050: 'StudyCompletionDate',\n    x00321051: 'StudyCompletionTime',\n    x00321055: 'StudyComponentStatusID',\n    x00321060: 'RequestedProcedureDescription',\n    x00321064: 'RequestedProcedureCodeSequence',\n    x00321070: 'RequestedContrastAgent',\n    x00324000: 'StudyComments',\n    x00380004: 'ReferencedPatientAliasSequence',\n    x00380008: 'VisitStatusID',\n    x00380010: 'AdmissionID',\n    x00380011: 'IssuerOfAdmissionID',\n    x00380016: 'RouteOfAdmissions',\n    x0038001a: 'ScheduledAdmissionDate',\n    x0038001b: 'ScheduledAdmissionTime',\n    x0038001c: 'ScheduledDischargeDate',\n    x0038001d: 'ScheduledDischargeTime',\n    x0038001e: 'ScheduledPatientInstitResidence',\n    x00380020: 'AdmittingDate',\n    x00380021: 'AdmittingTime',\n    x00380030: 'DischargeDate',\n    x00380032: 'DischargeTime',\n    x00380040: 'DischargeDiagnosisDescription',\n    x00380044: 'DischargeDiagnosisCodeSequence',\n    x00380050: 'SpecialNeeds',\n    x00380060: 'ServiceEpisodeID',\n    x00380061: 'IssuerOfServiceEpisodeID',\n    x00380062: 'ServiceEpisodeDescription',\n    x00380100: 'PertinentDocumentsSequence',\n    x00380300: 'CurrentPatientLocation',\n    x00380400: 'PatientInstitutionResidence',\n    x00380500: 'PatientState',\n    x00380502: 'PatientClinicalTrialParticipSeq',\n    x00384000: 'VisitComments',\n    x003a0004: 'WaveformOriginality',\n    x003a0005: 'NumberOfWaveformChannels',\n    x003a0010: 'NumberOfWaveformSamples',\n    x003a001a: 'SamplingFrequency',\n    x003a0020: 'MultiplexGroupLabel',\n    x003a0200: 'ChannelDefinitionSequence',\n    x003a0202: 'WaveformChannelNumber',\n    x003a0203: 'ChannelLabel',\n    x003a0205: 'ChannelStatus',\n    x003a0208: 'ChannelSourceSequence',\n    x003a0209: 'ChannelSourceModifiersSequence',\n    x003a020a: 'SourceWaveformSequence',\n    x003a020c: 'ChannelDerivationDescription',\n    x003a0210: 'ChannelSensitivity',\n    x003a0211: 'ChannelSensitivityUnitsSequence',\n    x003a0212: 'ChannelSensitivityCorrectionFactor',\n    x003a0213: 'ChannelBaseline',\n    x003a0214: 'ChannelTimeSkew',\n    x003a0215: 'ChannelSampleSkew',\n    x003a0218: 'ChannelOffset',\n    x003a021a: 'WaveformBitsStored',\n    x003a0220: 'FilterLowFrequency',\n    x003a0221: 'FilterHighFrequency',\n    x003a0222: 'NotchFilterFrequency',\n    x003a0223: 'NotchFilterBandwidth',\n    x003a0230: 'WaveformDataDisplayScale',\n    x003a0231: 'WaveformDisplayBkgCIELabValue',\n    x003a0240: 'WaveformPresentationGroupSequence',\n    x003a0241: 'PresentationGroupNumber',\n    x003a0242: 'ChannelDisplaySequence',\n    x003a0244: 'ChannelRecommendDisplayCIELabValue',\n    x003a0245: 'ChannelPosition',\n    x003a0246: 'DisplayShadingFlag',\n    x003a0247: 'FractionalChannelDisplayScale',\n    x003a0248: 'AbsoluteChannelDisplayScale',\n    x003a0300: 'MultiplexAudioChannelsDescrCodeSeq',\n    x003a0301: 'ChannelIdentificationCode',\n    x003a0302: 'ChannelMode',\n    x00400001: 'ScheduledStationAETitle',\n    x00400002: 'ScheduledProcedureStepStartDate',\n    x00400003: 'ScheduledProcedureStepStartTime',\n    x00400004: 'ScheduledProcedureStepEndDate',\n    x00400005: 'ScheduledProcedureStepEndTime',\n    x00400006: 'ScheduledPerformingPhysiciansName',\n    x00400007: 'ScheduledProcedureStepDescription',\n    x00400008: 'ScheduledProtocolCodeSequence',\n    x00400009: 'ScheduledProcedureStepID',\n    x0040000a: 'StageCodeSequence',\n    x0040000b: 'ScheduledPerformingPhysicianIDSeq',\n    x00400010: 'ScheduledStationName',\n    x00400011: 'ScheduledProcedureStepLocation',\n    x00400012: 'PreMedication',\n    x00400020: 'ScheduledProcedureStepStatus',\n    x00400031: 'LocalNamespaceEntityID',\n    x00400032: 'UniversalEntityID',\n    x00400033: 'UniversalEntityIDType',\n    x00400035: 'IdentifierTypeCode',\n    x00400036: 'AssigningFacilitySequence',\n    x00400100: 'ScheduledProcedureStepSequence',\n    x00400220: 'ReferencedNonImageCompositeSOPSeq',\n    x00400241: 'PerformedStationAETitle',\n    x00400242: 'PerformedStationName',\n    x00400243: 'PerformedLocation',\n    x00400244: 'PerformedProcedureStepStartDate',\n    x00400245: 'PerformedProcedureStepStartTime',\n    x00400250: 'PerformedProcedureStepEndDate',\n    x00400251: 'PerformedProcedureStepEndTime',\n    x00400252: 'PerformedProcedureStepStatus',\n    x00400253: 'PerformedProcedureStepID',\n    x00400254: 'PerformedProcedureStepDescription',\n    x00400255: 'PerformedProcedureTypeDescription',\n    x00400260: 'PerformedProtocolCodeSequence',\n    x00400261: 'PerformedProtocolType',\n    x00400270: 'ScheduledStepAttributesSequence',\n    x00400275: 'RequestAttributesSequence',\n    x00400280: 'CommentsOnPerformedProcedureStep',\n    x00400281: 'ProcStepDiscontinueReasonCodeSeq',\n    x00400293: 'QuantitySequence',\n    x00400294: 'Quantity',\n    x00400295: 'MeasuringUnitsSequence',\n    x00400296: 'BillingItemSequence',\n    x00400300: 'TotalTimeOfFluoroscopy',\n    x00400301: 'TotalNumberOfExposures',\n    x00400302: 'EntranceDose',\n    x00400303: 'ExposedArea',\n    x00400306: 'DistanceSourceToEntrance',\n    x00400307: 'DistanceSourceToSupport',\n    x0040030e: 'ExposureDoseSequence',\n    x00400310: 'CommentsOnRadiationDose',\n    x00400312: 'XRayOutput',\n    x00400314: 'HalfValueLayer',\n    x00400316: 'OrganDose',\n    x00400318: 'OrganExposed',\n    x00400320: 'BillingProcedureStepSequence',\n    x00400321: 'FilmConsumptionSequence',\n    x00400324: 'BillingSuppliesAndDevicesSequence',\n    x00400330: 'ReferencedProcedureStepSequence',\n    x00400340: 'PerformedSeriesSequence',\n    x00400400: 'CommentsOnScheduledProcedureStep',\n    x00400440: 'ProtocolContextSequence',\n    x00400441: 'ContentItemModifierSequence',\n    x0040050a: 'SpecimenAccessionNumber',\n    x00400512: 'ContainerIdentifier',\n    x0040051a: 'ContainerDescription',\n    x00400550: 'SpecimenSequence',\n    x00400551: 'SpecimenIdentifier',\n    x00400552: 'SpecimenDescriptionSequenceTrial',\n    x00400553: 'SpecimenDescriptionTrial',\n    x00400554: 'SpecimenUID',\n    x00400555: 'AcquisitionContextSequence',\n    x00400556: 'AcquisitionContextDescription',\n    x0040059a: 'SpecimenTypeCodeSequence',\n    x00400600: 'SpecimenShortDescription',\n    x004006fa: 'SlideIdentifier',\n    x0040071a: 'ImageCenterPointCoordinatesSeq',\n    x0040072a: 'XOffsetInSlideCoordinateSystem',\n    x0040073a: 'YOffsetInSlideCoordinateSystem',\n    x0040074a: 'ZOffsetInSlideCoordinateSystem',\n    x004008d8: 'PixelSpacingSequence',\n    x004008da: 'CoordinateSystemAxisCodeSequence',\n    x004008ea: 'MeasurementUnitsCodeSequence',\n    x004009f8: 'VitalStainCodeSequenceTrial',\n    x00401001: 'RequestedProcedureID',\n    x00401002: 'ReasonForRequestedProcedure',\n    x00401003: 'RequestedProcedurePriority',\n    x00401004: 'PatientTransportArrangements',\n    x00401005: 'RequestedProcedureLocation',\n    x00401006: 'PlacerOrderNumber-Procedure',\n    x00401007: 'FillerOrderNumber-Procedure',\n    x00401008: 'ConfidentialityCode',\n    x00401009: 'ReportingPriority',\n    x0040100a: 'ReasonForRequestedProcedureCodeSeq',\n    x00401010: 'NamesOfIntendedRecipientsOfResults',\n    x00401011: 'IntendedRecipientsOfResultsIDSeq',\n    x00401101: 'PersonIdentificationCodeSequence',\n    x00401102: 'PersonAddress',\n    x00401103: 'PersonTelephoneNumbers',\n    x00401400: 'RequestedProcedureComments',\n    x00402001: 'ReasonForImagingServiceRequest',\n    x00402004: 'IssueDateOfImagingServiceRequest',\n    x00402005: 'IssueTimeOfImagingServiceRequest',\n    x00402006: 'PlacerOrderNumberImagingServiceRequestRetired',\n    x00402007: 'FillerOrderNumberImagingServiceRequestRetired',\n    x00402008: 'OrderEnteredBy',\n    x00402009: 'OrderEntererLocation',\n    x00402010: 'OrderCallbackPhoneNumber',\n    x00402016: 'PlacerOrderNum-ImagingServiceReq',\n    x00402017: 'FillerOrderNum-ImagingServiceReq',\n    x00402400: 'ImagingServiceRequestComments',\n    x00403001: 'ConfidentialityOnPatientDataDescr',\n    x00404001: 'GenPurposeScheduledProcStepStatus',\n    x00404002: 'GenPurposePerformedProcStepStatus',\n    x00404003: 'GenPurposeSchedProcStepPriority',\n    x00404004: 'SchedProcessingApplicationsCodeSeq',\n    x00404005: 'SchedProcedureStepStartDateAndTime',\n    x00404006: 'MultipleCopiesFlag',\n    x00404007: 'PerformedProcessingAppsCodeSeq',\n    x00404009: 'HumanPerformerCodeSequence',\n    x00404010: 'SchedProcStepModificationDateTime',\n    x00404011: 'ExpectedCompletionDateAndTime',\n    x00404015: 'ResultingGenPurposePerfProcStepSeq',\n    x00404016: 'RefGenPurposeSchedProcStepSeq',\n    x00404018: 'ScheduledWorkitemCodeSequence',\n    x00404019: 'PerformedWorkitemCodeSequence',\n    x00404020: 'InputAvailabilityFlag',\n    x00404021: 'InputInformationSequence',\n    x00404022: 'RelevantInformationSequence',\n    x00404023: 'RefGenPurSchedProcStepTransUID',\n    x00404025: 'ScheduledStationNameCodeSequence',\n    x00404026: 'ScheduledStationClassCodeSequence',\n    x00404027: 'SchedStationGeographicLocCodeSeq',\n    x00404028: 'PerformedStationNameCodeSequence',\n    x00404029: 'PerformedStationClassCodeSequence',\n    x00404030: 'PerformedStationGeogLocCodeSeq',\n    x00404031: 'RequestedSubsequentWorkItemCodeSeq',\n    x00404032: 'NonDICOMOutputCodeSequence',\n    x00404033: 'OutputInformationSequence',\n    x00404034: 'ScheduledHumanPerformersSequence',\n    x00404035: 'ActualHumanPerformersSequence',\n    x00404036: 'HumanPerformersOrganization',\n    x00404037: 'HumanPerformerName',\n    x00404040: 'RawDataHandling',\n    x00408302: 'EntranceDoseInMilliGy',\n    x00409094: 'RefImageRealWorldValueMappingSeq',\n    x00409096: 'RealWorldValueMappingSequence',\n    x00409098: 'PixelValueMappingCodeSequence',\n    x00409210: 'LUTLabel',\n    x00409211: 'RealWorldValueLastValueMapped',\n    x00409212: 'RealWorldValueLUTData',\n    x00409216: 'RealWorldValueFirstValueMapped',\n    x00409224: 'RealWorldValueIntercept',\n    x00409225: 'RealWorldValueSlope',\n    x0040a010: 'RelationshipType',\n    x0040a027: 'VerifyingOrganization',\n    x0040a030: 'VerificationDateTime',\n    x0040a032: 'ObservationDateTime',\n    x0040a040: 'ValueType',\n    x0040a043: 'ConceptNameCodeSequence',\n    x0040a050: 'ContinuityOfContent',\n    x0040a073: 'VerifyingObserverSequence',\n    x0040a075: 'VerifyingObserverName',\n    x0040a078: 'AuthorObserverSequence',\n    x0040a07a: 'ParticipantSequence',\n    x0040a07c: 'CustodialOrganizationSequence',\n    x0040a080: 'ParticipationType',\n    x0040a082: 'ParticipationDateTime',\n    x0040a084: 'ObserverType',\n    x0040a088: 'VerifyingObserverIdentCodeSequence',\n    x0040a090: 'EquivalentCDADocumentSequence',\n    x0040a0b0: 'ReferencedWaveformChannels',\n    x0040a120: 'DateTime',\n    x0040a121: 'Date',\n    x0040a122: 'Time',\n    x0040a123: 'PersonName',\n    x0040a124: 'UID',\n    x0040a130: 'TemporalRangeType',\n    x0040a132: 'ReferencedSamplePositions',\n    x0040a136: 'ReferencedFrameNumbers',\n    x0040a138: 'ReferencedTimeOffsets',\n    x0040a13a: 'ReferencedDateTime',\n    x0040a160: 'TextValue',\n    x0040a168: 'ConceptCodeSequence',\n    x0040a170: 'PurposeOfReferenceCodeSequence',\n    x0040a180: 'AnnotationGroupNumber',\n    x0040a195: 'ModifierCodeSequence',\n    x0040a300: 'MeasuredValueSequence',\n    x0040a301: 'NumericValueQualifierCodeSequence',\n    x0040a30a: 'NumericValue',\n    x0040a353: 'AddressTrial',\n    x0040a354: 'TelephoneNumberTrial',\n    x0040a360: 'PredecessorDocumentsSequence',\n    x0040a370: 'ReferencedRequestSequence',\n    x0040a372: 'PerformedProcedureCodeSequence',\n    x0040a375: 'CurrentRequestedProcEvidenceSeq',\n    x0040a385: 'PertinentOtherEvidenceSequence',\n    x0040a390: 'HL7StructuredDocumentRefSeq',\n    x0040a491: 'CompletionFlag',\n    x0040a492: 'CompletionFlagDescription',\n    x0040a493: 'VerificationFlag',\n    x0040a494: 'ArchiveRequested',\n    x0040a496: 'PreliminaryFlag',\n    x0040a504: 'ContentTemplateSequence',\n    x0040a525: 'IdenticalDocumentsSequence',\n    x0040a730: 'ContentSequence',\n    x0040b020: 'AnnotationSequence',\n    x0040db00: 'TemplateIdentifier',\n    x0040db06: 'TemplateVersion',\n    x0040db07: 'TemplateLocalVersion',\n    x0040db0b: 'TemplateExtensionFlag',\n    x0040db0c: 'TemplateExtensionOrganizationUID',\n    x0040db0d: 'TemplateExtensionCreatorUID',\n    x0040db73: 'ReferencedContentItemIdentifier',\n    x0040e001: 'HL7InstanceIdentifier',\n    x0040e004: 'HL7DocumentEffectiveTime',\n    x0040e006: 'HL7DocumentTypeCodeSequence',\n    x0040e010: 'RetrieveURI',\n    x0040e011: 'RetrieveLocationUID',\n    x00420010: 'DocumentTitle',\n    x00420011: 'EncapsulatedDocument',\n    x00420012: 'MIMETypeOfEncapsulatedDocument',\n    x00420013: 'SourceInstanceSequence',\n    x00420014: 'ListOfMIMETypes',\n    // x00431001: 'BitmapOfPrescanOptions',\n    // x00431002: 'GradientOffsetInX',\n    // x00431003: 'GradientOffsetInY',\n    // x00431004: 'GradientOffsetInZ',\n    // x00431005: 'ImgIsOriginalOrUnoriginal',\n    // x00431006: 'NumberOfEPIShots',\n    // x00431007: 'ViewsPerSegment',\n    // x00431008: 'RespiratoryRateBpm',\n    // x00431009: 'RespiratoryTriggerPoint',\n    // x0043100a: 'TypeOfReceiverUsed',\n    // x0043100b: 'PeakRateOfChangeOfGradientField',\n    // x0043100c: 'LimitsInUnitsOfPercent',\n    // x0043100d: 'PSDEstimatedLimit',\n    // x0043100e: 'PSDEstimatedLimitInTeslaPerSecond',\n    // x0043100f: 'Saravghead',\n    // x00431010: 'WindowValue',\n    // x00431011: 'TotalInputViews',\n    // x00431012: 'X-RayChain',\n    // x00431013: 'DeconKernelParameters',\n    // x00431014: 'CalibrationParameters',\n    // x00431015: 'TotalOutputViews',\n    // x00431016: 'NumberOfOverranges',\n    // x00431017: 'IBHImageScaleFactors',\n    // x00431018: 'BBHCoefficients',\n    // x00431019: 'NumberOfBBHChainsToBlend',\n    // x0043101a: 'StartingChannelNumber',\n    // x0043101b: 'PpscanParameters',\n    // x0043101c: 'GEImageIntegrity',\n    // x0043101d: 'LevelValue',\n    // x0043101e: 'DeltaStartTime',\n    // x0043101f: 'MaxOverrangesInAView',\n    // x00431020: 'AvgOverrangesAllViews',\n    // x00431021: 'CorrectedAfterGlowTerms',\n    // x00431025: 'ReferenceChannels',\n    // x00431026: 'NoViewsRefChansBlocked',\n    // x00431027: 'ScanPitchRatio',\n    // x00431028: 'UniqueImageIden',\n    // x00431029: 'HistogramTables',\n    // x0043102a: 'UserDefinedData',\n    // x0043102b: 'PrivateScanOptions',\n    // x0043102c: 'EffectiveEchoSpacing',\n    // x0043102d: 'StringSlopField1',\n    // x0043102e: 'StringSlopField2',\n    // x0043102f: 'RawDataType',\n    // x00431030: 'RawDataType',\n    // x00431031: 'RACordOfTargetReconCenter',\n    // x00431032: 'RawDataType',\n    // x00431033: 'NegScanspacing',\n    // x00431034: 'OffsetFrequency',\n    // x00431035: 'UserUsageTag',\n    // x00431036: 'UserFillMapMSW',\n    // x00431037: 'UserFillMapLSW',\n    // x00431038: 'User25-48',\n    // x00431039: 'SlopInt6-9',\n    // x00431040: 'TriggerOnPosition',\n    // x00431041: 'DegreeOfRotation',\n    // x00431042: 'DASTriggerSource',\n    // x00431043: 'DASFpaGain',\n    // x00431044: 'DASOutputSource',\n    // x00431045: 'DASAdInput',\n    // x00431046: 'DASCalMode',\n    // x00431047: 'DASCalFrequency',\n    // x00431048: 'DASRegXm',\n    // x00431049: 'DASAutoZero',\n    // x0043104a: 'StartingChannelOfView',\n    // x0043104b: 'DASXmPattern',\n    // x0043104c: 'TGGCTriggerMode',\n    // x0043104d: 'StartScanToXrayOnDelay',\n    // x0043104e: 'DurationOfXrayOn',\n    // x00431060: 'SlopInt10-17',\n    // x00431061: 'ScannerStudyEntityUID',\n    // x00431062: 'ScannerStudyID',\n    // x0043106f: 'ScannerTableEntry',\n    x00440001: 'ProductPackageIdentifier',\n    x00440002: 'SubstanceAdministrationApproval',\n    x00440003: 'ApprovalStatusFurtherDescription',\n    x00440004: 'ApprovalStatusDateTime',\n    x00440007: 'ProductTypeCodeSequence',\n    x00440008: 'ProductName',\n    x00440009: 'ProductDescription',\n    x0044000a: 'ProductLotIdentifier',\n    x0044000b: 'ProductExpirationDateTime',\n    x00440010: 'SubstanceAdministrationDateTime',\n    x00440011: 'SubstanceAdministrationNotes',\n    x00440012: 'SubstanceAdministrationDeviceID',\n    x00440013: 'ProductParameterSequence',\n    x00440019: 'SubstanceAdminParameterSeq',\n    // x00451001: 'NumberOfMacroRowsInDetector',\n    // x00451002: 'MacroWidthAtISOCenter',\n    // x00451003: 'DASType',\n    // x00451004: 'DASGain',\n    // x00451005: 'DASTemperature',\n    // x00451006: 'TableDirectionInOrOut',\n    // x00451007: 'ZSmoothingFactor',\n    // x00451008: 'ViewWeightingMode',\n    // x00451009: 'SigmaRowNumberWhichRowsWereUsed',\n    // x0045100a: 'MinimumDasValueFoundInTheScanData',\n    // x0045100b: 'MaximumOffsetShiftValueUsed',\n    // x0045100c: 'NumberOfViewsShifted',\n    // x0045100d: 'ZTrackingFlag',\n    // x0045100e: 'MeanZError',\n    // x0045100f: 'ZTrackingMaximumError',\n    // x00451010: 'StartingViewForRow2a',\n    // x00451011: 'NumberOfViewsInRow2a',\n    // x00451012: 'StartingViewForRow1a',\n    // x00451013: 'SigmaMode',\n    // x00451014: 'NumberOfViewsInRow1a',\n    // x00451015: 'StartingViewForRow2b',\n    // x00451016: 'NumberOfViewsInRow2b',\n    // x00451017: 'StartingViewForRow1b',\n    // x00451018: 'NumberOfViewsInRow1b',\n    // x00451019: 'AirFilterCalibrationDate',\n    // x0045101a: 'AirFilterCalibrationTime',\n    // x0045101b: 'PhantomCalibrationDate',\n    // x0045101c: 'PhantomCalibrationTime',\n    // x0045101d: 'ZSlopeCalibrationDate',\n    // x0045101e: 'ZSlopeCalibrationTime',\n    // x0045101f: 'CrosstalkCalibrationDate',\n    // x00451020: 'CrosstalkCalibrationTime',\n    // x00451021: 'IterboneOptionFlag',\n    // x00451022: 'PeristalticFlagOption',\n    x00460012: 'LensDescription',\n    x00460014: 'RightLensSequence',\n    x00460015: 'LeftLensSequence',\n    x00460018: 'CylinderSequence',\n    x00460028: 'PrismSequence',\n    x00460030: 'HorizontalPrismPower',\n    x00460032: 'HorizontalPrismBase',\n    x00460034: 'VerticalPrismPower',\n    x00460036: 'VerticalPrismBase',\n    x00460038: 'LensSegmentType',\n    x00460040: 'OpticalTransmittance',\n    x00460042: 'ChannelWidth',\n    x00460044: 'PupilSize',\n    x00460046: 'CornealSize',\n    x00460060: 'DistancePupillaryDistance',\n    x00460062: 'NearPupillaryDistance',\n    x00460064: 'OtherPupillaryDistance',\n    x00460075: 'RadiusOfCurvature',\n    x00460076: 'KeratometricPower',\n    x00460077: 'KeratometricAxis',\n    x00460092: 'BackgroundColor',\n    x00460094: 'Optotype',\n    x00460095: 'OptotypePresentation',\n    x00460100: 'AddNearSequence',\n    x00460101: 'AddIntermediateSequence',\n    x00460102: 'AddOtherSequence',\n    x00460104: 'AddPower',\n    x00460106: 'ViewingDistance',\n    x00460125: 'ViewingDistanceType',\n    x00460135: 'VisualAcuityModifiers',\n    x00460137: 'DecimalVisualAcuity',\n    x00460139: 'OptotypeDetailedDefinition',\n    x00460146: 'SpherePower',\n    x00460147: 'CylinderPower',\n    x00500004: 'CalibrationImage',\n    x00500010: 'DeviceSequence',\n    x00500014: 'DeviceLength',\n    x00500015: 'ContainerComponentWidth',\n    x00500016: 'DeviceDiameter',\n    x00500017: 'DeviceDiameterUnits',\n    x00500018: 'DeviceVolume',\n    x00500019: 'InterMarkerDistance',\n    x0050001b: 'ContainerComponentID',\n    x00500020: 'DeviceDescription',\n    x00540010: 'EnergyWindowVector',\n    x00540011: 'NumberOfEnergyWindows',\n    x00540012: 'EnergyWindowInformationSequence',\n    x00540013: 'EnergyWindowRangeSequence',\n    x00540014: 'EnergyWindowLowerLimit',\n    x00540015: 'EnergyWindowUpperLimit',\n    x00540016: 'RadiopharmaceuticalInformationSeq',\n    x00540017: 'ResidualSyringeCounts',\n    x00540018: 'EnergyWindowName',\n    x00540020: 'DetectorVector',\n    x00540021: 'NumberOfDetectors',\n    x00540022: 'DetectorInformationSequence',\n    x00540030: 'PhaseVector',\n    x00540031: 'NumberOfPhases',\n    x00540032: 'PhaseInformationSequence',\n    x00540033: 'NumberOfFramesInPhase',\n    x00540036: 'PhaseDelay',\n    x00540038: 'PauseBetweenFrames',\n    x00540039: 'PhaseDescription',\n    x00540050: 'RotationVector',\n    x00540051: 'NumberOfRotations',\n    x00540052: 'RotationInformationSequence',\n    x00540053: 'NumberOfFramesInRotation',\n    x00540060: 'RRIntervalVector',\n    x00540061: 'NumberOfRRIntervals',\n    x00540062: 'GatedInformationSequence',\n    x00540063: 'DataInformationSequence',\n    x00540070: 'TimeSlotVector',\n    x00540071: 'NumberOfTimeSlots',\n    x00540072: 'TimeSlotInformationSequence',\n    x00540073: 'TimeSlotTime',\n    x00540080: 'SliceVector',\n    x00540081: 'NumberOfSlices',\n    x00540090: 'AngularViewVector',\n    x00540100: 'TimeSliceVector',\n    x00540101: 'NumberOfTimeSlices',\n    x00540200: 'StartAngle',\n    x00540202: 'TypeOfDetectorMotion',\n    x00540210: 'TriggerVector',\n    x00540211: 'NumberOfTriggersInPhase',\n    x00540220: 'ViewCodeSequence',\n    x00540222: 'ViewModifierCodeSequence',\n    x00540300: 'RadionuclideCodeSequence',\n    x00540302: 'AdministrationRouteCodeSequence',\n    x00540304: 'RadiopharmaceuticalCodeSequence',\n    x00540306: 'CalibrationDataSequence',\n    x00540308: 'EnergyWindowNumber',\n    x00540400: 'ImageID',\n    x00540410: 'PatientOrientationCodeSequence',\n    x00540412: 'PatientOrientationModifierCodeSeq',\n    x00540414: 'PatientGantryRelationshipCodeSeq',\n    x00540500: 'SliceProgressionDirection',\n    x00541000: 'SeriesType',\n    x00541001: 'Units',\n    x00541002: 'CountsSource',\n    x00541004: 'ReprojectionMethod',\n    x00541100: 'RandomsCorrectionMethod',\n    x00541101: 'AttenuationCorrectionMethod',\n    x00541102: 'DecayCorrection',\n    x00541103: 'ReconstructionMethod',\n    x00541104: 'DetectorLinesOfResponseUsed',\n    x00541105: 'ScatterCorrectionMethod',\n    x00541200: 'AxialAcceptance',\n    x00541201: 'AxialMash',\n    x00541202: 'TransverseMash',\n    x00541203: 'DetectorElementSize',\n    x00541210: 'CoincidenceWindowWidth',\n    x00541220: 'SecondaryCountsType',\n    x00541300: 'FrameReferenceTime',\n    x00541310: 'PrimaryCountsAccumulated',\n    x00541311: 'SecondaryCountsAccumulated',\n    x00541320: 'SliceSensitivityFactor',\n    x00541321: 'DecayFactor',\n    x00541322: 'DoseCalibrationFactor',\n    x00541323: 'ScatterFractionFactor',\n    x00541324: 'DeadTimeFactor',\n    x00541330: 'ImageIndex',\n    x00541400: 'CountsIncluded',\n    x00541401: 'DeadTimeCorrectionFlag',\n    x00603000: 'HistogramSequence',\n    x00603002: 'HistogramNumberOfBins',\n    x00603004: 'HistogramFirstBinValue',\n    x00603006: 'HistogramLastBinValue',\n    x00603008: 'HistogramBinWidth',\n    x00603010: 'HistogramExplanation',\n    x00603020: 'HistogramData',\n    x00620001: 'SegmentationType',\n    x00620002: 'SegmentSequence',\n    x00620003: 'SegmentedPropertyCategoryCodeSeq',\n    x00620004: 'SegmentNumber',\n    x00620005: 'SegmentLabel',\n    x00620006: 'SegmentDescription',\n    x00620008: 'SegmentAlgorithmType',\n    x00620009: 'SegmentAlgorithmName',\n    x0062000a: 'SegmentIdentificationSequence',\n    x0062000b: 'ReferencedSegmentNumber',\n    x0062000c: 'RecommendedDisplayGrayscaleValue',\n    x0062000d: 'RecommendedDisplayCIELabValue',\n    x0062000e: 'MaximumFractionalValue',\n    x0062000f: 'SegmentedPropertyTypeCodeSequence',\n    x00620010: 'SegmentationFractionalType',\n    x00640002: 'DeformableRegistrationSequence',\n    x00640003: 'SourceFrameOfReferenceUID',\n    x00640005: 'DeformableRegistrationGridSequence',\n    x00640007: 'GridDimensions',\n    x00640008: 'GridResolution',\n    x00640009: 'VectorGridData',\n    x0064000f: 'PreDeformationMatrixRegistSeq',\n    x00640010: 'PostDeformationMatrixRegistSeq',\n    x00660001: 'NumberOfSurfaces',\n    x00660002: 'SurfaceSequence',\n    x00660003: 'SurfaceNumber',\n    x00660004: 'SurfaceComments',\n    x00660009: 'SurfaceProcessing',\n    x0066000a: 'SurfaceProcessingRatio',\n    x0066000e: 'FiniteVolume',\n    x00660010: 'Manifold',\n    x00660011: 'SurfacePointsSequence',\n    x00660015: 'NumberOfSurfacePoints',\n    x00660016: 'PointCoordinatesData',\n    x00660017: 'PointPositionAccuracy',\n    x00660018: 'MeanPointDistance',\n    x00660019: 'MaximumPointDistance',\n    x0066001b: 'AxisOfRotation',\n    x0066001c: 'CenterOfRotation',\n    x0066001e: 'NumberOfVectors',\n    x0066001f: 'VectorDimensionality',\n    x00660020: 'VectorAccuracy',\n    x00660021: 'VectorCoordinateData',\n    x00660023: 'TrianglePointIndexList',\n    x00660024: 'EdgePointIndexList',\n    x00660025: 'VertexPointIndexList',\n    x00660026: 'TriangleStripSequence',\n    x00660027: 'TriangleFanSequence',\n    x00660028: 'LineSequence',\n    x00660029: 'PrimitivePointIndexList',\n    x0066002a: 'SurfaceCount',\n    x0066002f: 'AlgorithmFamilyCodeSequ',\n    x00660031: 'AlgorithmVersion',\n    x00660032: 'AlgorithmParameters',\n    x00660034: 'FacetSequence',\n    x00660036: 'AlgorithmName',\n    x00700001: 'GraphicAnnotationSequence',\n    x00700002: 'GraphicLayer',\n    x00700003: 'BoundingBoxAnnotationUnits',\n    x00700004: 'AnchorPointAnnotationUnits',\n    x00700005: 'GraphicAnnotationUnits',\n    x00700006: 'UnformattedTextValue',\n    x00700008: 'TextObjectSequence',\n    x00700009: 'GraphicObjectSequence',\n    x00700010: 'BoundingBoxTopLeftHandCorner',\n    x00700011: 'BoundingBoxBottomRightHandCorner',\n    x00700012: 'BoundingBoxTextHorizJustification',\n    x00700014: 'AnchorPoint',\n    x00700015: 'AnchorPointVisibility',\n    x00700020: 'GraphicDimensions',\n    x00700021: 'NumberOfGraphicPoints',\n    x00700022: 'GraphicData',\n    x00700023: 'GraphicType',\n    x00700024: 'GraphicFilled',\n    x00700040: 'ImageRotationRetired',\n    x00700041: 'ImageHorizontalFlip',\n    x00700042: 'ImageRotation',\n    x00700050: 'DisplayedAreaTopLeftTrial',\n    x00700051: 'DisplayedAreaBottomRightTrial',\n    x00700052: 'DisplayedAreaTopLeft',\n    x00700053: 'DisplayedAreaBottomRight',\n    x0070005a: 'DisplayedAreaSelectionSequence',\n    x00700060: 'GraphicLayerSequence',\n    x00700062: 'GraphicLayerOrder',\n    x00700066: 'GraphicLayerRecDisplayGraysclValue',\n    x00700067: 'GraphicLayerRecDisplayRGBValue',\n    x00700068: 'GraphicLayerDescription',\n    x00700080: 'ContentLabel',\n    x00700081: 'ContentDescription',\n    x00700082: 'PresentationCreationDate',\n    x00700083: 'PresentationCreationTime',\n    x00700084: 'ContentCreatorName',\n    x00700086: 'ContentCreatorIDCodeSequence',\n    x00700100: 'PresentationSizeMode',\n    x00700101: 'PresentationPixelSpacing',\n    x00700102: 'PresentationPixelAspectRatio',\n    x00700103: 'PresentationPixelMagRatio',\n    x00700306: 'ShapeType',\n    x00700308: 'RegistrationSequence',\n    x00700309: 'MatrixRegistrationSequence',\n    x0070030a: 'MatrixSequence',\n    x0070030c: 'FrameOfRefTransformationMatrixType',\n    x0070030d: 'RegistrationTypeCodeSequence',\n    x0070030f: 'FiducialDescription',\n    x00700310: 'FiducialIdentifier',\n    x00700311: 'FiducialIdentifierCodeSequence',\n    x00700312: 'ContourUncertaintyRadius',\n    x00700314: 'UsedFiducialsSequence',\n    x00700318: 'GraphicCoordinatesDataSequence',\n    x0070031a: 'FiducialUID',\n    x0070031c: 'FiducialSetSequence',\n    x0070031e: 'FiducialSequence',\n    x00700401: 'GraphicLayerRecomDisplayCIELabVal',\n    x00700402: 'BlendingSequence',\n    x00700403: 'RelativeOpacity',\n    x00700404: 'ReferencedSpatialRegistrationSeq',\n    x00700405: 'BlendingPosition',\n    x00720002: 'HangingProtocolName',\n    x00720004: 'HangingProtocolDescription',\n    x00720006: 'HangingProtocolLevel',\n    x00720008: 'HangingProtocolCreator',\n    x0072000a: 'HangingProtocolCreationDateTime',\n    x0072000c: 'HangingProtocolDefinitionSequence',\n    x0072000e: 'HangingProtocolUserIDCodeSequence',\n    x00720010: 'HangingProtocolUserGroupName',\n    x00720012: 'SourceHangingProtocolSequence',\n    x00720014: 'NumberOfPriorsReferenced',\n    x00720020: 'ImageSetsSequence',\n    x00720022: 'ImageSetSelectorSequence',\n    x00720024: 'ImageSetSelectorUsageFlag',\n    x00720026: 'SelectorAttribute',\n    x00720028: 'SelectorValueNumber',\n    x00720030: 'TimeBasedImageSetsSequence',\n    x00720032: 'ImageSetNumber',\n    x00720034: 'ImageSetSelectorCategory',\n    x00720038: 'RelativeTime',\n    x0072003a: 'RelativeTimeUnits',\n    x0072003c: 'AbstractPriorValue',\n    x0072003e: 'AbstractPriorCodeSequence',\n    x00720040: 'ImageSetLabel',\n    x00720050: 'SelectorAttributeVR',\n    x00720052: 'SelectorSequencePointer',\n    x00720054: 'SelectorSeqPointerPrivateCreator',\n    x00720056: 'SelectorAttributePrivateCreator',\n    x00720060: 'SelectorATValue',\n    x00720062: 'SelectorCSValue',\n    x00720064: 'SelectorISValue',\n    x00720066: 'SelectorLOValue',\n    x00720068: 'SelectorLTValue',\n    x0072006a: 'SelectorPNValue',\n    x0072006c: 'SelectorSHValue',\n    x0072006e: 'SelectorSTValue',\n    x00720070: 'SelectorUTValue',\n    x00720072: 'SelectorDSValue',\n    x00720074: 'SelectorFDValue',\n    x00720076: 'SelectorFLValue',\n    x00720078: 'SelectorULValue',\n    x0072007a: 'SelectorUSValue',\n    x0072007c: 'SelectorSLValue',\n    x0072007e: 'SelectorSSValue',\n    x00720080: 'SelectorCodeSequenceValue',\n    x00720100: 'NumberOfScreens',\n    x00720102: 'NominalScreenDefinitionSequence',\n    x00720104: 'NumberOfVerticalPixels',\n    x00720106: 'NumberOfHorizontalPixels',\n    x00720108: 'DisplayEnvironmentSpatialPosition',\n    x0072010a: 'ScreenMinimumGrayscaleBitDepth',\n    x0072010c: 'ScreenMinimumColorBitDepth',\n    x0072010e: 'ApplicationMaximumRepaintTime',\n    x00720200: 'DisplaySetsSequence',\n    x00720202: 'DisplaySetNumber',\n    x00720203: 'DisplaySetLabel',\n    x00720204: 'DisplaySetPresentationGroup',\n    x00720206: 'DisplaySetPresentationGroupDescr',\n    x00720208: 'PartialDataDisplayHandling',\n    x00720210: 'SynchronizedScrollingSequence',\n    x00720212: 'DisplaySetScrollingGroup',\n    x00720214: 'NavigationIndicatorSequence',\n    x00720216: 'NavigationDisplaySet',\n    x00720218: 'ReferenceDisplaySets',\n    x00720300: 'ImageBoxesSequence',\n    x00720302: 'ImageBoxNumber',\n    x00720304: 'ImageBoxLayoutType',\n    x00720306: 'ImageBoxTileHorizontalDimension',\n    x00720308: 'ImageBoxTileVerticalDimension',\n    x00720310: 'ImageBoxScrollDirection',\n    x00720312: 'ImageBoxSmallScrollType',\n    x00720314: 'ImageBoxSmallScrollAmount',\n    x00720316: 'ImageBoxLargeScrollType',\n    x00720318: 'ImageBoxLargeScrollAmount',\n    x00720320: 'ImageBoxOverlapPriority',\n    x00720330: 'CineRelativeToRealTime',\n    x00720400: 'FilterOperationsSequence',\n    x00720402: 'FilterByCategory',\n    x00720404: 'FilterByAttributePresence',\n    x00720406: 'FilterByOperator',\n    x00720432: 'SynchronizedImageBoxList',\n    x00720434: 'TypeOfSynchronization',\n    x00720500: 'BlendingOperationType',\n    x00720510: 'ReformattingOperationType',\n    x00720512: 'ReformattingThickness',\n    x00720514: 'ReformattingInterval',\n    x00720516: 'ReformattingOpInitialViewDir',\n    x00720520: 'RenderingType3D',\n    x00720600: 'SortingOperationsSequence',\n    x00720602: 'SortByCategory',\n    x00720604: 'SortingDirection',\n    x00720700: 'DisplaySetPatientOrientation',\n    x00720702: 'VOIType',\n    x00720704: 'PseudoColorType',\n    x00720706: 'ShowGrayscaleInverted',\n    x00720710: 'ShowImageTrueSizeFlag',\n    x00720712: 'ShowGraphicAnnotationFlag',\n    x00720714: 'ShowPatientDemographicsFlag',\n    x00720716: 'ShowAcquisitionTechniquesFlag',\n    x00720717: 'DisplaySetHorizontalJustification',\n    x00720718: 'DisplaySetVerticalJustification',\n    x00741000: 'UnifiedProcedureStepState',\n    x00741002: 'UPSProgressInformationSequence',\n    x00741004: 'UnifiedProcedureStepProgress',\n    x00741006: 'UnifiedProcedureStepProgressDescr',\n    x00741008: 'UnifiedProcedureStepComURISeq',\n    x0074100a: 'ContactURI',\n    x0074100c: 'ContactDisplayName',\n    x00741020: 'BeamTaskSequence',\n    x00741022: 'BeamTaskType',\n    x00741024: 'BeamOrderIndex',\n    x00741030: 'DeliveryVerificationImageSequence',\n    x00741032: 'VerificationImageTiming',\n    x00741034: 'DoubleExposureFlag',\n    x00741036: 'DoubleExposureOrdering',\n    x00741038: 'DoubleExposureMeterset',\n    x0074103a: 'DoubleExposureFieldDelta',\n    x00741040: 'RelatedReferenceRTImageSequence',\n    x00741042: 'GeneralMachineVerificationSequence',\n    x00741044: 'ConventionalMachineVerificationSeq',\n    x00741046: 'IonMachineVerificationSequence',\n    x00741048: 'FailedAttributesSequence',\n    x0074104a: 'OverriddenAttributesSequence',\n    x0074104c: 'ConventionalControlPointVerifySeq',\n    x0074104e: 'IonControlPointVerificationSeq',\n    x00741050: 'AttributeOccurrenceSequence',\n    x00741052: 'AttributeOccurrencePointer',\n    x00741054: 'AttributeItemSelector',\n    x00741056: 'AttributeOccurrencePrivateCreator',\n    x00741200: 'ScheduledProcedureStepPriority',\n    x00741202: 'StudyListLabel',\n    x00741204: 'ProcedureStepLabel',\n    x00741210: 'ScheduledProcessingParametersSeq',\n    x00741212: 'PerformedProcessingParametersSeq',\n    x00741216: 'UPSPerformedProcedureSequence',\n    x00741220: 'RelatedProcedureStepSequence',\n    x00741222: 'ProcedureStepRelationshipType',\n    x00741230: 'DeletionLock',\n    x00741234: 'ReceivingAE',\n    x00741236: 'RequestingAE',\n    x00741238: 'ReasonForCancellation',\n    x00741242: 'SCPStatus',\n    x00741244: 'SubscriptionListStatus',\n    x00741246: 'UPSListStatus',\n    x00880130: 'StorageMediaFileSetID',\n    x00880140: 'StorageMediaFileSetUID',\n    x00880200: 'IconImageSequence',\n    x00880904: 'TopicTitle',\n    x00880906: 'TopicSubject',\n    x00880910: 'TopicAuthor',\n    x00880912: 'TopicKeywords',\n    x01000410: 'SOPInstanceStatus',\n    x01000420: 'SOPAuthorizationDateAndTime',\n    x01000424: 'SOPAuthorizationComment',\n    x01000426: 'AuthorizationEquipmentCertNumber',\n    x04000005: 'MACIDNumber',\n    x04000010: 'MACCalculationTransferSyntaxUID',\n    x04000015: 'MACAlgorithm',\n    x04000020: 'DataElementsSigned',\n    x04000100: 'DigitalSignatureUID',\n    x04000105: 'DigitalSignatureDateTime',\n    x04000110: 'CertificateType',\n    x04000115: 'CertificateOfSigner',\n    x04000120: 'Signature',\n    x04000305: 'CertifiedTimestampType',\n    x04000310: 'CertifiedTimestamp',\n    x04000401: 'DigitalSignaturePurposeCodeSeq',\n    x04000402: 'ReferencedDigitalSignatureSeq',\n    x04000403: 'ReferencedSOPInstanceMACSeq',\n    x04000404: 'MAC',\n    x04000500: 'EncryptedAttributesSequence',\n    x04000510: 'EncryptedContentTransferSyntaxUID',\n    x04000520: 'EncryptedContent',\n    x04000550: 'ModifiedAttributesSequence',\n    x04000561: 'OriginalAttributesSequence',\n    x04000562: 'AttributeModificationDateTime',\n    x04000563: 'ModifyingSystem',\n    x04000564: 'SourceOfPreviousValues',\n    x04000565: 'ReasonForTheAttributeModification',\n    x1000xxx0: 'EscapeTriplet',\n    x1000xxx1: 'RunLengthTriplet',\n    x1000xxx2: 'HuffmanTableSize',\n    x1000xxx3: 'HuffmanTableTriplet',\n    x1000xxx4: 'ShiftTableSize',\n    x1000xxx5: 'ShiftTableTriplet',\n    x1010xxxx: 'ZonalMap',\n    x20000010: 'NumberOfCopies',\n    x2000001e: 'PrinterConfigurationSequence',\n    x20000020: 'PrintPriority',\n    x20000030: 'MediumType',\n    x20000040: 'FilmDestination',\n    x20000050: 'FilmSessionLabel',\n    x20000060: 'MemoryAllocation',\n    x20000061: 'MaximumMemoryAllocation',\n    x20000062: 'ColorImagePrintingFlag',\n    x20000063: 'CollationFlag',\n    x20000065: 'AnnotationFlag',\n    x20000067: 'ImageOverlayFlag',\n    x20000069: 'PresentationLUTFlag',\n    x2000006a: 'ImageBoxPresentationLUTFlag',\n    x200000a0: 'MemoryBitDepth',\n    x200000a1: 'PrintingBitDepth',\n    x200000a2: 'MediaInstalledSequence',\n    x200000a4: 'OtherMediaAvailableSequence',\n    x200000a8: 'SupportedImageDisplayFormatSeq',\n    x20000500: 'ReferencedFilmBoxSequence',\n    x20000510: 'ReferencedStoredPrintSequence',\n    x20100010: 'ImageDisplayFormat',\n    x20100030: 'AnnotationDisplayFormatID',\n    x20100040: 'FilmOrientation',\n    x20100050: 'FilmSizeID',\n    x20100052: 'PrinterResolutionID',\n    x20100054: 'DefaultPrinterResolutionID',\n    x20100060: 'MagnificationType',\n    x20100080: 'SmoothingType',\n    x201000a6: 'DefaultMagnificationType',\n    x201000a7: 'OtherMagnificationTypesAvailable',\n    x201000a8: 'DefaultSmoothingType',\n    x201000a9: 'OtherSmoothingTypesAvailable',\n    x20100100: 'BorderDensity',\n    x20100110: 'EmptyImageDensity',\n    x20100120: 'MinDensity',\n    x20100130: 'MaxDensity',\n    x20100140: 'Trim',\n    x20100150: 'ConfigurationInformation',\n    x20100152: 'ConfigurationInformationDescr',\n    x20100154: 'MaximumCollatedFilms',\n    x2010015e: 'Illumination',\n    x20100160: 'ReflectedAmbientLight',\n    x20100376: 'PrinterPixelSpacing',\n    x20100500: 'ReferencedFilmSessionSequence',\n    x20100510: 'ReferencedImageBoxSequence',\n    x20100520: 'ReferencedBasicAnnotationBoxSeq',\n    x20200010: 'ImageBoxPosition',\n    x20200020: 'Polarity',\n    x20200030: 'RequestedImageSize',\n    x20200040: 'RequestedDecimate-CropBehavior',\n    x20200050: 'RequestedResolutionID',\n    x202000a0: 'RequestedImageSizeFlag',\n    x202000a2: 'DecimateCropResult',\n    x20200110: 'BasicGrayscaleImageSequence',\n    x20200111: 'BasicColorImageSequence',\n    x20200130: 'ReferencedImageOverlayBoxSequence',\n    x20200140: 'ReferencedVOILUTBoxSequence',\n    x20300010: 'AnnotationPosition',\n    x20300020: 'TextString',\n    x20400010: 'ReferencedOverlayPlaneSequence',\n    x20400011: 'ReferencedOverlayPlaneGroups',\n    x20400020: 'OverlayPixelDataSequence',\n    x20400060: 'OverlayMagnificationType',\n    x20400070: 'OverlaySmoothingType',\n    x20400072: 'OverlayOrImageMagnification',\n    x20400074: 'MagnifyToNumberOfColumns',\n    x20400080: 'OverlayForegroundDensity',\n    x20400082: 'OverlayBackgroundDensity',\n    x20400090: 'OverlayMode',\n    x20400100: 'ThresholdDensity',\n    x20400500: 'ReferencedImageBoxSequenceRetired',\n    x20500010: 'PresentationLUTSequence',\n    x20500020: 'PresentationLUTShape',\n    x20500500: 'ReferencedPresentationLUTSequence',\n    x21000010: 'PrintJobID',\n    x21000020: 'ExecutionStatus',\n    x21000030: 'ExecutionStatusInfo',\n    x21000040: 'CreationDate',\n    x21000050: 'CreationTime',\n    x21000070: 'Originator',\n    x21000140: 'DestinationAE',\n    x21000160: 'OwnerID',\n    x21000170: 'NumberOfFilms',\n    x21000500: 'ReferencedPrintJobSequencePullStoredPrint',\n    x21100010: 'PrinterStatus',\n    x21100020: 'PrinterStatusInfo',\n    x21100030: 'PrinterName',\n    x21100099: 'PrintQueueID',\n    x21200010: 'QueueStatus',\n    x21200050: 'PrintJobDescriptionSequence',\n    x21200070: 'ReferencedPrintJobSequence',\n    x21300010: 'PrintManagementCapabilitiesSeq',\n    x21300015: 'PrinterCharacteristicsSequence',\n    x21300030: 'FilmBoxContentSequence',\n    x21300040: 'ImageBoxContentSequence',\n    x21300050: 'AnnotationContentSequence',\n    x21300060: 'ImageOverlayBoxContentSequence',\n    x21300080: 'PresentationLUTContentSequence',\n    x213000a0: 'ProposedStudySequence',\n    x213000c0: 'OriginalImageSequence',\n    x22000001: 'LabelFromInfoExtractedFromInstance',\n    x22000002: 'LabelText',\n    x22000003: 'LabelStyleSelection',\n    x22000004: 'MediaDisposition',\n    x22000005: 'BarcodeValue',\n    x22000006: 'BarcodeSymbology',\n    x22000007: 'AllowMediaSplitting',\n    x22000008: 'IncludeNonDICOMObjects',\n    x22000009: 'IncludeDisplayApplication',\n    x2200000a: 'SaveCompInstancesAfterMediaCreate',\n    x2200000b: 'TotalNumberMediaPiecesCreated',\n    x2200000c: 'RequestedMediaApplicationProfile',\n    x2200000d: 'ReferencedStorageMediaSequence',\n    x2200000e: 'FailureAttributes',\n    x2200000f: 'AllowLossyCompression',\n    x22000020: 'RequestPriority',\n    x30020002: 'RTImageLabel',\n    x30020003: 'RTImageName',\n    x30020004: 'RTImageDescription',\n    x3002000a: 'ReportedValuesOrigin',\n    x3002000c: 'RTImagePlane',\n    x3002000d: 'XRayImageReceptorTranslation',\n    x3002000e: 'XRayImageReceptorAngle',\n    x30020010: 'RTImageOrientation',\n    x30020011: 'ImagePlanePixelSpacing',\n    x30020012: 'RTImagePosition',\n    x30020020: 'RadiationMachineName',\n    x30020022: 'RadiationMachineSAD',\n    x30020024: 'RadiationMachineSSD',\n    x30020026: 'RTImageSID',\n    x30020028: 'SourceToReferenceObjectDistance',\n    x30020029: 'FractionNumber',\n    x30020030: 'ExposureSequence',\n    x30020032: 'MetersetExposure',\n    x30020034: 'DiaphragmPosition',\n    x30020040: 'FluenceMapSequence',\n    x30020041: 'FluenceDataSource',\n    x30020042: 'FluenceDataScale',\n    x30020051: 'FluenceMode',\n    x30020052: 'FluenceModeID',\n    x30040001: 'DVHType',\n    x30040002: 'DoseUnits',\n    x30040004: 'DoseType',\n    x30040006: 'DoseComment',\n    x30040008: 'NormalizationPoint',\n    x3004000a: 'DoseSummationType',\n    x3004000c: 'GridFrameOffsetVector',\n    x3004000e: 'DoseGridScaling',\n    x30040010: 'RTDoseROISequence',\n    x30040012: 'DoseValue',\n    x30040014: 'TissueHeterogeneityCorrection',\n    x30040040: 'DVHNormalizationPoint',\n    x30040042: 'DVHNormalizationDoseValue',\n    x30040050: 'DVHSequence',\n    x30040052: 'DVHDoseScaling',\n    x30040054: 'DVHVolumeUnits',\n    x30040056: 'DVHNumberOfBins',\n    x30040058: 'DVHData',\n    x30040060: 'DVHReferencedROISequence',\n    x30040062: 'DVHROIContributionType',\n    x30040070: 'DVHMinimumDose',\n    x30040072: 'DVHMaximumDose',\n    x30040074: 'DVHMeanDose',\n    x30060002: 'StructureSetLabel',\n    x30060004: 'StructureSetName',\n    x30060006: 'StructureSetDescription',\n    x30060008: 'StructureSetDate',\n    x30060009: 'StructureSetTime',\n    x30060010: 'ReferencedFrameOfReferenceSequence',\n    x30060012: 'RTReferencedStudySequence',\n    x30060014: 'RTReferencedSeriesSequence',\n    x30060016: 'ContourImageSequence',\n    x30060020: 'StructureSetROISequence',\n    x30060022: 'ROINumber',\n    x30060024: 'ReferencedFrameOfReferenceUID',\n    x30060026: 'ROIName',\n    x30060028: 'ROIDescription',\n    x3006002a: 'ROIDisplayColor',\n    x3006002c: 'ROIVolume',\n    x30060030: 'RTRelatedROISequence',\n    x30060033: 'RTROIRelationship',\n    x30060036: 'ROIGenerationAlgorithm',\n    x30060038: 'ROIGenerationDescription',\n    x30060039: 'ROIContourSequence',\n    x30060040: 'ContourSequence',\n    x30060042: 'ContourGeometricType',\n    x30060044: 'ContourSlabThickness',\n    x30060045: 'ContourOffsetVector',\n    x30060046: 'NumberOfContourPoints',\n    x30060048: 'ContourNumber',\n    x30060049: 'AttachedContours',\n    x30060050: 'ContourData',\n    x30060080: 'RTROIObservationsSequence',\n    x30060082: 'ObservationNumber',\n    x30060084: 'ReferencedROINumber',\n    x30060085: 'ROIObservationLabel',\n    x30060086: 'RTROIIdentificationCodeSequence',\n    x30060088: 'ROIObservationDescription',\n    x300600a0: 'RelatedRTROIObservationsSequence',\n    x300600a4: 'RTROIInterpretedType',\n    x300600a6: 'ROIInterpreter',\n    x300600b0: 'ROIPhysicalPropertiesSequence',\n    x300600b2: 'ROIPhysicalProperty',\n    x300600b4: 'ROIPhysicalPropertyValue',\n    x300600b6: 'ROIElementalCompositionSequence',\n    x300600b7: 'ROIElementalCompAtomicNumber',\n    x300600b8: 'ROIElementalCompAtomicMassFraction',\n    x300600c0: 'FrameOfReferenceRelationshipSeq',\n    x300600c2: 'RelatedFrameOfReferenceUID',\n    x300600c4: 'FrameOfReferenceTransformType',\n    x300600c6: 'FrameOfReferenceTransformMatrix',\n    x300600c8: 'FrameOfReferenceTransformComment',\n    x30080010: 'MeasuredDoseReferenceSequence',\n    x30080012: 'MeasuredDoseDescription',\n    x30080014: 'MeasuredDoseType',\n    x30080016: 'MeasuredDoseValue',\n    x30080020: 'TreatmentSessionBeamSequence',\n    x30080021: 'TreatmentSessionIonBeamSequence',\n    x30080022: 'CurrentFractionNumber',\n    x30080024: 'TreatmentControlPointDate',\n    x30080025: 'TreatmentControlPointTime',\n    x3008002a: 'TreatmentTerminationStatus',\n    x3008002b: 'TreatmentTerminationCode',\n    x3008002c: 'TreatmentVerificationStatus',\n    x30080030: 'ReferencedTreatmentRecordSequence',\n    x30080032: 'SpecifiedPrimaryMeterset',\n    x30080033: 'SpecifiedSecondaryMeterset',\n    x30080036: 'DeliveredPrimaryMeterset',\n    x30080037: 'DeliveredSecondaryMeterset',\n    x3008003a: 'SpecifiedTreatmentTime',\n    x3008003b: 'DeliveredTreatmentTime',\n    x30080040: 'ControlPointDeliverySequence',\n    x30080041: 'IonControlPointDeliverySequence',\n    x30080042: 'SpecifiedMeterset',\n    x30080044: 'DeliveredMeterset',\n    x30080045: 'MetersetRateSet',\n    x30080046: 'MetersetRateDelivered',\n    x30080047: 'ScanSpotMetersetsDelivered',\n    x30080048: 'DoseRateDelivered',\n    x30080050: 'TreatmentSummaryCalcDoseRefSeq',\n    x30080052: 'CumulativeDoseToDoseReference',\n    x30080054: 'FirstTreatmentDate',\n    x30080056: 'MostRecentTreatmentDate',\n    x3008005a: 'NumberOfFractionsDelivered',\n    x30080060: 'OverrideSequence',\n    x30080061: 'ParameterSequencePointer',\n    x30080062: 'OverrideParameterPointer',\n    x30080063: 'ParameterItemIndex',\n    x30080064: 'MeasuredDoseReferenceNumber',\n    x30080065: 'ParameterPointer',\n    x30080066: 'OverrideReason',\n    x30080068: 'CorrectedParameterSequence',\n    x3008006a: 'CorrectionValue',\n    x30080070: 'CalculatedDoseReferenceSequence',\n    x30080072: 'CalculatedDoseReferenceNumber',\n    x30080074: 'CalculatedDoseReferenceDescription',\n    x30080076: 'CalculatedDoseReferenceDoseValue',\n    x30080078: 'StartMeterset',\n    x3008007a: 'EndMeterset',\n    x30080080: 'ReferencedMeasuredDoseReferenceSeq',\n    x30080082: 'ReferencedMeasuredDoseReferenceNum',\n    x30080090: 'ReferencedCalculatedDoseRefSeq',\n    x30080092: 'ReferencedCalculatedDoseRefNumber',\n    x300800a0: 'BeamLimitingDeviceLeafPairsSeq',\n    x300800b0: 'RecordedWedgeSequence',\n    x300800c0: 'RecordedCompensatorSequence',\n    x300800d0: 'RecordedBlockSequence',\n    x300800e0: 'TreatmentSummaryMeasuredDoseRefSeq',\n    x300800f0: 'RecordedSnoutSequence',\n    x300800f2: 'RecordedRangeShifterSequence',\n    x300800f4: 'RecordedLateralSpreadingDeviceSeq',\n    x300800f6: 'RecordedRangeModulatorSequence',\n    x30080100: 'RecordedSourceSequence',\n    x30080105: 'SourceSerialNumber',\n    x30080110: 'TreatmentSessionAppSetupSeq',\n    x30080116: 'ApplicationSetupCheck',\n    x30080120: 'RecordedBrachyAccessoryDeviceSeq',\n    x30080122: 'ReferencedBrachyAccessoryDeviceNum',\n    x30080130: 'RecordedChannelSequence',\n    x30080132: 'SpecifiedChannelTotalTime',\n    x30080134: 'DeliveredChannelTotalTime',\n    x30080136: 'SpecifiedNumberOfPulses',\n    x30080138: 'DeliveredNumberOfPulses',\n    x3008013a: 'SpecifiedPulseRepetitionInterval',\n    x3008013c: 'DeliveredPulseRepetitionInterval',\n    x30080140: 'RecordedSourceApplicatorSequence',\n    x30080142: 'ReferencedSourceApplicatorNumber',\n    x30080150: 'RecordedChannelShieldSequence',\n    x30080152: 'ReferencedChannelShieldNumber',\n    x30080160: 'BrachyControlPointDeliveredSeq',\n    x30080162: 'SafePositionExitDate',\n    x30080164: 'SafePositionExitTime',\n    x30080166: 'SafePositionReturnDate',\n    x30080168: 'SafePositionReturnTime',\n    x30080200: 'CurrentTreatmentStatus',\n    x30080202: 'TreatmentStatusComment',\n    x30080220: 'FractionGroupSummarySequence',\n    x30080223: 'ReferencedFractionNumber',\n    x30080224: 'FractionGroupType',\n    x30080230: 'BeamStopperPosition',\n    x30080240: 'FractionStatusSummarySequence',\n    x30080250: 'TreatmentDate',\n    x30080251: 'TreatmentTime',\n    x300a0002: 'RTPlanLabel',\n    x300a0003: 'RTPlanName',\n    x300a0004: 'RTPlanDescription',\n    x300a0006: 'RTPlanDate',\n    x300a0007: 'RTPlanTime',\n    x300a0009: 'TreatmentProtocols',\n    x300a000a: 'PlanIntent',\n    x300a000b: 'TreatmentSites',\n    x300a000c: 'RTPlanGeometry',\n    x300a000e: 'PrescriptionDescription',\n    x300a0010: 'DoseReferenceSequence',\n    x300a0012: 'DoseReferenceNumber',\n    x300a0013: 'DoseReferenceUID',\n    x300a0014: 'DoseReferenceStructureType',\n    x300a0015: 'NominalBeamEnergyUnit',\n    x300a0016: 'DoseReferenceDescription',\n    x300a0018: 'DoseReferencePointCoordinates',\n    x300a001a: 'NominalPriorDose',\n    x300a0020: 'DoseReferenceType',\n    x300a0021: 'ConstraintWeight',\n    x300a0022: 'DeliveryWarningDose',\n    x300a0023: 'DeliveryMaximumDose',\n    x300a0025: 'TargetMinimumDose',\n    x300a0026: 'TargetPrescriptionDose',\n    x300a0027: 'TargetMaximumDose',\n    x300a0028: 'TargetUnderdoseVolumeFraction',\n    x300a002a: 'OrganAtRiskFullVolumeDose',\n    x300a002b: 'OrganAtRiskLimitDose',\n    x300a002c: 'OrganAtRiskMaximumDose',\n    x300a002d: 'OrganAtRiskOverdoseVolumeFraction',\n    x300a0040: 'ToleranceTableSequence',\n    x300a0042: 'ToleranceTableNumber',\n    x300a0043: 'ToleranceTableLabel',\n    x300a0044: 'GantryAngleTolerance',\n    x300a0046: 'BeamLimitingDeviceAngleTolerance',\n    x300a0048: 'BeamLimitingDeviceToleranceSeq',\n    x300a004a: 'BeamLimitingDevicePositionTol',\n    x300a004b: 'SnoutPositionTolerance',\n    x300a004c: 'PatientSupportAngleTolerance',\n    x300a004e: 'TableTopEccentricAngleTolerance',\n    x300a004f: 'TableTopPitchAngleTolerance',\n    x300a0050: 'TableTopRollAngleTolerance',\n    x300a0051: 'TableTopVerticalPositionTolerance',\n    x300a0052: 'TableTopLongitudinalPositionTol',\n    x300a0053: 'TableTopLateralPositionTolerance',\n    x300a0055: 'RTPlanRelationship',\n    x300a0070: 'FractionGroupSequence',\n    x300a0071: 'FractionGroupNumber',\n    x300a0072: 'FractionGroupDescription',\n    x300a0078: 'NumberOfFractionsPlanned',\n    x300a0079: 'NumberFractionPatternDigitsPerDay',\n    x300a007a: 'RepeatFractionCycleLength',\n    x300a007b: 'FractionPattern',\n    x300a0080: 'NumberOfBeams',\n    x300a0082: 'BeamDoseSpecificationPoint',\n    x300a0084: 'BeamDose',\n    x300a0086: 'BeamMeterset',\n    x300a0088: 'BeamDosePointDepth',\n    x300a0089: 'BeamDosePointEquivalentDepth',\n    x300a008a: 'BeamDosePointSSD',\n    x300a00a0: 'NumberOfBrachyApplicationSetups',\n    x300a00a2: 'BrachyAppSetupDoseSpecPoint',\n    x300a00a4: 'BrachyApplicationSetupDose',\n    x300a00b0: 'BeamSequence',\n    x300a00b2: 'TreatmentMachineName',\n    x300a00b3: 'PrimaryDosimeterUnit',\n    x300a00b4: 'SourceAxisDistance',\n    x300a00b6: 'BeamLimitingDeviceSequence',\n    x300a00b8: 'RTBeamLimitingDeviceType',\n    x300a00ba: 'SourceToBeamLimitingDeviceDistance',\n    x300a00bb: 'IsocenterToBeamLimitingDeviceDist',\n    x300a00bc: 'NumberOfLeafJawPairs',\n    x300a00be: 'LeafPositionBoundaries',\n    x300a00c0: 'BeamNumber',\n    x300a00c2: 'BeamName',\n    x300a00c3: 'BeamDescription',\n    x300a00c4: 'BeamType',\n    x300a00c6: 'RadiationType',\n    x300a00c7: 'HighDoseTechniqueType',\n    x300a00c8: 'ReferenceImageNumber',\n    x300a00ca: 'PlannedVerificationImageSequence',\n    x300a00cc: 'ImagingDeviceSpecificAcqParams',\n    x300a00ce: 'TreatmentDeliveryType',\n    x300a00d0: 'NumberOfWedges',\n    x300a00d1: 'WedgeSequence',\n    x300a00d2: 'WedgeNumber',\n    x300a00d3: 'WedgeType',\n    x300a00d4: 'WedgeID',\n    x300a00d5: 'WedgeAngle',\n    x300a00d6: 'WedgeFactor',\n    x300a00d7: 'TotalWedgeTrayWaterEquivThickness',\n    x300a00d8: 'WedgeOrientation',\n    x300a00d9: 'IsocenterToWedgeTrayDistance',\n    x300a00da: 'SourceToWedgeTrayDistance',\n    x300a00db: 'WedgeThinEdgePosition',\n    x300a00dc: 'BolusID',\n    x300a00dd: 'BolusDescription',\n    x300a00e0: 'NumberOfCompensators',\n    x300a00e1: 'MaterialID',\n    x300a00e2: 'TotalCompensatorTrayFactor',\n    x300a00e3: 'CompensatorSequence',\n    x300a00e4: 'CompensatorNumber',\n    x300a00e5: 'CompensatorID',\n    x300a00e6: 'SourceToCompensatorTrayDistance',\n    x300a00e7: 'CompensatorRows',\n    x300a00e8: 'CompensatorColumns',\n    x300a00e9: 'CompensatorPixelSpacing',\n    x300a00ea: 'CompensatorPosition',\n    x300a00eb: 'CompensatorTransmissionData',\n    x300a00ec: 'CompensatorThicknessData',\n    x300a00ed: 'NumberOfBoli',\n    x300a00ee: 'CompensatorType',\n    x300a00f0: 'NumberOfBlocks',\n    x300a00f2: 'TotalBlockTrayFactor',\n    x300a00f3: 'TotalBlockTrayWaterEquivThickness',\n    x300a00f4: 'BlockSequence',\n    x300a00f5: 'BlockTrayID',\n    x300a00f6: 'SourceToBlockTrayDistance',\n    x300a00f7: 'IsocenterToBlockTrayDistance',\n    x300a00f8: 'BlockType',\n    x300a00f9: 'AccessoryCode',\n    x300a00fa: 'BlockDivergence',\n    x300a00fb: 'BlockMountingPosition',\n    x300a00fc: 'BlockNumber',\n    x300a00fe: 'BlockName',\n    x300a0100: 'BlockThickness',\n    x300a0102: 'BlockTransmission',\n    x300a0104: 'BlockNumberOfPoints',\n    x300a0106: 'BlockData',\n    x300a0107: 'ApplicatorSequence',\n    x300a0108: 'ApplicatorID',\n    x300a0109: 'ApplicatorType',\n    x300a010a: 'ApplicatorDescription',\n    x300a010c: 'CumulativeDoseReferenceCoefficient',\n    x300a010e: 'FinalCumulativeMetersetWeight',\n    x300a0110: 'NumberOfControlPoints',\n    x300a0111: 'ControlPointSequence',\n    x300a0112: 'ControlPointIndex',\n    x300a0114: 'NominalBeamEnergy',\n    x300a0115: 'DoseRateSet',\n    x300a0116: 'WedgePositionSequence',\n    x300a0118: 'WedgePosition',\n    x300a011a: 'BeamLimitingDevicePositionSequence',\n    x300a011c: 'LeafJawPositions',\n    x300a011e: 'GantryAngle',\n    x300a011f: 'GantryRotationDirection',\n    x300a0120: 'BeamLimitingDeviceAngle',\n    x300a0121: 'BeamLimitingDeviceRotateDirection',\n    x300a0122: 'PatientSupportAngle',\n    x300a0123: 'PatientSupportRotationDirection',\n    x300a0124: 'TableTopEccentricAxisDistance',\n    x300a0125: 'TableTopEccentricAngle',\n    x300a0126: 'TableTopEccentricRotateDirection',\n    x300a0128: 'TableTopVerticalPosition',\n    x300a0129: 'TableTopLongitudinalPosition',\n    x300a012a: 'TableTopLateralPosition',\n    x300a012c: 'IsocenterPosition',\n    x300a012e: 'SurfaceEntryPoint',\n    x300a0130: 'SourceToSurfaceDistance',\n    x300a0134: 'CumulativeMetersetWeight',\n    x300a0140: 'TableTopPitchAngle',\n    x300a0142: 'TableTopPitchRotationDirection',\n    x300a0144: 'TableTopRollAngle',\n    x300a0146: 'TableTopRollRotationDirection',\n    x300a0148: 'HeadFixationAngle',\n    x300a014a: 'GantryPitchAngle',\n    x300a014c: 'GantryPitchRotationDirection',\n    x300a014e: 'GantryPitchAngleTolerance',\n    x300a0180: 'PatientSetupSequence',\n    x300a0182: 'PatientSetupNumber',\n    x300a0183: 'PatientSetupLabel',\n    x300a0184: 'PatientAdditionalPosition',\n    x300a0190: 'FixationDeviceSequence',\n    x300a0192: 'FixationDeviceType',\n    x300a0194: 'FixationDeviceLabel',\n    x300a0196: 'FixationDeviceDescription',\n    x300a0198: 'FixationDevicePosition',\n    x300a0199: 'FixationDevicePitchAngle',\n    x300a019a: 'FixationDeviceRollAngle',\n    x300a01a0: 'ShieldingDeviceSequence',\n    x300a01a2: 'ShieldingDeviceType',\n    x300a01a4: 'ShieldingDeviceLabel',\n    x300a01a6: 'ShieldingDeviceDescription',\n    x300a01a8: 'ShieldingDevicePosition',\n    x300a01b0: 'SetupTechnique',\n    x300a01b2: 'SetupTechniqueDescription',\n    x300a01b4: 'SetupDeviceSequence',\n    x300a01b6: 'SetupDeviceType',\n    x300a01b8: 'SetupDeviceLabel',\n    x300a01ba: 'SetupDeviceDescription',\n    x300a01bc: 'SetupDeviceParameter',\n    x300a01d0: 'SetupReferenceDescription',\n    x300a01d2: 'TableTopVerticalSetupDisplacement',\n    x300a01d4: 'TableTopLongitudinalSetupDisplace',\n    x300a01d6: 'TableTopLateralSetupDisplacement',\n    x300a0200: 'BrachyTreatmentTechnique',\n    x300a0202: 'BrachyTreatmentType',\n    x300a0206: 'TreatmentMachineSequence',\n    x300a0210: 'SourceSequence',\n    x300a0212: 'SourceNumber',\n    x300a0214: 'SourceType',\n    x300a0216: 'SourceManufacturer',\n    x300a0218: 'ActiveSourceDiameter',\n    x300a021a: 'ActiveSourceLength',\n    x300a0222: 'SourceEncapsulationNomThickness',\n    x300a0224: 'SourceEncapsulationNomTransmission',\n    x300a0226: 'SourceIsotopeName',\n    x300a0228: 'SourceIsotopeHalfLife',\n    x300a0229: 'SourceStrengthUnits',\n    x300a022a: 'ReferenceAirKermaRate',\n    x300a022b: 'SourceStrength',\n    x300a022c: 'SourceStrengthReferenceDate',\n    x300a022e: 'SourceStrengthReferenceTime',\n    x300a0230: 'ApplicationSetupSequence',\n    x300a0232: 'ApplicationSetupType',\n    x300a0234: 'ApplicationSetupNumber',\n    x300a0236: 'ApplicationSetupName',\n    x300a0238: 'ApplicationSetupManufacturer',\n    x300a0240: 'TemplateNumber',\n    x300a0242: 'TemplateType',\n    x300a0244: 'TemplateName',\n    x300a0250: 'TotalReferenceAirKerma',\n    x300a0260: 'BrachyAccessoryDeviceSequence',\n    x300a0262: 'BrachyAccessoryDeviceNumber',\n    x300a0263: 'BrachyAccessoryDeviceID',\n    x300a0264: 'BrachyAccessoryDeviceType',\n    x300a0266: 'BrachyAccessoryDeviceName',\n    x300a026a: 'BrachyAccessoryDeviceNomThickness',\n    x300a026c: 'BrachyAccessoryDevNomTransmission',\n    x300a0280: 'ChannelSequence',\n    x300a0282: 'ChannelNumber',\n    x300a0284: 'ChannelLength',\n    x300a0286: 'ChannelTotalTime',\n    x300a0288: 'SourceMovementType',\n    x300a028a: 'NumberOfPulses',\n    x300a028c: 'PulseRepetitionInterval',\n    x300a0290: 'SourceApplicatorNumber',\n    x300a0291: 'SourceApplicatorID',\n    x300a0292: 'SourceApplicatorType',\n    x300a0294: 'SourceApplicatorName',\n    x300a0296: 'SourceApplicatorLength',\n    x300a0298: 'SourceApplicatorManufacturer',\n    x300a029c: 'SourceApplicatorWallNomThickness',\n    x300a029e: 'SourceApplicatorWallNomTrans',\n    x300a02a0: 'SourceApplicatorStepSize',\n    x300a02a2: 'TransferTubeNumber',\n    x300a02a4: 'TransferTubeLength',\n    x300a02b0: 'ChannelShieldSequence',\n    x300a02b2: 'ChannelShieldNumber',\n    x300a02b3: 'ChannelShieldID',\n    x300a02b4: 'ChannelShieldName',\n    x300a02b8: 'ChannelShieldNominalThickness',\n    x300a02ba: 'ChannelShieldNominalTransmission',\n    x300a02c8: 'FinalCumulativeTimeWeight',\n    x300a02d0: 'BrachyControlPointSequence',\n    x300a02d2: 'ControlPointRelativePosition',\n    x300a02d4: 'ControlPoint3DPosition',\n    x300a02d6: 'CumulativeTimeWeight',\n    x300a02e0: 'CompensatorDivergence',\n    x300a02e1: 'CompensatorMountingPosition',\n    x300a02e2: 'SourceToCompensatorDistance',\n    x300a02e3: 'TotalCompTrayWaterEquivThickness',\n    x300a02e4: 'IsocenterToCompensatorTrayDistance',\n    x300a02e5: 'CompensatorColumnOffset',\n    x300a02e6: 'IsocenterToCompensatorDistances',\n    x300a02e7: 'CompensatorRelStoppingPowerRatio',\n    x300a02e8: 'CompensatorMillingToolDiameter',\n    x300a02ea: 'IonRangeCompensatorSequence',\n    x300a02eb: 'CompensatorDescription',\n    x300a0302: 'RadiationMassNumber',\n    x300a0304: 'RadiationAtomicNumber',\n    x300a0306: 'RadiationChargeState',\n    x300a0308: 'ScanMode',\n    x300a030a: 'VirtualSourceAxisDistances',\n    x300a030c: 'SnoutSequence',\n    x300a030d: 'SnoutPosition',\n    x300a030f: 'SnoutID',\n    x300a0312: 'NumberOfRangeShifters',\n    x300a0314: 'RangeShifterSequence',\n    x300a0316: 'RangeShifterNumber',\n    x300a0318: 'RangeShifterID',\n    x300a0320: 'RangeShifterType',\n    x300a0322: 'RangeShifterDescription',\n    x300a0330: 'NumberOfLateralSpreadingDevices',\n    x300a0332: 'LateralSpreadingDeviceSequence',\n    x300a0334: 'LateralSpreadingDeviceNumber',\n    x300a0336: 'LateralSpreadingDeviceID',\n    x300a0338: 'LateralSpreadingDeviceType',\n    x300a033a: 'LateralSpreadingDeviceDescription',\n    x300a033c: 'LateralSpreadingDevWaterEquivThick',\n    x300a0340: 'NumberOfRangeModulators',\n    x300a0342: 'RangeModulatorSequence',\n    x300a0344: 'RangeModulatorNumber',\n    x300a0346: 'RangeModulatorID',\n    x300a0348: 'RangeModulatorType',\n    x300a034a: 'RangeModulatorDescription',\n    x300a034c: 'BeamCurrentModulationID',\n    x300a0350: 'PatientSupportType',\n    x300a0352: 'PatientSupportID',\n    x300a0354: 'PatientSupportAccessoryCode',\n    x300a0356: 'FixationLightAzimuthalAngle',\n    x300a0358: 'FixationLightPolarAngle',\n    x300a035a: 'MetersetRate',\n    x300a0360: 'RangeShifterSettingsSequence',\n    x300a0362: 'RangeShifterSetting',\n    x300a0364: 'IsocenterToRangeShifterDistance',\n    x300a0366: 'RangeShifterWaterEquivThickness',\n    x300a0370: 'LateralSpreadingDeviceSettingsSeq',\n    x300a0372: 'LateralSpreadingDeviceSetting',\n    x300a0374: 'IsocenterToLateralSpreadingDevDist',\n    x300a0380: 'RangeModulatorSettingsSequence',\n    x300a0382: 'RangeModulatorGatingStartValue',\n    x300a0384: 'RangeModulatorGatingStopValue',\n    x300a038a: 'IsocenterToRangeModulatorDistance',\n    x300a0390: 'ScanSpotTuneID',\n    x300a0392: 'NumberOfScanSpotPositions',\n    x300a0394: 'ScanSpotPositionMap',\n    x300a0396: 'ScanSpotMetersetWeights',\n    x300a0398: 'ScanningSpotSize',\n    x300a039a: 'NumberOfPaintings',\n    x300a03a0: 'IonToleranceTableSequence',\n    x300a03a2: 'IonBeamSequence',\n    x300a03a4: 'IonBeamLimitingDeviceSequence',\n    x300a03a6: 'IonBlockSequence',\n    x300a03a8: 'IonControlPointSequence',\n    x300a03aa: 'IonWedgeSequence',\n    x300a03ac: 'IonWedgePositionSequence',\n    x300a0401: 'ReferencedSetupImageSequence',\n    x300a0402: 'SetupImageComment',\n    x300a0410: 'MotionSynchronizationSequence',\n    x300a0412: 'ControlPointOrientation',\n    x300a0420: 'GeneralAccessorySequence',\n    x300a0421: 'GeneralAccessoryID',\n    x300a0422: 'GeneralAccessoryDescription',\n    x300a0423: 'GeneralAccessoryType',\n    x300a0424: 'GeneralAccessoryNumber',\n    x300c0002: 'ReferencedRTPlanSequence',\n    x300c0004: 'ReferencedBeamSequence',\n    x300c0006: 'ReferencedBeamNumber',\n    x300c0007: 'ReferencedReferenceImageNumber',\n    x300c0008: 'StartCumulativeMetersetWeight',\n    x300c0009: 'EndCumulativeMetersetWeight',\n    x300c000a: 'ReferencedBrachyAppSetupSeq',\n    x300c000c: 'ReferencedBrachyAppSetupNumber',\n    x300c000e: 'ReferencedSourceNumber',\n    x300c0020: 'ReferencedFractionGroupSequence',\n    x300c0022: 'ReferencedFractionGroupNumber',\n    x300c0040: 'ReferencedVerificationImageSeq',\n    x300c0042: 'ReferencedReferenceImageSequence',\n    x300c0050: 'ReferencedDoseReferenceSequence',\n    x300c0051: 'ReferencedDoseReferenceNumber',\n    x300c0055: 'BrachyReferencedDoseReferenceSeq',\n    x300c0060: 'ReferencedStructureSetSequence',\n    x300c006a: 'ReferencedPatientSetupNumber',\n    x300c0080: 'ReferencedDoseSequence',\n    x300c00a0: 'ReferencedToleranceTableNumber',\n    x300c00b0: 'ReferencedBolusSequence',\n    x300c00c0: 'ReferencedWedgeNumber',\n    x300c00d0: 'ReferencedCompensatorNumber',\n    x300c00e0: 'ReferencedBlockNumber',\n    x300c00f0: 'ReferencedControlPointIndex',\n    x300c00f2: 'ReferencedControlPointSequence',\n    x300c00f4: 'ReferencedStartControlPointIndex',\n    x300c00f6: 'ReferencedStopControlPointIndex',\n    x300c0100: 'ReferencedRangeShifterNumber',\n    x300c0102: 'ReferencedLateralSpreadingDevNum',\n    x300c0104: 'ReferencedRangeModulatorNumber',\n    x300e0002: 'ApprovalStatus',\n    x300e0004: 'ReviewDate',\n    x300e0005: 'ReviewTime',\n    x300e0008: 'ReviewerName',\n    x40000000: 'TextGroupLength',\n    x40000010: 'Arbitrary',\n    x40004000: 'TextComments',\n    x40080040: 'ResultsID',\n    x40080042: 'ResultsIDIssuer',\n    x40080050: 'ReferencedInterpretationSequence',\n    x40080100: 'InterpretationRecordedDate',\n    x40080101: 'InterpretationRecordedTime',\n    x40080102: 'InterpretationRecorder',\n    x40080103: 'ReferenceToRecordedSound',\n    x40080108: 'InterpretationTranscriptionDate',\n    x40080109: 'InterpretationTranscriptionTime',\n    x4008010a: 'InterpretationTranscriber',\n    x4008010b: 'InterpretationText',\n    x4008010c: 'InterpretationAuthor',\n    x40080111: 'InterpretationApproverSequence',\n    x40080112: 'InterpretationApprovalDate',\n    x40080113: 'InterpretationApprovalTime',\n    x40080114: 'PhysicianApprovingInterpretation',\n    x40080115: 'InterpretationDiagnosisDescription',\n    x40080117: 'InterpretationDiagnosisCodeSeq',\n    x40080118: 'ResultsDistributionListSequence',\n    x40080119: 'DistributionName',\n    x4008011a: 'DistributionAddress',\n    x40080200: 'InterpretationID',\n    x40080202: 'InterpretationIDIssuer',\n    x40080210: 'InterpretationTypeID',\n    x40080212: 'InterpretationStatusID',\n    x40080300: 'Impressions',\n    x40084000: 'ResultsComments',\n    x4ffe0001: 'MACParametersSequence',\n    x50xx0005: 'CurveDimensions',\n    x50xx0010: 'NumberOfPoints',\n    x50xx0020: 'TypeOfData',\n    x50xx0022: 'CurveDescription',\n    x50xx0030: 'AxisUnits',\n    x50xx0040: 'AxisLabels',\n    x50xx0103: 'DataValueRepresentation',\n    x50xx0104: 'MinimumCoordinateValue',\n    x50xx0105: 'MaximumCoordinateValue',\n    x50xx0106: 'CurveRange',\n    x50xx0110: 'CurveDataDescriptor',\n    x50xx0112: 'CoordinateStartValue',\n    x50xx0114: 'CoordinateStepValue',\n    x50xx1001: 'CurveActivationLayer',\n    x50xx2000: 'AudioType',\n    x50xx2002: 'AudioSampleFormat',\n    x50xx2004: 'NumberOfChannels',\n    x50xx2006: 'NumberOfSamples',\n    x50xx2008: 'SampleRate',\n    x50xx200a: 'TotalTime',\n    x50xx200c: 'AudioSampleData',\n    x50xx200e: 'AudioComments',\n    x50xx2500: 'CurveLabel',\n    x50xx2600: 'CurveReferencedOverlaySequence',\n    x50xx2610: 'ReferencedOverlayGroup',\n    x50xx3000: 'CurveData',\n    x52009229: 'SharedFunctionalGroupsSequence',\n    x52009230: 'PerFrameFunctionalGroupsSequence',\n    x54000100: 'WaveformSequence',\n    x54000110: 'ChannelMinimumValue',\n    x54000112: 'ChannelMaximumValue',\n    x54001004: 'WaveformBitsAllocated',\n    x54001006: 'WaveformSampleInterpretation',\n    x5400100a: 'WaveformPaddingValue',\n    x54001010: 'WaveformData',\n    x56000010: 'FirstOrderPhaseCorrectionAngle',\n    x56000020: 'SpectroscopyData',\n    x60000000: 'OverlayGroupLength',\n    x60xx0010: 'OverlayRows',\n    x60xx0011: 'OverlayColumns',\n    x60xx0012: 'OverlayPlanes',\n    x60xx0015: 'NumberOfFramesInOverlay',\n    x60xx0022: 'OverlayDescription',\n    x60xx0040: 'OverlayType',\n    x60xx0045: 'OverlaySubtype',\n    x60xx0050: 'OverlayOrigin',\n    x60xx0051: 'ImageFrameOrigin',\n    x60xx0052: 'OverlayPlaneOrigin',\n    x60xx0060: 'OverlayCompressionCode',\n    x60xx0061: 'OverlayCompressionOriginator',\n    x60xx0062: 'OverlayCompressionLabel',\n    x60xx0063: 'OverlayCompressionDescription',\n    x60xx0066: 'OverlayCompressionStepPointers',\n    x60xx0068: 'OverlayRepeatInterval',\n    x60xx0069: 'OverlayBitsGrouped',\n    x60xx0100: 'OverlayBitsAllocated',\n    x60xx0102: 'OverlayBitPosition',\n    x60xx0110: 'OverlayFormat',\n    x60xx0200: 'OverlayLocation',\n    x60xx0800: 'OverlayCodeLabel',\n    x60xx0802: 'OverlayNumberOfTables',\n    x60xx0803: 'OverlayCodeTableLocation',\n    x60xx0804: 'OverlayBitsForCodeWord',\n    x60xx1001: 'OverlayActivationLayer',\n    x60xx1100: 'OverlayDescriptorGray',\n    x60xx1101: 'OverlayDescriptorRed',\n    x60xx1102: 'OverlayDescriptorGreen',\n    x60xx1103: 'OverlayDescriptorBlue',\n    x60xx1200: 'OverlaysGray',\n    x60xx1201: 'OverlaysRed',\n    x60xx1202: 'OverlaysGreen',\n    x60xx1203: 'OverlaysBlue',\n    x60xx1301: 'ROIArea',\n    x60xx1302: 'ROIMean',\n    x60xx1303: 'ROIStandardDeviation',\n    x60xx1500: 'OverlayLabel',\n    x60xx3000: 'OverlayData',\n    x60xx4000: 'OverlayComments',\n    x7fxx0000: 'PixelDataGroupLength',\n    x7fxx0010: 'PixelData',\n    x7fxx0011: 'VariableNextDataGroup',\n    x7fxx0020: 'VariableCoefficientsSDVN',\n    x7fxx0030: 'VariableCoefficientsSDHN',\n    x7fxx0040: 'VariableCoefficientsSDDN',\n    xfffafffa: 'DigitalSignaturesSequence',\n    xfffcfffc: 'DataSetTrailingPadding',\n    xfffee000: 'StartOfItem',\n    xfffee00d: 'EndOfItems',\n    xfffee0dd: 'EndOfSequence'\n};\n\nDICOMTagDescriptions.init(initialTagDescriptionMap);\n\n// Discard original map...\ninitialTagDescriptionMap = null;\n\nexport { DICOMTagDescriptions };\n","import { OHIF } from 'meteor/ohif:core';\nimport { getImageId } from './getImageId';\nimport { OHIFError } from './classes/OHIFError';\n\nlet stackMap = {};\nlet configuration = {};\nconst stackUpdatedCallbacks = [];\n\n/**\n * Loop through the current series and add metadata to the\n * Cornerstone meta data provider. This will be used to fill information\n * into the viewport overlays, and to calculate reference lines and orientation markers\n * @param  {Object} stackMap              stackMap object\n * @param  {Object} study                 Study object\n * @param  {Object} displaySet            The set of images to make the stack from\n * @return {Array}                        Array with image IDs\n */\nfunction createAndAddStack(stackMap, study, displaySet) {\n    const metadataProvider = OHIF.viewer.metadataProvider;\n    const numImages = displaySet.images.length;\n    const imageIds = [];\n    let imageId;\n\n    displaySet.images.forEach((instance, imageIndex) => {\n        const image = instance.getData();\n        const metaData = {\n            instance: image, // in this context, instance will be the data of the InstanceMetadata object...\n            series: displaySet, // TODO: Check this\n            study,\n            numImages,\n            imageIndex: imageIndex + 1\n        };\n\n        const numberOfFrames = image.numberOfFrames;\n        if (numberOfFrames > 1) {\n            OHIF.log.info('Multiframe image detected');\n            for (let i = 0; i < numberOfFrames; i++) {\n                metaData.frame = i;\n                imageId = getImageId(image, i);\n                imageIds.push(imageId);\n                metadataProvider.addMetadata(imageId, metaData);\n            }\n        } else {\n            imageId = getImageId(image);\n            imageIds.push(imageId);\n            metadataProvider.addMetadata(imageId, metaData);\n        }\n    });\n\n    const stack = {\n        displaySetInstanceUid: displaySet.displaySetInstanceUid,\n        imageIds,\n        frameRate: displaySet.frameRate,\n        isClip: displaySet.isClip\n    };\n\n    stackMap[displaySet.displaySetInstanceUid] = stack;\n\n    return stack;\n}\n\nconfiguration = {\n    createAndAddStack\n};\n\n/**\n * This object contains all the functions needed for interacting with the stack manager.\n * Generally, findStack is the only function used. If you want to know when new stacks\n * come in, you can register a callback with addStackUpdatedCallback.\n */\nconst StackManager = {\n    /**\n     * Removes all current stacks\n     */\n    clearStacks() {\n        stackMap = {};\n    },\n    /**\n     * Create a stack from an image set, as well as add in the metadata on a per image bases.\n     * @param study The study who's metadata will be added\n     * @param displaySet The set of images to make the stack from\n     * @return {Array} Array with image IDs\n     */\n    makeAndAddStack(study, displaySet) {\n        return configuration.createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks);\n    },\n    /**\n     * Find a stack from the currently created stacks.\n     * @param displaySetInstanceUid The UID of the stack to find.\n     * @returns {*} undefined if not found, otherwise the stack object is returned.\n     */\n    findStack(displaySetInstanceUid) {\n        return stackMap[displaySetInstanceUid];\n    },\n    /**\n     * Find a stack or reate one if it has not been created yet\n     * @param study The study who's metadata will be added\n     * @param displaySet The set of images to make the stack from\n     * @return {Array} Array with image IDs\n     */\n    findOrCreateStack(study, displaySet) {\n        let stack = this.findStack(displaySet.displaySetInstanceUid);\n\n        if (!stack || !stack.imageIds) {\n            stack = this.makeAndAddStack(study, displaySet);\n        }\n\n        return stack;\n    },\n    /**\n     * Gets the underlying map of displaySetInstanceUid to stack object.\n     * WARNING: Do not change this object. It directly affects the manager.\n     * @returns {{}} map of displaySetInstanceUid -> stack.\n     */\n    getAllStacks() {\n        return stackMap;\n    },\n    /**\n     * Adds in a callback to be called on a stack being added / updated.\n     * @param callback must accept at minimum one argument,\n     * which is the stack that was added / updated.\n     */\n    addStackUpdatedCallback(callback) {\n        if (typeof callback !== 'function') {\n            throw new OHIFError('callback must be provided as a function');\n        }\n        stackUpdatedCallbacks.push(callback);\n    },\n    /**\n     * Return configuration\n     */\n    getConfiguration() {\n        return configuration;\n    },\n    /**\n     * Set configuration, in order to provide compatibility\n     * with other systems by overriding this functions\n     * @param {Object} config object with functions to be overrided\n     *\n     * For now, only makeAndAddStack can be overrided\n     */\n    setConfiguration(config) {\n        configuration = config;\n    }\n};\n\nexport { StackManager };\n","import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { Tracker } from 'meteor/tracker';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone } from 'meteor/ohif:cornerstone';\nimport { viewportUtils } from './viewportUtils';\n\nconst WL_PRESET_CUSTOM = 'Custom';\nconst WL_PRESET_DEFAULT = 'Default';\nconst WL_STORAGE_KEY = `WindowLevelPresetsDefinitions`;\n\nOHIF.viewer.defaultWLPresets = {\n    0: {\n        id: 'SoftTissue',\n        wc: 40,\n        ww: 400\n    },\n    1: {\n        id: 'Lung',\n        wc: -600,\n        ww: 1500\n    },\n    2: {\n        id: 'Liver',\n        wc: 90,\n        ww: 150\n    },\n    3: {\n        id: 'Bone',\n        wc: 480,\n        ww: 2500\n    },\n    4: {\n        id: 'Brain',\n        wc: 40,\n        ww: 80\n    },\n    5: {},\n    6: {},\n    7: {},\n    8: {},\n    9: {}\n};\n\nclass WindowLevelPresetsManager {\n    constructor() {\n        this.defaults = {};\n        this.retrieveFunction = null;\n        this.storeFunction = null;\n        this.changeObserver = new Tracker.Dependency();\n    }\n\n    setRetrieveFunction(retrieveFunction) {\n        this.retrieveFunction = retrieveFunction;\n    }\n\n    setStoreFunction(storeFunction) {\n        this.storeFunction = storeFunction;\n    }\n\n    updateElementWLPresetData(element) {\n        const wlPresetData = cornerstone.getElementData(element, 'wlPreset');\n        const enabledElement = cornerstone.getEnabledElement(element);\n        const { viewport, image } = enabledElement;\n        const { windowCenter, windowWidth } = viewport.voi;\n        let preset, presetName;\n\n        if (windowWidth === image.windowWidth && windowCenter === image.windowCenter) {\n            presetName = WL_PRESET_DEFAULT;\n        } else {\n            const WLPresets = OHIF.viewer.wlPresets;\n            for (let index in WLPresets) {\n                if (!WLPresets.hasOwnProperty(index)) continue;\n                const currentPreset = WLPresets[index];\n                if (windowCenter === currentPreset.wc && windowWidth === currentPreset.ww) {\n                    preset = currentPreset;\n                    presetName = preset.id;\n                    break;\n                }\n            }\n        }\n\n        wlPresetData.name = presetName || WL_PRESET_CUSTOM;\n        wlPresetData.ww = windowWidth;\n        wlPresetData.wc = windowCenter;\n\n        if (wlPresetData.name === WL_PRESET_CUSTOM) {\n            const custom = wlPresetData.custom || (wlPresetData.custom = Object.create(null));\n            custom.ww = windowWidth;\n            custom.wc = windowCenter;\n        }\n    }\n\n    /**\n     * Set specified W/L preset on given element on fallback to default W/L preset if the specified preset is not valid.\n     * @param {String} presetName The desired W/L preset to be applied\n     * @param {DOMElement} element An enabled viewport DOM Element.\n     */\n    applyWLPreset(presetName, element) {\n        const wlPresets = OHIF.viewer.wlPresets;\n        const wlPresetData = cornerstone.getElementData(element, 'wlPreset');\n        const viewport = cornerstone.getViewport(element);\n\n        const preset = wlPresets[presetName] || _.findWhere(wlPresets, { id: presetName });\n        if (presetName === WL_PRESET_CUSTOM && wlPresetData.custom) {\n            viewport.voi.windowWidth = wlPresetData.custom.ww;\n            viewport.voi.windowCenter = wlPresetData.custom.wc;\n        } else if (preset && !_.isEmpty(preset) && preset.id) {\n            presetName = preset.id;\n            viewport.voi.windowWidth = preset.ww;\n            viewport.voi.windowCenter = preset.wc;\n        } else {\n            const enabledElement = cornerstone.getEnabledElement(element);\n            viewport.voi.windowWidth = enabledElement.image.windowWidth;\n            viewport.voi.windowCenter = enabledElement.image.windowCenter;\n            presetName = WL_PRESET_DEFAULT;\n        }\n\n        wlPresetData.name = presetName;\n        wlPresetData.ww = viewport.voi.windowWidth;\n        wlPresetData.wc = viewport.voi.windowCenter;\n\n        // Update the viewport\n        cornerstone.setViewport(element, viewport);\n\n        OHIF.log.info('WLPresets::Applying WL Preset: ' + presetName);\n\n        // Notify other components about W/L Preset changes\n        Session.set('OHIFWlPresetApplied', presetName);\n    }\n\n    store(wlPresets) {\n        return new Promise((resolve, reject) => {\n            if (this.storeFunction) {\n                this.storeFunction.call(this, WL_STORAGE_KEY, wlPresets).then(resolve).catch(reject);\n            } else if (Meteor.userId()) {\n                OHIF.user.setData(WL_STORAGE_KEY, wlPresets).then(resolve).catch(reject);\n            } else {\n                Session.setPersistent(WL_STORAGE_KEY, wlPresets);\n                resolve();\n            }\n        }).then(() => this.setOHIFWLPresets.call(this, wlPresets));\n    }\n\n    retrieve() {\n        return new Promise((resolve, reject) => {\n            if (this.retrieveFunction) {\n                this.retrieveFunction.call(this).then(resolve).catch(reject);\n            } else if (OHIF.user) {\n                try {\n                    resolve(OHIF.user.getData(WL_STORAGE_KEY));\n                } catch(error) {\n                    reject(error);\n                }\n            } else {\n                resolve(Session.get(WL_STORAGE_KEY));\n            }\n        });\n    }\n\n    load() {\n        return new Promise((resolve, reject) => {\n            this.retrieve().then(wlPresets => {\n                if (wlPresets) {\n                    this.setOHIFWLPresets.call(this, wlPresets);\n                } else {\n                    this.loadDefaults.call(this);\n                }\n            }).catch(() => this.loadDefaults.call(this));\n        });\n    }\n\n    applyWLPresetToActiveElement(presetName) {\n        const element = viewportUtils.getActiveViewportElement();\n        if (!element) {\n            return;\n        }\n\n        this.applyWLPreset(presetName, element);\n    }\n\n    /**\n     * Overrides OHIF's wlPresets\n     * @param  {Object} wlPresets Object with wlPresets mapping\n     */\n    setOHIFWLPresets(wlPresets) {\n        const hasOwn = Object.prototype.hasOwnProperty;\n        const presetMap = Object.create(null); // Objects without prototype have much faster lookup times\n        for (let index in wlPresets) {\n            if (hasOwn.call(wlPresets, index)) {\n                presetMap[index] = wlPresets[index];\n            }\n        }\n\n        OHIF.viewer.wlPresets = presetMap;\n        this.changeObserver.changed();\n    }\n\n    loadDefaults() {\n        this.setOHIFWLPresets(OHIF.viewer.defaultWLPresets);\n    }\n\n    resetDefaults() {\n        return this.store(OHIF.viewer.defaultWLPresets);\n    }\n}\n\n/**\n * Export functions inside WLPresets namespace.\n */\nconst WLPresets = new WindowLevelPresetsManager();\n\nMeteor.startup(() => {\n    WLPresets.loadDefaults();\n    WLPresets.load();\n});\n\nexport { WLPresets };\n","import { viewportUtils } from './viewportUtils';\n\nconst getTextCallback = doneChangingTextCallback => {\n    // This handles the text entry for the annotation tool\n    const keyPressHandler = e => {\n        // If Enter or Esc are pressed, close the dialog\n        if (e.which === 13 || e.which === 27) {\n            closeHandler();\n        }\n    };\n\n    const closeHandler = () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(getTextInput.val());\n        // Reset the text value\n        getTextInput.val('');\n\n        // Reset the focus to the active viewport element\n        // This makes the mobile Safari keyboard close\n        const element = viewportUtils.getActiveViewportElement();\n        $(element).focus();\n    };\n\n    const dialog = $('#annotationDialog');\n    if (dialog.get(0).open === true) {\n        return;\n    }\n\n    const getTextInput = $('.annotationTextInput');\n\n    // Focus on the text input to open the Safari keyboard\n    getTextInput.focus();\n\n    dialog.get(0).showModal();\n\n    const confirm = dialog.find('.annotationDialogConfirm');\n    confirm.off('click');\n    confirm.on('click', () => {\n        closeHandler();\n    });\n\n    // Use keydown since keypress doesn't handle ESC in Chrome\n    dialog.off('keydown');\n    dialog.on('keydown', keyPressHandler);\n};\n\nconst changeTextCallback = (data, eventData, doneChangingTextCallback) => {\n    const dialog = $('#relabelAnnotationDialog');\n    if (dialog.get(0).open === true) {\n        return;\n    }\n\n    // Is necessary to use Blaze object to not create \n    // circular depencency with helper object (./helpers)\n    if (Blaze._globalHelpers.isTouchDevice()) {\n        // Center the dialog on screen on touch devices\n        dialog.css({\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            margin: 'auto'\n        });\n    } else {\n        // Place the dialog above the tool that is being relabelled\n        dialog.css({\n            top: eventData.currentPoints.page.y - dialog.outerHeight() - 20,\n            left: eventData.currentPoints.page.x - dialog.outerWidth() / 2\n        });\n    }\n\n    const getTextInput = dialog.find('.annotationTextInput');\n    const confirm = dialog.find('.relabelConfirm');\n    const remove = dialog.find('.relabelRemove');\n\n    getTextInput.val(data.text);\n\n    // Focus on the text input to open the Safari keyboard\n    getTextInput.focus();\n\n    dialog.get(0).showModal();\n\n    confirm.off('click');\n    confirm.on('click', () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(data, getTextInput.val());\n    });\n\n    // If the remove button is clicked, delete this marker\n    remove.off('click');\n    remove.on('click', () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(data, undefined, true);\n    });\n\n    dialog.off('keydown');\n    dialog.on('keydown', keyPressHandler);\n\n    const keyPressHandler = e => {\n        // If Enter is pressed, close the dialog\n        if (e.which === 13) {\n            closeHandler();\n        }\n    };\n\n    const closeHandler = () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(data, getTextInput.val());\n        // Reset the text value\n        getTextInput.val('');\n\n        // Reset the focus to the active viewport element\n        // This makes the mobile Safari keyboard close\n        const element = viewportUtils.getActiveViewportElement();\n        $(element).focus();\n    };\n};\n\nconst annotateTextUtils = {\n    getTextCallback,\n    changeTextCallback\n};\n\nexport { annotateTextUtils };","import { Meteor } from 'meteor/meteor';\nimport { ImageSet } from './classes/ImageSet';\nimport { isImage } from './isImage';\nimport { OHIF } from 'meteor/ohif:core';\n\nconst isMultiFrame = instance => {\n    // NumberOfFrames (0028,0008)\n    return instance.getRawValue('x00280008') > 1;\n};\n\nconst makeDisplaySet = (series, instances) => {\n    const instance = instances[0];\n\n    const imageSet = new ImageSet(instances);\n    const seriesData = series.getData();\n\n    // set appropriate attributes to image set...\n    imageSet.setAttributes({\n        displaySetInstanceUid: imageSet.uid, // create a local alias for the imageSet UID\n        seriesDate: seriesData.seriesDate,\n        seriesTime: seriesData.seriesTime,\n        seriesInstanceUid: series.getSeriesInstanceUID(),\n        seriesNumber: instance.getRawValue('x00200011'),\n        seriesDescription: instance.getRawValue('x0008103e'),\n        numImageFrames: instances.length,\n        frameRate: instance.getRawValue('x00181063'),\n        modality: instance.getRawValue('x00080060'),\n        isMultiFrame: isMultiFrame(instance)\n    });\n\n    // Sort the images in this series if needed\n    const shallSort = !OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\n    if (shallSort) {\n        imageSet.sortBy((a, b) => {\n            // Sort by InstanceNumber (0020,0013)\n            return (parseInt(a.getRawValue('x00200013', 0)) || 0) - (parseInt(b.getRawValue('x00200013', 0)) || 0);\n        });\n    }\n\n    // Include the first image instance number (after sorted)\n    imageSet.setAttribute('instanceNumber', imageSet.getImage(0).getRawValue('x00200013'));\n\n    return imageSet;\n};\n\nconst isSingleImageModality = modality => {\n    return (modality === 'CR' ||\n            modality === 'MG' ||\n            modality === 'DX');\n};\n\n/**\n * Creates a set of series to be placed in the Study Metadata\n * The series that appear in the Study Metadata must represent\n * imaging modalities.\n *\n * Furthermore, for drag/drop functionality,\n * it is easiest if the stack objects also contain information about\n * which study they are linked to.\n *\n * @param study The study instance metadata to be used\n * @returns {Array} An array of series to be placed in the Study Metadata\n */\nconst createStacks = study => {\n    // Define an empty array of display sets\n    const displaySets = [];\n\n    if (!study || !study.getSeriesCount()) {\n        return displaySets;\n    }\n\n    // Loop through the series (SeriesMetadata)\n    study.forEachSeries(series => {\n        // If the series has no instances, skip it\n        if (!series.getInstanceCount()) {\n            return;\n        }\n\n        // Search through the instances (InstanceMedatada object) of this series\n        // Split Multi-frame instances and Single-image modalities\n        // into their own specific display sets. Place the rest of each\n        // series into another display set.\n        const stackableInstances = [];\n        series.forEachInstance(instance => {\n            // All imaging modalities must have a valid value for sopClassUid (x00080016) or rows (x00280010)\n            if (!isImage(instance.getRawValue('x00080016')) && !instance.getRawValue('x00280010')) {\n                return;\n            }\n\n            let displaySet;\n            if (isMultiFrame(instance)) {\n                displaySet = makeDisplaySet(series, [ instance ]);\n                displaySet.setAttributes({\n                    isClip: true,\n                    studyInstanceUid: study.getStudyInstanceUID(), // Include the study instance Uid for drag/drop purposes\n                    numImageFrames: instance.getRawValue('x00280008'), // Override the default value of instances.length\n                    instanceNumber: instance.getRawValue('x00200013'), // Include the instance number\n                    acquisitionDatetime: instance.getRawValue('x0008002a') // Include the acquisition datetime\n                });\n                displaySets.push(displaySet);\n            } else if (isSingleImageModality(instance.modality)) {\n                displaySet = makeDisplaySet(series, [ instance ]);\n                displaySet.setAttributes({\n                    studyInstanceUid: study.getStudyInstanceUID(), // Include the study instance Uid\n                    instanceNumber: instance.getRawValue('x00200013'), // Include the instance number\n                    acquisitionDatetime: instance.getRawValue('x0008002a') // Include the acquisition datetime\n                });\n                displaySets.push(displaySet);\n            } else {\n                stackableInstances.push(instance);\n            }\n        });\n\n        if (stackableInstances.length) {\n            const displaySet = makeDisplaySet(series, stackableInstances);\n            displaySet.setAttribute('studyInstanceUid', study.getStudyInstanceUID());\n            displaySets.push(displaySet);\n        }\n    });\n\n    return displaySets;\n};\n\n/**\n * Expose \"createStacks\"...\n */\n\nexport { createStacks };\n","\nexport const crosshairsSynchronizers = {\n    synchronizers: {}\n};\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(function() {\n    var debug = false;\n\n    if (debug === true) {\n        // http://www.meteorpedia.com/read/Debugging_Reactivity\n\n        Meteor.autorun(function(computation) {\n            computation.onInvalidate(function() {\n                console.trace();\n            });\n        });\n\n        var wrappedFind = Meteor.Collection.prototype.find;\n\n        Meteor.Collection.prototype.find = function() {\n            var cursor = wrappedFind.apply(this, arguments);\n            var collectionName = this._name || this._debugName;\n\n            /*cursor.observeChanges({\n                added: function(id, fields) {\n                    console.log(collectionName, 'added', id, fields);\n                },\n                changed: function(id, fields) {\n                    console.log(collectionName, 'changed', id, fields);\n                },\n                movedBefore: function(id, before) {\n                 console.log(collectionName, 'movedBefore', id, before);\n                 },\n                removed: function(id) {\n                    console.log(collectionName, 'removed', id);\n                }\n            });*/\n\n            cursor.observe({\n                added: function(data) {\n                    console.log(collectionName, 'added', data);\n                },\n                changed: function(data) {\n                    console.log(collectionName, 'changed', data);\n                },\n                removed: function(data) {\n                    console.log(collectionName, 'removed', data);\n                }\n            });\n\n            return cursor;\n        };\n\n        function logRenders() {\n            Object.keys(Template).forEach(function(name) {\n                if (name.indexOf('_') > -1) {\n                    return;\n                }\n\n                var template = Template[name];\n                var oldRender = template.rendered;\n                var counter = 0;\n\n                template.rendered = function() {\n                    console.log(name, 'render count: ', ++counter);\n                    oldRender && oldRender.apply(this, arguments);\n                };\n            });\n        }\n\n        logRenders();\n    }\n});\n","import { Blaze } from 'meteor/blaze';\nimport { Template } from 'meteor/templating';\nimport { $ } from 'meteor/jquery';\n\nimport { setFocusToActiveViewport } from './setFocusToActiveViewport';\n\nlet doneCallbackFunction;\n\n/**\n * Removes the backdrop abd closes opened dialog\n * and focus to the active viewport. If a done callback is set, \n * it's called before\n * @param  {Boolean} runCallback Indicate if callback function needs to be called. Default: true\n */\nconst closeHandler = (runCallback = true) => {\n    // Check if callback function exists\n    if (runCallback && typeof doneCallbackFunction === 'function') {\n        doneCallbackFunction();\n    }\n\n    // Hide the lesion dialog\n    $('#confirmDeleteDialog').css('display', 'none');\n\n    // Remove the backdrop\n    $('.removableBackdrop').remove();\n\n    // Remove the callback\n    doneCallbackFunction = undefined;\n\n    // Restore the focus to the active viewport\n    setFocusToActiveViewport();\n};\n\n/**\n * Displays the confirmation dialog template and the removable backdrop element\n *\n * @param doneCallback A callback\n * @param options\n */\nconst showConfirmDialog = (doneCallback, options) => {\n    // Show the backdrop\n    options = options || {};\n    Blaze.renderWithData(Template.removableBackdrop, options, document.body);\n\n    let confirmDeleteDialog = $('#confirmDeleteDialog');\n    confirmDeleteDialog.remove();\n\n    const viewer = document.getElementById('viewer');\n    Blaze.renderWithData(Template.confirmDeleteDialog, options, viewer);\n\n    // Make sure the context menu is closed when the user clicks away\n    $('.removableBackdrop').one('mousedown touchstart', () => {\n        // Close dialog without calling callback\n        closeHandler(false);\n    });\n\n    confirmDeleteDialog = $('#confirmDeleteDialog');\n    confirmDeleteDialog.css('display', 'block');\n    confirmDeleteDialog.focus();\n\n    // If callback function is defined, save it for closeHandler\n    if (doneCallback && typeof doneCallback === 'function') {\n        doneCallbackFunction = doneCallback;\n    }\n};\n\nconst dialogUtils = {\n    showConfirmDialog,\n    closeHandler\n};\n\nexport { dialogUtils };","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * This function disables reference lines for a specific viewport element.\n * It also enables reference lines for all other viewports with the\n * class .imageViewerViewport.\n *\n * @param element {node} DOM Node representing the viewport element\n */\nexport function displayReferenceLines(element) {\n\n    // Check if image plane (orientation / loction) data is present for the current image\n    const enabledElement = cornerstone.getEnabledElement(element);\n\n    // Check if element is already enabled and it's image was rendered\n    if(!enabledElement || !enabledElement.image) {\n        OHIF.log.info('displayReferenceLines enabled element is undefined or it\\'s image is not rendered');\n        return;\n    }\n\n    const imageId = enabledElement.image.imageId;\n    const imagePlane = cornerstone.metaData.get('imagePlane', imageId);\n\n    // Disable reference lines for the current element\n    cornerstoneTools.referenceLines.tool.disable(element);\n\n    if (!OHIF.viewer.refLinesEnabled || !imagePlane || !imagePlane.frameOfReferenceUID) {\n        OHIF.log.info('displayReferenceLines refLinesEnabled is not enabled, no imagePlane or no frameOfReferenceUID');\n        return;\n    }\n\n    OHIF.log.info(`displayReferenceLines for image with id: ${imageId}`);\n\n    // Loop through all other viewport elements and enable reference lines\n    $('.imageViewerViewport').not(element).each((index, viewportElement) => {\n        let imageId;\n        if($(viewportElement).find('canvas').length) {\n            try {\n                const enabledElement = cornerstone.getEnabledElement(viewportElement);\n                imageId = enabledElement.image.imageId;\n            } catch(error) {\n                return;\n            }\n\n            if (!imageId) {\n                return;\n            }\n\n            cornerstoneTools.referenceLines.tool.enable(viewportElement, OHIF.viewer.updateImageSynchronizer);\n        }\n    });\n}\n","import { $ } from 'meteor/jquery';\n\nexport function getElementIfNotEmpty(viewportIndex) {\n    // Meteor template helpers run more often than expected\n    // They often seem to run just before the whole template is rendered\n    // This meant that the onRendered event hadn't fired yet, so the\n    // element wasn't enabled / set empty yet. The check here\n    // for canvases under the 'enabled' element div is to prevent\n    // 'undefined' errors from the helper functions\n\n    var imageViewerViewports = $('.imageViewerViewport'),\n        element = imageViewerViewports.get(viewportIndex),\n        canvases = imageViewerViewports.eq(viewportIndex).find('canvas');\n\n    if (!element || $(element).hasClass('empty') || canvases.length === 0) {\n        return;\n    }\n\n    // Check to make sure the element is enabled.\n    try {\n        var enabledElement = cornerstone.getEnabledElement(element);\n    } catch(error) {\n        return;\n    }\n\n    return element;\n}\n","/**\n * Helper function to quickly obtain the frameOfReferenceUID\n * for a given element from the enabled image's metadata.\n * \n * If no image, imagePlane, or frameOfReferenceUID is available,\n * the function will return undefined.\n *\n * @param element\n * @returns {string}\n */\nexport function getFrameOfReferenceUID(element) {\n    var enabledElement;\n    try {\n        enabledElement = cornerstone.getEnabledElement(element);\n    } catch(error) {\n        return;\n    }\n    \n    if (!enabledElement || !enabledElement.image) {\n        return;\n    }\n\n    var imageId = enabledElement.image.imageId;\n    var imagePlane = cornerstone.metaData.get('imagePlane', imageId);\n    if (!imagePlane || !imagePlane.frameOfReferenceUID) {\n        return;\n    }\n\n    return imagePlane.frameOfReferenceUID;\n}\n","import { getWADORSImageId } from './getWADORSImageId';\n\n// https://stackoverflow.com/a/6021027/3895126\nfunction updateQueryStringParameter(uri, key, value) {\n    const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(regex)) {\n        return uri.replace(regex, '$1' + key + '=' + value + '$2');\n    } else {\n        return uri + separator + key + '=' + value;\n    }\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport function getImageId(instance, frame, thumbnail=false) {\n    if (!instance) {\n        return;\n    }\n\n    if (typeof instance.getImageId === 'function') {\n        return instance.getImageId();\n    }\n\n    if (instance.url) {\n        if (frame !== undefined) {\n            instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\n        }\n\n        return instance.url;\n    }\n\n    const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n    if (!instance[renderingAttr] || instance[renderingAttr] === 'wadouri' || !instance.wadorsuri) {\n        let imageId = 'dicomweb:' + instance.wadouri;\n        if (frame !== undefined) {\n            imageId += '&frame=' + frame;\n        }\n\n        return imageId;\n    } else {\n        return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\n    }\n}\n","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * Obtain an imageId for the given imagePath\n *\n * @param {String} imagePath Path containing study, series and instance UIDs and frame index\n * @returns {String} The resulting imageId for the given imagePath\n */\n\nexport const getImageIdForImagePath = (imagePath, thumbnail=false) => {\n    const [studyInstanceUid, seriesInstanceUid, sopInstanceUid, frameIndex] = imagePath.split('_');\n    const study = OHIF.viewer.Studies.findBy({ studyInstanceUid });\n    const studyMetadata = OHIF.viewerbase.getStudyMetadata(study);\n    const series = studyMetadata.getSeriesByUID(seriesInstanceUid);\n    const instance = series.getInstanceByUID(sopInstanceUid);\n    const imageId = OHIF.viewerbase.getImageId(instance, frameIndex, thumbnail);\n    return imageId;\n};\n","import { getElementIfNotEmpty } from './getElementIfNotEmpty.js';\n\nexport function getStackDataIfNotEmpty(viewportIndex) {\n    const element = getElementIfNotEmpty(viewportIndex);\n    if (!element) {\n        return;\n    }\n\n    const stackToolData = cornerstoneTools.getToolState(element, 'stack');\n    if (!stackToolData ||\n        !stackToolData.data ||\n        !stackToolData.data.length) {\n        return;\n    }\n\n    const stack = stackToolData.data[0];\n    if (!stack) {\n        return;\n    }\n\n    return stack;\n}\n","import { OHIF } from 'meteor/ohif:core';\n\nconst getStudyMetadata = study => {\n    let studyMetadata = study;\n    if (study && !(studyMetadata instanceof OHIF.viewerbase.metadata.StudyMetadata)) {\n        studyMetadata = new OHIF.metadata.StudyMetadata(study, study.studyInstanceUid);\n    }\n\n    return studyMetadata;\n};\n\nexport { getStudyMetadata };\n","import { OHIF } from 'meteor/ohif:core';\n\nimport { getWADORSImageUrl } from './getWADORSImageUrl';\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport function getWADORSImageId(instance, frame) {\n    const uri = getWADORSImageUrl(instance, frame);\n\n    if (!uri) {\n        return;\n    }\n\n    const imageId = `wadors:${uri}`;\n    OHIF.log.info('WADO-RS ImageID: ' + imageId);\n\n    return imageId;\n};\n","export function getWADORSImageUrl(instance, frame) {\n    let wadorsuri = instance.wadorsuri;\n\n    if (!wadorsuri) {\n        return;\n    }\n\n    // We need to sum 1 because WADO-RS frame number is 1-based\n    frame = (frame || 0) + 1;\n\n    // Replaces /frame/1 by /frame/{frame}\n    wadorsuri = wadorsuri.replace(/(%2Fframes%2F)(\\d+)/, `$1${frame}`);\n\n    return wadorsuri;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { toolManager } from './toolManager';\nimport { switchToImageRelative } from './switchToImageRelative';\nimport { switchToImageByIndex } from './switchToImageByIndex';\nimport { viewportUtils } from './viewportUtils';\nimport { panelNavigation } from './panelNavigation';\nimport { WLPresets } from './WLPresets';\n\n// TODO: add this to namespace definitions\nMeteor.startup(function() {\n    OHIF.viewer.loadIndicatorDelay = 200;\n    OHIF.viewer.defaultTool = 'wwwc';\n    OHIF.viewer.refLinesEnabled = true;\n    OHIF.viewer.isPlaying = {};\n    OHIF.viewer.cine = {\n        framesPerSecond: 24,\n        loop: true\n    };\n\n    OHIF.viewer.defaultHotkeys = {\n        // Tool hotkeys\n        defaultTool: 'ESC',\n        zoom: 'Z',\n        wwwc: 'W',\n        pan: 'P',\n        angle: 'A',\n        stackScroll: 'S',\n        magnify: 'M',\n        length: '',\n        annotate: '',\n        dragProbe: '',\n        ellipticalRoi: '',\n        rectangleRoi: '',\n\n        // Viewport hotkeys\n        flipH: 'H',\n        flipV: 'V',\n        rotateR: 'R',\n        rotateL: 'L',\n        invert: 'I',\n        zoomIn: '',\n        zoomOut: '',\n        zoomToFit: '',\n        resetViewport: '',\n        clearTools: '',\n\n        // Viewport navigation hotkeys\n        scrollDown: 'DOWN',\n        scrollUp: 'UP',\n        scrollLastImage: 'END',\n        scrollFirstImage: 'HOME',\n        previousDisplaySet: 'PAGEUP',\n        nextDisplaySet: 'PAGEDOWN',\n        nextPanel: 'RIGHT',\n        previousPanel: 'LEFT',\n\n        // Miscellaneous hotkeys\n        toggleOverlayTags: 'SHIFT',\n        toggleCinePlay: 'SPACE',\n        toggleCineDialog: '',\n        toggleDownloadDialog: '',\n\n        // Preset hotkeys\n        WLPreset0: '1',\n        WLPreset1: '2',\n        WLPreset2: '3',\n        WLPreset3: '4',\n        WLPreset4: '5',\n        WLPreset5: '6',\n        WLPreset6: '7',\n        WLPreset7: '8',\n        WLPreset8: '9',\n        WLPreset9: '0'\n    };\n\n    // For now\n    OHIF.viewer.hotkeys = OHIF.viewer.defaultHotkeys;\n\n    // Create commands context for viewer\n    const contextName = 'viewer';\n    OHIF.commands.createContext(contextName);\n\n    // Create a function that returns true if the active viewport is empty\n    const isActiveViewportEmpty = () => {\n        const activeViewport = Session.get('activeViewport') || 0;\n        return $('.imageViewerViewport').eq(activeViewport).hasClass('empty');\n    };\n\n    // Functions to register the tool switching commands\n    const registerToolCommands = map => _.each(map, (commandName, toolId) => {\n        OHIF.commands.register(contextName, toolId, {\n            name: commandName,\n            action: toolManager.setActiveTool,\n            params: toolId\n        });\n    });\n\n    // Register the default tool command\n    OHIF.commands.register(contextName, 'defaultTool', {\n        name: 'Default Tool',\n        action: () => toolManager.setActiveTool(toolManager.getDefaultTool())\n    });\n\n    // Register the tool switching commands\n    registerToolCommands({\n        wwwc: 'W/L',\n        zoom: 'Zoom',\n        angle: 'Angle Measurement',\n        dragProbe: 'Pixel Probe',\n        ellipticalRoi: 'Elliptical ROI',\n        rectangleRoi: 'Rectangle ROI',\n        magnify: 'Magnify',\n        annotate: 'Annotate',\n        stackScroll: 'Scroll Stack',\n        pan: 'Pan',\n        length: 'Length Measurement',\n        wwwcRegion: 'W/L by Region',\n        crosshairs: 'Crosshairs'\n    });\n\n    // Functions to register the viewport commands\n    const registerViewportCommands = map => _.each(map, (commandName, commandId) => {\n        OHIF.commands.register(contextName, commandId, {\n            name: commandName,\n            action: viewportUtils[commandId],\n            disabled: isActiveViewportEmpty\n        });\n    });\n\n    // Register the viewport commands\n    registerViewportCommands({\n        zoomIn: 'Zoom In',\n        zoomOut: 'Zoom Out',\n        zoomToFit: 'Zoom to Fit',\n        invert: 'Invert',\n        flipH: 'Flip Horizontally',\n        flipV: 'Flip Vertically',\n        rotateR: 'Rotate Right',\n        rotateL: 'Rotate Left',\n        resetViewport: 'Reset',\n        clearTools: 'Clear Tools'\n    });\n\n    // Register the preset switching commands\n    const applyPreset = presetName => WLPresets.applyWLPresetToActiveElement(presetName);\n    for (let i = 0; i < 10; i++) {\n        OHIF.commands.register(contextName, `WLPreset${i}`, {\n            name: `W/L Preset ${i + 1}`,\n            action: applyPreset,\n            params: i\n        });\n    }\n\n    // Check if display sets can be moved\n    const canMoveDisplaySets = isNext => {\n        if (!OHIF.viewerbase.layoutManager) {\n            return false;\n        } else {\n            return OHIF.viewerbase.layoutManager.canMoveDisplaySets(isNext);\n        }\n    };\n\n    // Register viewport navigation commands\n    OHIF.commands.set(contextName, {\n        scrollDown: {\n            name: 'Scroll Down',\n            action: () => !isActiveViewportEmpty() && switchToImageRelative(1)\n        },\n        scrollUp: {\n            name: 'Scroll Up',\n            action: () => !isActiveViewportEmpty() && switchToImageRelative(-1)\n        },\n        scrollFirstImage: {\n            name: 'Scroll to First Image',\n            action: () => !isActiveViewportEmpty() && switchToImageByIndex(0)\n        },\n        scrollLastImage: {\n            name: 'Scroll to Last Image',\n            action: () => !isActiveViewportEmpty() && switchToImageByIndex(-1)\n        },\n        previousDisplaySet: {\n            name: 'Previous Series',\n            action: () => OHIF.viewerbase.layoutManager.moveDisplaySets(false),\n            disabled: () => !canMoveDisplaySets(false)\n        },\n        nextDisplaySet: {\n            name: 'Next Series',\n            action: () => OHIF.viewerbase.layoutManager.moveDisplaySets(true),\n            disabled: () => !canMoveDisplaySets(true)\n        },\n        nextPanel: {\n            name: 'Next Panel',\n            action: () => panelNavigation.loadNextActivePanel()\n        },\n        previousPanel: {\n            name: 'Previous Panel',\n            action: () => panelNavigation.loadPreviousActivePanel()\n        }\n    }, true);\n\n    // Register miscellaneous commands\n    OHIF.commands.set(contextName, {\n        toggleOverlayTags: {\n            name: 'Toggle Image Annotations',\n            action() {\n                const $dicomTags = $('.imageViewerViewportOverlay .dicomTag');\n                $dicomTags.toggle($dicomTags.eq(0).css('display') === 'none');\n            }\n        },\n        toggleCinePlay: {\n            name: 'Play/Pause Cine',\n            action: viewportUtils.toggleCinePlay,\n            disabled: OHIF.viewerbase.viewportUtils.hasMultipleFrames\n        },\n        toggleCineDialog: {\n            name: 'Show/Hide Cine Controls',\n            action: viewportUtils.toggleCineDialog,\n            disabled: OHIF.viewerbase.viewportUtils.hasMultipleFrames\n        },\n        toggleDownloadDialog: {\n            name: 'Show/Hide Download Dialog',\n            action: viewportUtils.toggleDownloadDialog,\n            disabled: () => !viewportUtils.isDownloadEnabled()\n        }\n    }, true);\n\n    OHIF.viewer.hotkeyFunctions = {};\n\n    OHIF.viewer.loadedSeriesData = {};\n\n    // Enable hotkeys\n    hotkeyUtils.enableHotkeys();\n});\n\n// Define a jQuery reverse function\n$.fn.reverse = [].reverse;\n\n/**\n * Overrides OHIF's refLinesEnabled\n * @param  {Boolean} refLinesEnabled True to enable and False to disable\n */\nfunction setOHIFRefLines(refLinesEnabled) {\n    OHIF.viewer.refLinesEnabled = refLinesEnabled;\n}\n\n/**\n * Overrides OHIF's hotkeys\n * @param  {Object} hotkeys Object with hotkeys mapping\n */\nfunction setOHIFHotkeys(hotkeys) {\n    OHIF.viewer.hotkeys = hotkeys;\n}\n\n/**\n * Binds all hotkeys keydown events to the tasks defined in\n * OHIF.viewer.hotkeys or a given param\n * @param  {Object} hotkeys hotkey and task mapping (not required). If not given, uses OHIF.viewer.hotkeys\n */\nfunction enableHotkeys(hotkeys) {\n    const definitions = hotkeys || OHIF.viewer.hotkeys;\n    OHIF.hotkeys.set('viewer', definitions, true);\n    OHIF.context.set('viewer');\n}\n\n/**\n * Export functions inside hotkeyUtils namespace.\n */\n\nconst hotkeyUtils = {\n    setOHIFRefLines, /* @TODO: find a better place for this...  */\n    setOHIFHotkeys,\n    enableHotkeys\n};\n\nexport { hotkeyUtils };\n","\nexport const imageViewerViewportData = {\n    callbacks: {},\n    extendData() {\n      // No-Op function...\n    }\n};\n","\nconst  instanceClassViewportSettingsFunctions = {};\n\nconst getInstanceClassDefaultViewport = (series, enabledElement, imageId) => {\n    let instanceClass = series.sopClassUid;\n\n    if (!instanceClassViewportSettingsFunctions[instanceClass]) {\n        return;\n    }\n\n    return instanceClassViewportSettingsFunctions[instanceClass](series, enabledElement, imageId);\n};\n\nconst setInstanceClassDefaultViewportFunction = (instanceClass, fn) => {\n    instanceClassViewportSettingsFunctions[instanceClass] = fn;\n};\n\nexport { getInstanceClassDefaultViewport, setInstanceClassDefaultViewportFunction };\n","import { sopClassDictionary } from './sopClassDictionary';\n\n/**\n * Checks whether dicom files with specified SOP Class UID have image data\n * @param {string} sopClassUid - SOP Class UID to be checked\n * @returns {boolean} - true if it has image data\n */\nexport function isImage(sopClassUid) {\n    if (sopClassUid === sopClassDictionary.ComputedRadiographyImageStorage\n        || sopClassUid === sopClassDictionary.DigitalXRayImageStorageForPresentation\n        || sopClassUid === sopClassDictionary.DigitalXRayImageStorageForProcessing\n        || sopClassUid === sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation\n        || sopClassUid === sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing\n        || sopClassUid === sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation\n        || sopClassUid === sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing\n        || sopClassUid === sopClassDictionary.CTImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedCTImageStorage\n        || sopClassUid === sopClassDictionary.LegacyConvertedEnhancedCTImageStorage\n        || sopClassUid === sopClassDictionary.UltrasoundMultiframeImageStorage\n        || sopClassUid === sopClassDictionary.MRImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedMRImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedMRColorImageStorage\n        || sopClassUid === sopClassDictionary.LegacyConvertedEnhancedMRImageStorage\n        || sopClassUid === sopClassDictionary.UltrasoundImageStorage\n        || sopClassUid === sopClassDictionary.SecondaryCaptureImageStorage\n        || sopClassUid === sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage\n        || sopClassUid === sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage\n        || sopClassUid === sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage\n        || sopClassUid === sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage\n        || sopClassUid === sopClassDictionary.XRayAngiographicImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedXAImageStorage\n        || sopClassUid === sopClassDictionary.XRayRadiofluoroscopicImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedXRFImageStorage\n        || sopClassUid === sopClassDictionary.XRay3DAngiographicImageStorage\n        || sopClassUid === sopClassDictionary.XRay3DCraniofacialImageStorage\n        || sopClassUid === sopClassDictionary.BreastTomosynthesisImageStorage\n        || sopClassUid === sopClassDictionary.BreastProjectionXRayImageStorageForPresentation\n        || sopClassUid === sopClassDictionary.BreastProjectionXRayImageStorageForProcessing\n        || sopClassUid === sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation\n        || sopClassUid === sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing\n        || sopClassUid === sopClassDictionary.NuclearMedicineImageStorage\n        || sopClassUid === sopClassDictionary.VLEndoscopicImageStorage\n        || sopClassUid === sopClassDictionary.VideoEndoscopicImageStorage\n        || sopClassUid === sopClassDictionary.VLMicroscopicImageStorage\n        || sopClassUid === sopClassDictionary.VideoMicroscopicImageStorage\n        || sopClassUid === sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage\n        || sopClassUid === sopClassDictionary.VLPhotographicImageStorage\n        || sopClassUid === sopClassDictionary.VideoPhotographicImageStorage\n        || sopClassUid === sopClassDictionary.OphthalmicPhotography8BitImageStorage\n        || sopClassUid === sopClassDictionary.OphthalmicPhotography16BitImageStorage\n        || sopClassUid === sopClassDictionary.OphthalmicTomographyImageStorage\n        || sopClassUid === sopClassDictionary.VLWholeSlideMicroscopyImageStorage\n        || sopClassUid === sopClassDictionary.PositronEmissionTomographyImageStorage\n        || sopClassUid === sopClassDictionary.EnhancedPETImageStorage\n        || sopClassUid === sopClassDictionary.LegacyConvertedEnhancedPETImageStorage\n        || sopClassUid === sopClassDictionary.RTImageStorage) {\n        return true;\n    }\n\n    return false;\n}\n","import { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\nimport { setActiveViewport } from './setActiveViewport';\n\nconst loadPreviousActivePanel = () => {\n    OHIF.log.info('nextActivePanel');\n    let currentIndex = Session.get('activeViewport');\n    currentIndex--;\n\n    const $viewports = $('.imageViewerViewport');\n    const numViewports = $viewports.length;\n    if (currentIndex < 0) {\n        currentIndex = numViewports - 1;\n    }\n\n    const element = $viewports.get(currentIndex);\n    if (!element) {\n        return;\n    }\n\n    setActiveViewport(element);\n};\n\nconst loadNextActivePanel = () => {\n    OHIF.log.info('nextActivePanel');\n    let currentIndex = Session.get('activeViewport');\n    currentIndex++;\n\n    const $viewports = $('.imageViewerViewport');\n    const numViewports = $viewports.length;\n    if (currentIndex >= numViewports) {\n        currentIndex = 0;\n    }\n\n    const element = $viewports.get(currentIndex);\n    if (!element) {\n        return;\n    }\n\n    setActiveViewport(element);\n};\n\n/**\n * Export functions inside panelNavigation namespace.\n */\n\nconst panelNavigation = {\n    loadPreviousActivePanel,\n    loadNextActivePanel\n};\n\nexport { panelNavigation };\n","import { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\n\n/**\n * Prepare the studies data to render the viewer template\n *\n * @param {Array} studyInstanceUids List of studies that will be loaded into viewer\n * @param {Array} seriesInstanceUids List of series that will be loaded into viewer. If it is not defined, all series will be loaded\n * @param {String} timepointId ID of the current timepoint to get the studies from\n * @param {Object} timepointsFilter An object containing the filter to retrieve the timepoints\n * @return {Promise} Promise that will be resolved with the studies when the metadata is loaded\n */\nexport const prepareViewerData = ({ studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} }) => {\n    // Clear the cornerstone tool data to sync the measurements with the measurements API\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState({});\n\n    // Retrieve the studies metadata\n    const promise = new Promise((resolve, reject) => {\n        const processData = viewerData => {\n            OHIF.studies.retrieveStudiesMetadata(viewerData.studyInstanceUids, viewerData.seriesInstanceUids).then(studies => {\n                // Add additional metadata to our study from the studylist\n                studies.forEach(study => {\n                    const studylistStudy = OHIF.studylist.collections.Studies.findOne({\n                        studyInstanceUid: study.studyInstanceUid\n                    });\n\n                    if (!studylistStudy) {\n                        return;\n                    }\n\n                    Object.assign(study, studylistStudy);\n                });\n\n                resolve({\n                    studies,\n                    viewerData\n                });\n            }).catch(reject);\n        };\n\n        // Check if the studies are already given and ignore the timepoint ID if so\n        if (studyInstanceUids && studyInstanceUids.length) {\n            const viewerData = {\n                studyInstanceUids,\n                seriesInstanceUids,\n            };\n            processData(viewerData);\n        } else {\n            // Find the timepoint by ID and load the studies from it\n            OHIF.studylist.timepointApi.retrieveTimepoints(timepointsFilter).then(() => {\n                const viewerData = buildViewerDataFromTimepointId(timepointId);\n                processData(viewerData);\n            }).catch(reject);\n        }\n    });\n\n    return promise;\n};\n\nconst buildViewerDataFromTimepointId = timepointId => {\n    const timepoint = OHIF.studylist.timepointApi.timepoints.findOne({ timepointId });\n    if (!timepoint) {\n        throw new Error('Unable to find a time point with the given ID');\n    }\n\n    // Get the relevant studyInstanceUids given the timepoints\n    const data = getDataFromTimepoint(timepoint);\n    if (!data.studyInstanceUids) {\n        throw new Error('No studies found that are related to this timepoint');\n    }\n\n    // Build the viewer data and return it\n    return Object.assign(data, { currentTimepointId: timepointId });\n};\n\n/**\n * Retrieves related studies given a Baseline or Follow-up Timepoint\n *\n * @param {Object} timepoint A document from the Timepoints Collection\n * @returns {Object} An object containing the related studies UIDs and timepoint IDs\n */\nconst getDataFromTimepoint = timepoint => {\n    let relatedStudies = _.clone(timepoint.studyInstanceUids);\n\n    // If this is the baseline, we should stop here and return the relevant studies\n    if (isBaseline(timepoint)) {\n        return {\n            studyInstanceUids: relatedStudies,\n            timepointIds: [timepoint.timepointId]\n        };\n    }\n\n    // Otherwise, this is a follow-up exam, so we should also find the baseline timepoint,\n    // and all studies related to it. We also enforce that the Baseline should have a studyDate\n    // prior to the latest studyDate in the current (Follow-up) Timepoint.\n    const Timepoints = OHIF.studylist.timepointApi.timepoints;\n    const baseline = Timepoints.findOne({\n        timepointType: 'baseline',\n        patientId: timepoint.patientId,\n        latestDate: {\n            $lte: timepoint.latestDate\n        }\n    });\n\n    let timepointIds = [];\n    if (baseline) {\n        relatedStudies = relatedStudies.concat(baseline.studyInstanceUids);\n        timepointIds.push(baseline.timepointId);\n    } else {\n        OHIF.log.warn('No Baseline found while opening a Follow-up Timepoint');\n    }\n\n    const priorFilter = { latestDate: { $lt: timepoint.latestDate } };\n    const priorSorting = { sort: { latestDate: -1 } };\n    const prior = OHIF.studylist.timepointApi.timepoints.findOne(priorFilter, priorSorting);\n    if (prior && prior.timepointId !== baseline.timepointId) {\n        relatedStudies = relatedStudies.concat(prior.studyInstanceUids);\n        timepointIds.push(prior.timepointId);\n    }\n\n    relatedStudies = _.uniq(relatedStudies);\n\n    timepointIds.push(timepoint.timepointId);\n\n    return {\n        studyInstanceUids: relatedStudies,\n        timepointIds\n    };\n};\n\n/**\n * Checks if a Timepoints is a baseline or not\n *\n * @param {Object} timepoint A document from the Timepoints Collection\n * @returns {boolean} Whether or not the timepoint is stored as a Baseline\n */\nconst isBaseline = timepoint => timepoint.timepointType === 'baseline';\n","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * Render the viewer with the given routing context and parameters\n *\n * @param {Context} context Context of the router\n * @param {Object} params Parameters that will be used to prepare the viewer data\n */\nexport const renderViewer = (context, params, layoutTemplate='app') => {\n    // Wait until the viewer data is ready to render it\n    const promise = OHIF.viewerbase.prepareViewerData(params);\n\n    // Show loading state while preparing the viewer data\n    OHIF.ui.showDialog('dialogLoading', { promise });\n\n    // Render the viewer when the data is ready\n    promise.then(({ studies, viewerData }) => {\n        OHIF.viewer.data = viewerData;\n        context.render(layoutTemplate, {\n            data: {\n                template: 'viewer',\n                studies\n            }\n        });\n    }).catch(error => {\n        context.render(layoutTemplate, {\n            data: {\n                template: 'errorText',\n                error\n            }\n        });\n    });\n};\n","import { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { Random } from 'meteor/random';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport { StudyPrefetcher } from './classes/StudyPrefetcher';\nimport { displayReferenceLines } from './displayReferenceLines';\n\n/**\n * Sets a viewport element active\n * @param  {node} element DOM element to be activated or viewportIndex\n */\nexport function setActiveViewport(element) {\n    const $viewerports = $('.imageViewerViewport');\n\n    let viewportIndex;\n    if (typeof element === 'number') {\n        viewportIndex = element;\n    } else {\n        viewportIndex = $viewerports.index(element);\n    }\n\n    const $element = $viewerports.eq(viewportIndex);\n    if (!$element.length) {\n        OHIF.log.info('setActiveViewport element does not exist');\n        return;\n    }\n\n    OHIF.log.info(`setActiveViewport setting viewport index: ${viewportIndex}`);\n\n    // If viewport is not active\n    if (!$element.parents('.viewportContainer').hasClass('active')) {\n        // Trigger an event for compatibility with other systems\n        $element.trigger('OHIFBeforeActivateViewport');\n    }\n\n    // When an OHIFActivateViewport event is fired, update the Meteor Session\n    // with the viewport index that it was fired from.\n    Session.set('activeViewport', viewportIndex);\n\n    const randomId = Random.id();\n\n    // Update the Session variable to inform that a viewport is active\n    Session.set('viewportActivated', randomId);\n\n    // Update the Session variable to the UI re-renders\n    Session.set('LayoutManagerUpdated', randomId);\n\n    // Add the 'active' class to the parent container to highlight the active viewport\n    $('#imageViewerViewports .viewportContainer').removeClass('active');\n    $element.parents('.viewportContainer').addClass('active');\n\n    // Finally, enable stack prefetching and hide the reference lines from\n    // the newly activated viewport that has a canvas\n\n    if ($element.find('canvas').length) {\n        // Cornerstone Tools compare DOM elements (check getEnabledElement cornerstone function)\n        // so we can't pass a jQuery object as an argument, otherwise it throws an excepetion\n        const domElement = $element.get(0);\n        displayReferenceLines(domElement);\n        StudyPrefetcher.getInstance().prefetch();\n\n        // @TODO Add this to OHIFAfterActivateViewport handler...\n        if (OHIF.viewer.stackImagePositionOffsetSynchronizer) {\n            OHIF.viewer.stackImagePositionOffsetSynchronizer.update();\n        }\n    }\n\n    // Set the div to focused, so keypress events are handled\n    //$(element).focus();\n    //.focus() event breaks in FF&IE\n    $element.triggerHandler('focus');\n\n    // Trigger OHIFAfterActivateViewport event on activated instance\n    // for compatibility with other systems\n    $element.trigger('OHIFAfterActivateViewport');\n\n}\n","import { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\n\n/**\n * Restores the browser focus to the currently specified active viewport\n * as determined from Meteor's Session variable.\n *\n * This is allows keydown events to be captured on the focused element.\n */\nconst setFocusToActiveViewport = () => {\n    // Get the list of viewports\n    const viewports = $('.imageViewerViewport');\n\n    // Get the current active viewport index from Session\n    const activeViewportIndex = Session.get('activeViewport');\n\n    // Find the div from the list of viewports\n    const activeViewport = viewports.eq(activeViewportIndex);\n\n    // Set the browser focus to this div\n    activeViewport.focus();\n};\n\nexport { setFocusToActiveViewport };","\nexport const sopClassDictionary = {\n    ComputedRadiographyImageStorage: \"1.2.840.10008.5.1.4.1.1.1\",\n    DigitalXRayImageStorageForPresentation: \"1.2.840.10008.5.1.4.1.1.1.1\",\n    DigitalXRayImageStorageForProcessing: \"1.2.840.10008.5.1.4.1.1.1.1.1\",\n    DigitalMammographyXRayImageStorageForPresentation: \"1.2.840.10008.5.1.4.1.1.1.2\",\n    DigitalMammographyXRayImageStorageForProcessing: \"1.2.840.10008.5.1.4.1.1.1.2.1\",\n    DigitalIntraOralXRayImageStorageForPresentation: \"1.2.840.10008.5.1.4.1.1.1.3\",\n    DigitalIntraOralXRayImageStorageForProcessing: \"1.2.840.10008.5.1.4.1.1.1.3.1\",\n    CTImageStorage: \"1.2.840.10008.5.1.4.1.1.2\",\n    EnhancedCTImageStorage: \"1.2.840.10008.5.1.4.1.1.2.1\",\n    LegacyConvertedEnhancedCTImageStorage: \"1.2.840.10008.5.1.4.1.1.2.2\",\n    UltrasoundMultiframeImageStorage: \"1.2.840.10008.5.1.4.1.1.3.1\",\n    MRImageStorage: \"1.2.840.10008.5.1.4.1.1.4\",\n    EnhancedMRImageStorage: \"1.2.840.10008.5.1.4.1.1.4.1\",\n    MRSpectroscopyStorage: \"1.2.840.10008.5.1.4.1.1.4.2\",\n    EnhancedMRColorImageStorage: \"1.2.840.10008.5.1.4.1.1.4.3\",\n    LegacyConvertedEnhancedMRImageStorage: \"1.2.840.10008.5.1.4.1.1.4.4\",\n    UltrasoundImageStorage: \"1.2.840.10008.5.1.4.1.1.6.1\",\n    EnhancedUSVolumeStorage: \"1.2.840.10008.5.1.4.1.1.6.2\",\n    SecondaryCaptureImageStorage: \"1.2.840.10008.5.1.4.1.1.7\",\n    MultiframeSingleBitSecondaryCaptureImageStorage: \"1.2.840.10008.5.1.4.1.1.7.1\",\n    MultiframeGrayscaleByteSecondaryCaptureImageStorage: \"1.2.840.10008.5.1.4.1.1.7.2\",\n    MultiframeGrayscaleWordSecondaryCaptureImageStorage: \"1.2.840.10008.5.1.4.1.1.7.3\",\n    MultiframeTrueColorSecondaryCaptureImageStorage: \"1.2.840.10008.5.1.4.1.1.7.4\",\n    Sop12LeadECGWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.1.1\",\n    GeneralECGWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.1.2\",\n    AmbulatoryECGWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.1.3\",\n    HemodynamicWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.2.1\",\n    CardiacElectrophysiologyWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.3.1\",\n    BasicVoiceAudioWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.4.1\",\n    GeneralAudioWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.4.2\",\n    ArterialPulseWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.5.1\",\n    RespiratoryWaveformStorage: \"1.2.840.10008.5.1.4.1.1.9.6.1\",\n    GrayscaleSoftcopyPresentationStateStorage: \"1.2.840.10008.5.1.4.1.1.11.1\",\n    ColorSoftcopyPresentationStateStorage: \"1.2.840.10008.5.1.4.1.1.11.2\",\n    PseudoColorSoftcopyPresentationStateStorage: \"1.2.840.10008.5.1.4.1.1.11.3\",\n    BlendingSoftcopyPresentationStateStorage: \"1.2.840.10008.5.1.4.1.1.11.4\",\n    XAXRFGrayscaleSoftcopyPresentationStateStorage: \"1.2.840.10008.5.1.4.1.1.11.5\",\n    XRayAngiographicImageStorage: \"1.2.840.10008.5.1.4.1.1.12.1\",\n    EnhancedXAImageStorage: \"1.2.840.10008.5.1.4.1.1.12.1.1\",\n    XRayRadiofluoroscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.12.2\",\n    EnhancedXRFImageStorage: \"1.2.840.10008.5.1.4.1.1.12.2.1\",\n    XRay3DAngiographicImageStorage: \"1.2.840.10008.5.1.4.1.1.13.1.1\",\n    XRay3DCraniofacialImageStorage: \"1.2.840.10008.5.1.4.1.1.13.1.2\",\n    BreastTomosynthesisImageStorage: \"1.2.840.10008.5.1.4.1.1.13.1.3\",\n    BreastProjectionXRayImageStorageForPresentation: \"1.2.840.10008.5.1.4.1.1.13.1.4\",\n    BreastProjectionXRayImageStorageForProcessing: \"1.2.840.10008.5.1.4.1.1.13.1.5\",\n    IntravascularOpticalCoherenceTomographyImageStorageForPresentation: \"1.2.840.10008.5.1.4.1.1.14.1\",\n    IntravascularOpticalCoherenceTomographyImageStorageForProcessing: \"1.2.840.10008.5.1.4.1.1.14.2\",\n    NuclearMedicineImageStorage: \"1.2.840.10008.5.1.4.1.1.20\",\n    RawDataStorage: \"1.2.840.10008.5.1.4.1.1.66\",\n    SpatialRegistrationStorage: \"1.2.840.10008.5.1.4.1.1.66.1\",\n    SpatialFiducialsStorage: \"1.2.840.10008.5.1.4.1.1.66.2\",\n    DeformableSpatialRegistrationStorage: \"1.2.840.10008.5.1.4.1.1.66.3\",\n    SegmentationStorage: \"1.2.840.10008.5.1.4.1.1.66.4\",\n    SurfaceSegmentationStorage: \"1.2.840.10008.5.1.4.1.1.66.5\",\n    RealWorldValueMappingStorage: \"1.2.840.10008.5.1.4.1.1.67\",\n    SurfaceScanMeshStorage: \"1.2.840.10008.5.1.4.1.1.68.1\",\n    SurfaceScanPointCloudStorage: \"1.2.840.10008.5.1.4.1.1.68.2\",\n    VLEndoscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.1\",\n    VideoEndoscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.1.1\",\n    VLMicroscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.2\",\n    VideoMicroscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.2.1\",\n    VLSlideCoordinatesMicroscopicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.3\",\n    VLPhotographicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.4\",\n    VideoPhotographicImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.4.1\",\n    OphthalmicPhotography8BitImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.5.1\",\n    OphthalmicPhotography16BitImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.5.2\",\n    StereometricRelationshipStorage: \"1.2.840.10008.5.1.4.1.1.77.1.5.3\",\n    OphthalmicTomographyImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.5.4\",\n    VLWholeSlideMicroscopyImageStorage: \"1.2.840.10008.5.1.4.1.1.77.1.6\",\n    LensometryMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.1\",\n    AutorefractionMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.2\",\n    KeratometryMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.3\",\n    SubjectiveRefractionMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.4\",\n    VisualAcuityMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.5\",\n    SpectaclePrescriptionReportStorage: \"1.2.840.10008.5.1.4.1.1.78.6\",\n    OphthalmicAxialMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.78.7\",\n    IntraocularLensCalculationsStorage: \"1.2.840.10008.5.1.4.1.1.78.8\",\n    MacularGridThicknessandVolumeReport: \"1.2.840.10008.5.1.4.1.1.79.1\",\n    OphthalmicVisualFieldStaticPerimetryMeasurementsStorage: \"1.2.840.10008.5.1.4.1.1.80.1\",\n    OphthalmicThicknessMapStorage: \"1.2.840.10008.5.1.4.1.1.81.1\",\n    CornealTopographyMapStorage: \"1.2.840.10008.5.1.4.1.1.82.1\",\n    BasicTextSR: \"1.2.840.10008.5.1.4.1.1.88.11\",\n    EnhancedSR: \"1.2.840.10008.5.1.4.1.1.88.22\",\n    ComprehensiveSR: \"1.2.840.10008.5.1.4.1.1.88.33\",\n    Comprehensive3DSR: \"1.2.840.10008.5.1.4.1.1.88.34\",\n    ProcedureLog: \"1.2.840.10008.5.1.4.1.1.88.40\",\n    MammographyCADSR: \"1.2.840.10008.5.1.4.1.1.88.50\",\n    KeyObjectSelection: \"1.2.840.10008.5.1.4.1.1.88.59\",\n    ChestCADSR: \"1.2.840.10008.5.1.4.1.1.88.65\",\n    XRayRadiationDoseSR: \"1.2.840.10008.5.1.4.1.1.88.67\",\n    RadiopharmaceuticalRadiationDoseSR: \"1.2.840.10008.5.1.4.1.1.88.68\",\n    ColonCADSR: \"1.2.840.10008.5.1.4.1.1.88.69\",\n    ImplantationPlanSRDocumentStorage: \"1.2.840.10008.5.1.4.1.1.88.70\",\n    EncapsulatedPDFStorage: \"1.2.840.10008.5.1.4.1.1.104.1\",\n    EncapsulatedCDAStorage: \"1.2.840.10008.5.1.4.1.1.104.2\",\n    PositronEmissionTomographyImageStorage: \"1.2.840.10008.5.1.4.1.1.128\",\n    EnhancedPETImageStorage: \"1.2.840.10008.5.1.4.1.1.130\",\n    LegacyConvertedEnhancedPETImageStorage: \"1.2.840.10008.5.1.4.1.1.128.1\",\n    BasicStructuredDisplayStorage: \"1.2.840.10008.5.1.4.1.1.131\",\n    RTImageStorage: \"1.2.840.10008.5.1.4.1.1.481.1\",\n    RTDoseStorage: \"1.2.840.10008.5.1.4.1.1.481.2\",\n    RTStructureSetStorage: \"1.2.840.10008.5.1.4.1.1.481.3\",\n    RTBeamsTreatmentRecordStorage: \"1.2.840.10008.5.1.4.1.1.481.4\",\n    RTPlanStorage: \"1.2.840.10008.5.1.4.1.1.481.5\",\n    RTBrachyTreatmentRecordStorage: \"1.2.840.10008.5.1.4.1.1.481.6\",\n    RTTreatmentSummaryRecordStorage: \"1.2.840.10008.5.1.4.1.1.481.7\",\n    RTIonPlanStorage: \"1.2.840.10008.5.1.4.1.1.481.8\",\n    RTIonBeamsTreatmentRecordStorage: \"1.2.840.10008.5.1.4.1.1.481.9\",\n    RTBeamsDeliveryInstructionStorage: \"1.2.840.10008.5.1.4.34.7\",\n    GenericImplantTemplateStorage: \"1.2.840.10008.5.1.4.43.1\",\n    ImplantAssemblyTemplateStorage: \"1.2.840.10008.5.1.4.44.1\",\n    ImplantTemplateGroupStorage: \"1.2.840.10008.5.1.4.45.1\"\n};\n","import { OHIFError } from './classes/OHIFError';\n\n/**\n * Sorts the series and instances inside a study instance by their series\n * and instance numbers in ascending order.\n *\n * @param {Object} study The study instance\n */\nexport function sortStudy(study) {\n    if (!study || !study.seriesList) {\n        throw new OHIFError('Insufficient study data was provided to sortStudy');\n    }\n\n    study.seriesList.sort((a, b) => a.seriesNumber - b.seriesNumber);\n\n    study.seriesList.forEach(series => {\n        series.instances.sort((a, b) => a.instanceNumber - b.instanceNumber);\n    });\n}\n","import { createStacks } from './createStacks';\n\nconst getDisplaySets = (studyMetadata, seriesNumber, iteratorFunction) => {\n    const iteratorFn = typeof iteratorFunction !== 'function' ? createStacks : iteratorFunction;\n    \n    return iteratorFn(studyMetadata, seriesNumber);\n};\n\nconst sortingManager = {\n    getDisplaySets\n};\n\nexport { sortingManager };","import { viewportUtils } from './viewportUtils';\n\n/**\n * This function switches to an image given an element and the index of the image in the current stack\n * Note: Negative indexing is supported:\n * \n *      e.g. switchToImageByIndex(element, -1) to switch to the last image of the stack\n * \n * @param element\n * @param {number} [newImageIdIndex] The image index in the stack to switch to.\n */\nexport function switchToImageByIndex(newImageIdIndex) {\n    var element = viewportUtils.getActiveViewportElement();\n    cornerstoneTools.scrollToIndex(element, newImageIdIndex);\n}\n","import { viewportUtils } from './viewportUtils';\n\n/**\n * This function switches to an image given an element and \n * the relative distance from the current image in the stack\n * \n *      e.g. switchToImageRelative(element, -1) to switch to currentImageIdIndex - 1\n * \n * @param element\n * @param {number} [distanceFromCurrentIndex] The image index in the stack to switch to.\n */\nexport function switchToImageRelative(distanceFromCurrentIndex) {\n    var element = viewportUtils.getActiveViewportElement();\n    cornerstoneTools.scroll(element, distanceFromCurrentIndex);\n}\n","import { Blaze } from 'meteor/blaze';\n\nimport { toolManager } from './toolManager';\nimport { viewportUtils } from './viewportUtils';\n\nconst changeTextCallback = (data, eventData, doneChangingTextCallback) => {\n    // This handles the double-click/long-press event on Spine text marker labels\n    const keyPressHandler = e => {\n        // If Enter or Esc are pressed, close the dialog\n        if (e.which === 13 || e.which === 27) {\n            closeHandler();\n        }\n    };\n\n    // Deactivate textMarker tool after editing a spine label & if spine is not active tool\n    const deactivateAfterEdit = () => {\n        if (toolManager.getActiveTool() !== 'spine') {\n            const element = viewportUtils.getActiveViewportElement();\n            cornerstoneTools.textMarker.deactivate(element, 1);\n        }\n    };\n\n    const closeHandler = () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(data, select.val());\n        deactivateAfterEdit();\n        // Reset the focus to the active viewport element\n        // This makes the mobile Safari keyboard close\n        const element = viewportUtils.getActiveViewportElement();\n        $(element).focus();\n    };\n\n    const dialog = $('#textMarkerRelabelDialog');\n\n    // Is necessary to use Blaze object to not create \n    // circular depencency with helper object (./helpers)\n    if (Blaze._globalHelpers.isTouchDevice()) {\n        // Center the dialog on screen on touch devices\n        dialog.css({\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            margin: 'auto'\n        });\n        dialog.find('.dialog.arrow').hide();\n    } else {\n        // Place the dialog above the tool that is being relabelled\n        // TODO = Switch this to the tool coordinates, but put back into\n        // page coordinates.\n        dialog.css({\n            top: eventData.currentPoints.page.y - dialog.outerHeight() - 20,\n            left: eventData.currentPoints.page.x - dialog.outerWidth() / 2\n        });\n        dialog.find('.dialog.arrow').show();\n    }\n\n    const select = dialog.find('.relabelSelect');\n    const confirm = dialog.find('.relabelConfirm');\n    const remove = dialog.find('.relabelRemove');\n\n    // If the remove button is clicked, delete this marker\n    remove.off('click');\n    remove.on('click', () => {\n        dialog.get(0).close();\n        doneChangingTextCallback(data, undefined, true);\n        deactivateAfterEdit();\n    });\n\n    dialog.get(0).showModal();\n    $('.relabelSelect').val(data.text).trigger('change'); //Update selector to the current\n\n    confirm.off('click');\n    confirm.on('click', () => {\n        closeHandler();\n    });\n\n    // Use keydown since keypress doesn't handle ESC in Chrome\n    dialog.off('keydown');\n    dialog.on('keydown', keyPressHandler);\n};\n\nconst textMarkerUtils = {\n    changeTextCallback\n};\n\nexport { textMarkerUtils };","import { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\n\nconst cloneElement = (element, targetId) => {\n    // Clone the DOM element\n    const clone = element.cloneNode(true);\n\n    // Find any canvas children to clone\n    const clonedCanvases = $(clone).find('canvas');\n    clonedCanvases.each((canvasIndex, clonedCanvas) => {\n        // Draw from the original canvas to the cloned canvas\n        const context = clonedCanvas.getContext('2d');\n        const thumbnailCanvas = $(element).find('canvas').get(canvasIndex);\n        context.drawImage(thumbnailCanvas, 0, 0);\n    });\n\n    // Update the clone with the targetId\n    clone.id = targetId;\n    clone.style.visibility = 'hidden';\n\n    return clone;\n};\n\nconst thumbnailDragStartHandler = (event, data) => {\n    // Prevent any scrolling behaviour normally caused by the original event\n    event.originalEvent.preventDefault();\n\n    // Identify the current study and series index from the thumbnail's DOM position\n    const targetThumbnail = event.currentTarget;\n    const $imageThumbnail = $(targetThumbnail);\n\n    // Force to hardware acceleration to move element\n    // if browser supports translate property\n    const useTransform = OHIF.ui.styleProperty.check('transform', 'translate(1px, 1px)');\n\n    // Clone the image thumbnail\n    const targetId = 'DragClone';\n    const clone = cloneElement(targetThumbnail, targetId);\n    const $clone = $(clone);\n    $clone.addClass('imageThumbnailClone');\n\n    // Set pointerEvents to pass through the clone DOM element\n    // This is necessary in order to identify what is below it\n    // when using document.elementFromPoint\n    clone.style.pointerEvents = 'none';\n\n    // Append the clone to the body\n    document.body.appendChild(clone);\n\n    // Set the cursor x and y positions from the current touch/mouse coordinates\n    let cursorX;\n    let cursorY;\n    // Handle touchStart cases\n    if (event.type === 'touchstart') {\n        cursorX = event.originalEvent.touches[0].pageX;\n        cursorY = event.originalEvent.touches[0].pageY;\n    } else {\n        cursorX = event.pageX;\n        cursorY = event.pageY;\n\n        // Also hook up event handlers for mouse events\n        const handlers = {};\n        handlers.mousemove = event => thumbnailDragHandler(event);\n        handlers.mouseup = event => thumbnailDragEndHandler(event, data, handlers);\n\n        $(document).on('mousemove', handlers.mousemove);\n        $(document).on('mouseup', handlers.mouseup);\n    }\n\n    // This block gets the current offset of the touch/mouse\n    // relative to the window\n    //\n    // i.e. Where did the user grab it from?\n    const offset = $imageThumbnail.offset();\n    const { left, top } = offset;\n\n    // This difference is saved for later so the element movement looks normal\n    const diff = {\n        x: cursorX - left,\n        y: cursorY - top\n    };\n    $clone.data('diff', diff);\n\n    $clone.css({\n        visibility: 'hidden',\n        'z-index': 100000\n    });\n\n    // This sets the default style properties of the cloned element so it is\n    // ready to be dragged around the page\n    if (useTransform) {\n        const viewerHeight = $('#viewer').height();\n        const headerHeight = $('.header').outerHeight();\n        const heightDiff = viewerHeight + headerHeight;\n\n        // Save height difference for later to set top position of the element during movement\n        $clone.data('heightDiff', heightDiff);\n\n        const positionX = cursorX - diff.x;\n        const positionY = cursorY - diff.y - heightDiff;\n\n        const translation = `translate(${positionX}px, ${positionY}px)`;\n        OHIF.ui.styleProperty.set($clone.get(0), 'transform', translation);\n    } else {\n        $clone.css({\n            left: cursorX - diff.x,\n            position: 'fixed',\n            top: cursorY - diff.y,\n        });\n    }\n};\n\nconst thumbnailDragHandler = event => {\n    // Get the touch/mouse coordinates from the event\n    let cursorX;\n    let cursorY;\n    if (event.type === 'touchmove') {\n        cursorX = event.originalEvent.changedTouches[0].pageX;\n        cursorY = event.originalEvent.changedTouches[0].pageY;\n    } else {\n        cursorX = event.pageX;\n        cursorY = event.pageY;\n    }\n\n    // Find the clone element and update it's position on the page\n    const $clone = $('#DragClone');\n    const diff = $clone.data('diff');\n\n    // Force to hardware acceleration to move element\n    // if browser supports translate property\n    const useTransform = OHIF.ui.styleProperty.check('transform', 'translate(1px, 1px)');\n\n    $clone.css({\n        visibility: 'visible',\n        'z-index': 100000\n    });\n\n    // This sets the default style properties of the cloned element so it is\n    // ready to be dragged around the page\n    if (useTransform) {\n        const heightDiff = $clone.data('heightDiff');\n        const positionX = cursorX - diff.x;\n        const positionY = cursorY - diff.y - heightDiff;\n\n        const translation = `translate(${positionX}px, ${positionY}px)`;\n        OHIF.ui.styleProperty.set($clone.get(0), 'transform', translation);\n    } else {\n        $clone.css({\n            left: cursorX - diff.x,\n            position: 'fixed',\n            top: cursorY - diff.y,\n        });\n    }\n\n    // Identify the element below the current cursor position\n    const elemBelow = document.elementFromPoint(cursorX, cursorY);\n\n    // If none exists, stop here\n    if (!elemBelow) {\n        return;\n    }\n\n    // Remove any current faded effects on viewports\n    $('.imageViewerViewport canvas').removeClass('faded');\n\n    // Figure out what to do depending on what we're dragging over\n    const $viewportsDraggedOver = $(elemBelow).parents('.imageViewerViewport');\n    if ($viewportsDraggedOver.length) {\n        // If we're dragging over a non-empty viewport, fade it and change the cursor style\n        $viewportsDraggedOver.find('canvas').not('.magnifyTool').addClass('faded');\n        document.body.style.cursor = 'copy';\n    } else if (elemBelow.classList.contains('imageViewerViewport') && elemBelow.classList.contains('empty')) {\n        // If we're dragging over an empty viewport, just change the cursor style\n        document.body.style.cursor = 'copy';\n    } else {\n        // Otherwise, keep the cursor as no-drop style\n        document.body.style.cursor = 'no-drop';\n    }\n};\n\nconst thumbnailDragEndHandler = (event, data, handlers) => {\n    // Remove the mouse event listeners\n    if (handlers) {\n        $(document).off('mousemove', handlers.mousemove);\n        $(document).off('mouseup', handlers.mouseup);\n    }\n\n    // Reset the cursor style to the default\n    document.body.style.cursor = 'auto';\n\n    // Get the cloned element\n    const $clone = $('#DragClone');\n\n    // If it doesn't exist, stop here\n    if (!$clone.length) {\n        return;\n    }\n\n    const offset = $clone.offset();\n    const { top, left } = offset;\n    const diff = $clone.data('diff');\n\n    // Identify the element below the cloned element position\n    const elemBelow = document.elementFromPoint(left + diff.x, top + diff.y);\n\n    // Remove all cloned elements from the page\n    $('.imageThumbnailClone').remove();\n\n    // Remove any current faded effects on viewports\n    $('.imageViewerViewport canvas').removeClass('faded');\n\n    // If none exists, stop here\n    if (!elemBelow) {\n        return;\n    }\n\n    // Remove any fade effects on the element below\n    elemBelow.classList.remove('faded');\n\n    let element;\n    const $viewportsDraggedOver = $(elemBelow).closest('.imageViewerViewport');\n\n    if ($viewportsDraggedOver.length) {\n        // If we're dragging over a non-empty viewport, retrieve it\n        element = $viewportsDraggedOver.get(0);\n    } else if (elemBelow.classList.contains('imageViewerViewport') &&\n               elemBelow.classList.contains('empty')) {\n        // If we're dragging over an empty viewport, retrieve that instead\n        element = elemBelow;\n    } else {\n        // Otherwise, stop here\n        return false;\n    }\n\n    // If there is no stored drag and drop data, stop here\n    if (!data) {\n        return false;\n    }\n\n    // Get the dropped viewport index\n    const viewportIndex = $('.imageViewerViewport').index(element);\n\n    // Rerender the viewport using the dragged thumbnail data\n    OHIF.viewerbase.layoutManager.rerenderViewportWithNewDisplaySet(viewportIndex, data);\n\n    return false;\n};\n\nconst thumbnailDragHandlers = {\n    thumbnailDragEndHandler,\n    thumbnailDragStartHandler,\n    thumbnailDragHandler\n};\n\nexport { thumbnailDragHandlers };\n","import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { Random } from 'meteor/random';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\nimport { getFrameOfReferenceUID } from './getFrameOfReferenceUID';\nimport { updateCrosshairsSynchronizer } from './updateCrosshairsSynchronizer';\nimport { crosshairsSynchronizers } from './crosshairsSynchronizers';\nimport { annotateTextUtils } from './annotateTextUtils';\nimport { textMarkerUtils } from './textMarkerUtils';\nimport { isTouchDevice } from './helpers/isTouchDevice';\n\nlet defaultTool = {\n    left: 'wwwc',\n    right: 'zoom',\n    middle: 'pan'\n};\nlet activeTool;\nlet defaultMouseButtonTools;\n\nlet tools = {};\n\nlet gestures = {\n    zoomTouchPinch: {\n        enabled: true\n    },\n    panMultiTouch: {\n        enabled: true,\n        numPointers: 2\n    },\n    stackScrollMultiTouch: {\n        enabled: true,\n        numPointers: 3\n    },\n    doubleTapZoom: {\n        enabled: true\n    }\n};\n\nlet toolDefaultStates = {\n    activate: [],\n    deactivate: ['length', 'angle', 'annotate', 'ellipticalRoi', 'rectangleRoi', 'spine'],\n    enable: [],\n    disable: [],\n    disabledToolButtons: [],\n    shadowConfig: {\n        shadow: false,\n        shadowColor: '#000000',\n        shadowOffsetX: 0,\n        shadowOffsetY: 0\n    },\n    textBoxConfig: {\n        centering: {\n            x: true,\n            y: true\n        }\n    }\n};\n\nlet initialized = false;\n\n/**\n * Exported \"toolManager\" Singleton\n */\nexport const toolManager = {\n    init() {\n        toolManager.addTool('wwwc', {\n            mouse: cornerstoneTools.wwwc,\n            touch: cornerstoneTools.wwwcTouchDrag\n        });\n        toolManager.addTool('zoom', {\n            mouse: cornerstoneTools.zoom,\n            touch: cornerstoneTools.zoomTouchDrag\n        });\n        toolManager.addTool('wwwcRegion', {\n            mouse: cornerstoneTools.wwwcRegion,\n            touch: cornerstoneTools.wwwcRegionTouch\n        });\n        toolManager.addTool('dragProbe', {\n            mouse: cornerstoneTools.dragProbe,\n            touch: cornerstoneTools.dragProbeTouch\n        });\n        toolManager.addTool('pan', {\n            mouse: cornerstoneTools.pan,\n            touch: cornerstoneTools.panTouchDrag,\n            multiTouch: cornerstoneTools.panMultiTouch\n        });\n        toolManager.addTool('stackScroll', {\n            mouse: cornerstoneTools.stackScroll,\n            touch: cornerstoneTools.stackScrollTouchDrag,\n            multiTouch: cornerstoneTools.stackScrollMultiTouch\n        });\n        toolManager.addTool('length', {\n            mouse: cornerstoneTools.length,\n            touch: cornerstoneTools.lengthTouch\n        });\n        toolManager.addTool('angle', {\n            mouse: cornerstoneTools.simpleAngle,\n            touch: cornerstoneTools.simpleAngleTouch\n        });\n        toolManager.addTool('magnify', {\n            mouse: cornerstoneTools.magnify,\n            touch: cornerstoneTools.magnifyTouchDrag\n        });\n        toolManager.addTool('ellipticalRoi', {\n            mouse: cornerstoneTools.ellipticalRoi,\n            touch: cornerstoneTools.ellipticalRoiTouch\n        });\n        toolManager.addTool('rectangleRoi', {\n            mouse: cornerstoneTools.rectangleRoi,\n            touch: cornerstoneTools.rectangleRoiTouch\n        });\n        toolManager.addTool('annotate', {\n            mouse: cornerstoneTools.arrowAnnotate,\n            touch: cornerstoneTools.arrowAnnotateTouch\n        });\n\n        toolManager.addTool('rotate', {\n            mouse: cornerstoneTools.rotate,\n            touch: cornerstoneTools.rotateTouchDrag\n        });\n\n        toolManager.addTool('spine', {\n            mouse: cornerstoneTools.textMarker,\n            touch: cornerstoneTools.textMarkerTouch\n        });\n\n        toolManager.addTool('crosshairs', {\n            mouse: cornerstoneTools.crosshairs,\n            touch: cornerstoneTools.crosshairsTouch\n        });\n\n        // if a default tool is globally defined, make it the default tool...\n        if (OHIF.viewer.defaultTool) {\n            defaultTool.left = OHIF.viewer.defaultTool;\n        }\n\n        defaultMouseButtonTools = Meteor.settings && Meteor.settings.public && Meteor.settings.public.defaultMouseButtonTools;\n\n        // Override default tool if defined in settings\n        const defaultLeft = (defaultMouseButtonTools && defaultMouseButtonTools.left) || 'wwwc';\n        const defaultRight = (defaultMouseButtonTools && defaultMouseButtonTools.right) || 'zoom';\n        const defaultMiddle = (defaultMouseButtonTools && defaultMouseButtonTools.middle) || 'pan';\n        defaultTool = {\n            left: defaultLeft,\n            right: defaultRight,\n            middle: defaultMiddle\n        };\n\n        this.configureTools();\n        initialized = true;\n    },\n\n    configureTools() {\n        // Get Cornerstone Tools\n        const { textStyle, toolStyle, toolColors,\n            length, arrowAnnotate, zoom, ellipticalRoi,\n            textMarker, magnify } = cornerstoneTools;\n\n        // Set text box background color\n        textStyle.setBackgroundColor('transparent');\n\n        // Set the tool font and font size\n        // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\n        const fontFamily = 'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\n        textStyle.setFont('15px ' + fontFamily);\n\n        // Set the tool width\n        toolStyle.setToolWidth(2);\n\n        // Set color for inactive tools\n        toolColors.setToolColor('rgb(255, 255, 0)');\n\n        // Set color for active tools\n        toolColors.setActiveColor('rgb(0, 255, 0)');\n\n        // Set shadow configuration\n        const shadowConfig = toolManager.getToolDefaultStates().shadowConfig;\n\n        // Get some tools config to not override them\n        const lengthConfig = length.getConfiguration();\n        const ellipticalRoiConfig = ellipticalRoi.getConfiguration();\n\n        // Add shadow to length tool\n        length.setConfiguration(Object.assign({}, lengthConfig, shadowConfig, { drawHandlesOnHover: true }));\n\n        // Add shadow to length tool\n        ellipticalRoi.setConfiguration(Object.assign({}, ellipticalRoiConfig, shadowConfig));\n\n        // Set the configuration values for the Text Marker (Spine Labelling) tool\n        const $startFrom = $('#startFrom');\n        const $ascending = $('#ascending');\n        const textMarkerConfig = {\n            markers: [ 'L5', 'L4', 'L3', 'L2', 'L1', // Lumbar spine\n                'T12', 'T11', 'T10', 'T9', 'T8', 'T7', // Thoracic spine\n                'T6', 'T5', 'T4', 'T3', 'T2', 'T1',\n                'C7', 'C6', 'C5', 'C4', 'C3', 'C2', 'C1', // Cervical spine\n            ],\n            current: $startFrom.val(),\n            ascending: $ascending.is(':checked'),\n            loop: true,\n            changeTextCallback: textMarkerUtils.changeTextCallback,\n            shadow: shadowConfig.shadow,\n            shadowColor: shadowConfig.shadowColor,\n            shadowOffsetX: shadowConfig.shadowOffsetX,\n            shadowOffsetY: shadowConfig.shadowOffsetY\n        };\n        textMarker.setConfiguration(textMarkerConfig);\n\n        // Set the configuration values for the text annotation (Arrow) tool\n        const annotateConfig = {\n            getTextCallback: annotateTextUtils.getTextCallback,\n            changeTextCallback: annotateTextUtils.changeTextCallback,\n            drawHandles: false,\n            arrowFirst: true\n        };\n        arrowAnnotate.setConfiguration(annotateConfig);\n\n        const zoomConfig = {\n            minScale: 0.05,\n            maxScale: 10\n        };\n        zoom.setConfiguration(zoomConfig);\n\n        const magnifyConfig = {\n            magnifySize: 300,\n            magnificationLevel: 3\n        };\n        magnify.setConfiguration(magnifyConfig);\n\n        if (Meteor.settings && Meteor.settings.public && Meteor.settings.public.defaultGestures) {\n            gestures.zoomTouchPinch = Meteor.settings.public.defaultGestures.zoomTouchPinch || gestures.zoomTouchPinch;\n            gestures.stackScrollMultiTouch = Meteor.settings.public.defaultGestures.stackScrollMultiTouch || gestures.stackScrollMultiTouch;\n            gestures.panMultiTouch = Meteor.settings.public.defaultGestures.panMultiTouch || gestures.panMultiTouch;\n            gestures.doubleTapZoom = Meteor.settings.public.defaultGestures.doubleTapZoom || gestures.doubleTapZoom;\n        }\n\n        //  Set number of fingers to stack scroll\n        if (gestures.stackScrollMultiTouch.enabled === true && gestures.stackScrollMultiTouch.numPointers) {\n            const stackScrollMultiTouchConfig = {\n                testPointers(eventData) {\n                    return (eventData.numPointers === gestures.stackScrollMultiTouch.numPointers);\n                }\n            };\n            cornerstoneTools.stackScrollMultiTouch.setConfiguration(stackScrollMultiTouchConfig);\n        }\n\n        //  Set number of fingers to pan\n        if (gestures.panMultiTouch.enabled === true && gestures.panMultiTouch.numPointers) {\n            const panMultiTouchConfig = {\n                testPointers(eventData) {\n                    return (eventData.numPointers === gestures.panMultiTouch.numPointers);\n                }\n            };\n            cornerstoneTools.panMultiTouch.setConfiguration(panMultiTouchConfig);\n        }\n    },\n    /**\n     * This function searches an object to return the keys that contain a specific value\n     *\n     * @param object {object} The object to be searched\n     * @param value The value to be found\n     *\n     * @returns {array} The keys for which the object has the specified value\n     */\n    getKeysByValue(object, value) {\n        // http://stackoverflow.com/questions/9907419/javascript-object-get-key-by-value\n        return Object.keys(object).filter(key => object[key] === value);\n    },\n\n    configureLoadProcess() {\n        // Whenever CornerstoneImageLoadProgress is fired, identify which viewports\n        // the \"in-progress\" image is to be displayed in. Then pass the percent complete\n        // via the Meteor Session to the other templates to be displayed in the relevant viewports.\n\n        function handleLoadProgress (e) {\n            const eventData = e.detail;\n            const viewportIndices = toolManager.getKeysByValue(window.ViewportLoading, eventData.imageId);\n            viewportIndices.forEach(viewportIndex => {\n                Session.set('CornerstoneLoadProgress' + viewportIndex, eventData.percentComplete);\n            });\n\n            const encodedId = OHIF.string.encodeId(eventData.imageId);\n            Session.set('CornerstoneThumbnailLoadProgress' + encodedId, eventData.percentComplete);\n        }\n\n        cornerstone.events.removeEventListener('cornerstoneimageloadprogress', handleLoadProgress);\n        cornerstone.events.addEventListener('cornerstoneimageloadprogress', handleLoadProgress);\n    },\n\n    setGestures(newGestures) {\n        gestures = newGestures;\n    },\n\n    getGestures() {\n        return gestures;\n    },\n\n    addTool(name, base) {\n        tools[name] = base;\n    },\n\n    getTools() {\n        return tools;\n    },\n\n    setToolDefaultStates(states) {\n        toolDefaultStates = states;\n    },\n\n    getToolDefaultStates() {\n        return toolDefaultStates;\n    },\n\n    setActiveToolForElement(toolId, element, button) {\n        const canvases = $(element).find('canvas');\n        if (element.classList.contains('empty') || !canvases.length) {\n            return;\n        }\n\n        // If button is not defined, we should consider it left\n        if (!button) {\n            button = 'left';\n        }\n\n        // First, deactivate the current active tool\n        tools[activeTool.left].mouse.deactivate(element, 1); // 1 means left mouse button\n        tools[activeTool.middle].mouse.deactivate(element, 2); // 2 means middle mouse button\n        tools[activeTool.right].mouse.deactivate(element, 4); // 3 means right mouse button\n\n        if (tools[activeTool.left].touch) {\n            tools[activeTool.left].touch.deactivate(element);\n        }\n\n        if (tools[activeTool.right].multiTouch) {\n            tools[activeTool.right].multiTouch.disable(element);\n        }\n\n        // Enable tools based on their default states\n        Object.keys(toolDefaultStates).forEach(action => {\n            const relevantTools = toolDefaultStates[action];\n            if (!relevantTools || !relevantTools.length || action === 'disabledToolButtons') return;\n            relevantTools.forEach(toolType => {\n                // the currently active tool has already been deactivated and can be skipped\n                if (action === 'deactivate' &&\n                    (toolType === activeTool.left ||\n                        toolType === activeTool.middle ||\n                        toolType === activeTool.right)) {\n                    return;\n                }\n\n                tools[toolType].mouse[action](\n                    element,\n                    (action === 'activate' || action === 'deactivate' ? 1 : void 0)\n                );\n\n                if (tools[toolType].touch) {\n                    tools[toolType].touch[action](element);\n                }\n\n                if (tools[toolType].multiTouch) {\n                    tools[toolType].multiTouch[action](element);\n                }\n            });\n        });\n\n        // Get the stack toolData\n        const toolData = cornerstoneTools.getToolState(element, 'stack');\n        if (!toolData || !toolData.data || !toolData.data.length) {\n            return;\n        }\n\n        // Get the imageIds for this element\n        const imageIds = toolData.data[0].imageIds;\n\n        // Get the mouse button tools\n        let newToolIdLeft = activeTool.left;\n        if (button === 'left') {\n            newToolIdLeft = toolId;\n        }\n\n        const newCornerstoneToolLeft = tools[newToolIdLeft]; // left mouse tool is used for touch as well\n\n        let newToolIdMiddle = activeTool.middle;\n        if (button === 'middle') {\n            newToolIdMiddle = toolId;\n        }\n\n        const newCornerstoneToolMiddle = cornerstoneTools[newToolIdMiddle];\n\n        let newToolIdRight = activeTool.right;\n        if (button === 'right') {\n            newToolIdRight = toolId;\n        }\n\n        const newCornerstoneToolRight = tools[newToolIdRight]; // right mouse tool is used for multi-touch as well\n\n        // Deactivate scroll wheel tools\n        cornerstoneTools.zoomWheel.deactivate(element);\n        cornerstoneTools.stackScrollWheel.deactivate(element);\n        cornerstoneTools.panMultiTouch.disable(element);\n        cornerstoneTools.zoomTouchPinch.disable(element);\n        cornerstoneTools.stackScrollMultiTouch.disable(element);\n        cornerstoneTools.doubleTapZoom.disable(element);\n\n        // Reactivate the relevant scrollwheel tool for this element\n        if (imageIds.length > 1) {\n            // scroll is the default tool for middle mouse wheel for stacks\n            cornerstoneTools.stackScrollWheel.activate(element);\n\n            // 3 or more finger stack scroll\n            if (gestures.stackScrollMultiTouch.enabled === true && gestures.stackScrollMultiTouch.numPointers >= 3) {\n                const stackScrollMultiTouchConfig = {\n                    testPointers(eventData) {\n                        return (eventData.numPointers === gestures.stackScrollMultiTouch.numPointers);\n                    }\n                };\n                cornerstoneTools.stackScrollMultiTouch.setConfiguration(stackScrollMultiTouchConfig);\n                cornerstoneTools.stackScrollMultiTouch.activate(element);\n            }\n        } else {\n            // zoom is the default tool for middle mouse wheel for single images (non stacks)\n            cornerstoneTools.zoomWheel.activate(element);\n        }\n\n        // 3 or more finger pan\n        if (gestures.panMultiTouch.enabled === true && gestures.panMultiTouch.numPointers >= 3) {\n            const panMultiTouchConfig = {\n                testPointers(eventData) {\n                    return (eventData.numPointers === gestures.panMultiTouch.numPointers);\n                }\n            };\n            cornerstoneTools.panMultiTouch.setConfiguration(panMultiTouchConfig);\n            cornerstoneTools.panMultiTouch.activate(element);\n        }\n\n        // TODO: Remove this messy approach for adding synchronizer when necessary.\n        let leftToolSynchronizer;\n        if (newToolIdLeft === 'crosshairs') {\n            const currentFrameOfReferenceUID = getFrameOfReferenceUID(element);\n            if (currentFrameOfReferenceUID) {\n                updateCrosshairsSynchronizer(currentFrameOfReferenceUID);\n                leftToolSynchronizer = crosshairsSynchronizers.synchronizers[currentFrameOfReferenceUID];\n            }\n\n            if (newToolIdLeft === newToolIdMiddle && newToolIdMiddle === newToolIdRight) {\n                newCornerstoneToolRight.mouse.activate(element, 7); // 7 means left mouse button, right mouse button and middle mouse button\n            } else if (newToolIdLeft === newToolIdMiddle) {\n                newCornerstoneToolMiddle.activate(element, 3); // 3 means left mouse button and middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 4); // 4 means right mouse button\n            } else if (newToolIdMiddle === newToolIdRight) {\n                newCornerstoneToolRight.mouse.activate(element, 6); // 6 means right mouse button and middle mouse button\n                newCornerstoneToolLeft.mouse.activate(element, 1, leftToolSynchronizer); // 1 means left mouse button\n            } else if (newToolIdLeft === newToolIdRight) {\n                newCornerstoneToolMiddle.activate(element, 2); // 2 means middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 5); // 5 means left mouse button and right mouse button\n            } else {\n                newCornerstoneToolLeft.mouse.activate(element, 1, leftToolSynchronizer); // 1 means left mouse button\n                newCornerstoneToolMiddle.activate(element, 2); // 2 means middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 4); // 4 means right mouse button\n            }\n        } else {\n            // This block ensures that all mouse button tools keep working\n            if (newToolIdLeft === newToolIdMiddle && newToolIdMiddle === newToolIdRight) {\n                newCornerstoneToolRight.mouse.activate(element, 7); // 7 means left mouse button, right mouse button and middle mouse button\n            } else if (newToolIdLeft === newToolIdMiddle) {\n                newCornerstoneToolMiddle.activate(element, 3); // 3 means left mouse button and middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 4); // 4 means right mouse button\n            } else if (newToolIdMiddle === newToolIdRight) {\n                newCornerstoneToolRight.mouse.activate(element, 6); // 6 means right mouse button and middle mouse button\n                newCornerstoneToolLeft.mouse.activate(element, 1); // 1 means left mouse button\n            } else if (newToolIdLeft === newToolIdRight) {\n                newCornerstoneToolMiddle.activate(element, 2); // 2 means middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 5); // 5 means left mouse button and right mouse button\n            } else {\n                setTimeout(() => newCornerstoneToolLeft.mouse.activate(element, 1));\n                // >>>> TODO Find out why it's working only with a timeout\n                // newCornerstoneToolLeft.mouse.activate(element, 1); // 1 means left mouse button\n                newCornerstoneToolMiddle.activate(element, 2); // 2 means middle mouse button\n                newCornerstoneToolRight.mouse.activate(element, 4); // 4 means right mouse button\n            }\n        }\n\n        // One finger touch\n        if (newCornerstoneToolLeft.touch) {\n            if (leftToolSynchronizer) {\n                newCornerstoneToolLeft.touch.activate(element, leftToolSynchronizer);\n            } else {\n                newCornerstoneToolLeft.touch.activate(element);\n            }\n        }\n\n        // Two finger swipe\n        const twoFingerMultiTouchConfig = {\n            testPointers(eventData) {\n                return (eventData.numPointers === 2);\n            }\n        };\n        if (newCornerstoneToolRight.multiTouch) {\n            newCornerstoneToolRight.multiTouch.setConfiguration(twoFingerMultiTouchConfig);\n            newCornerstoneToolRight.multiTouch.activate(element);\n        } else if (gestures.panMultiTouch.enabled === true && gestures.panMultiTouch.numPointers === 2) {\n            cornerstoneTools.panMultiTouch.setConfiguration(twoFingerMultiTouchConfig);\n            cornerstoneTools.panMultiTouch.activate(element);\n        } else if (gestures.stackScrollMultiTouch.enabled === true && gestures.stackScrollMultiTouch.numPointers === 2) {\n            cornerstoneTools.stackScrollMultiTouch.setConfiguration(twoFingerMultiTouchConfig);\n            cornerstoneTools.stackScrollMultiTouch.activate(element);\n        }\n\n        // Two finger pinch\n        if (gestures.zoomTouchPinch.enabled === true) {\n            cornerstoneTools.zoomTouchPinch.activate(element);\n        }\n\n        // Double Tap\n        if (gestures.doubleTapZoom.enabled === true) {\n            cornerstoneTools.doubleTapZoom.activate(element);\n        }\n    },\n\n    setActiveTool(toolId, elements, button) {\n        if (!initialized) {\n            toolManager.init();\n        }\n\n        let $elements;\n        if (!elements || !elements.length) {\n            $elements = $('.imageViewerViewport');\n        } else {\n            $elements = $(elements);\n        }\n\n        const checkElementEnabled = function(allElementsEnabled, element) {\n            try {\n                cornerstone.getEnabledElement(element);\n\n                return allElementsEnabled;\n            } catch (error) {\n                return true;\n            }\n        };\n\n        if (!activeTool) {\n            activeTool = defaultTool;\n        }\n\n        // If button is not defined, we should consider it left\n        if (!button) {\n            button = 'left';\n        }\n\n        const activeToolId = activeTool[button];\n\n        /**\n         * TODO: Add textMarkerDialogs template to OHIF's\n         */\n        const dialog = document.getElementById('textMarkerOptionsDialog');\n        if (dialog) {\n            if (toolId === 'spine' && activeToolId !== 'spine' && dialog.getAttribute('open') !== 'open') {\n                dialog.show();\n            } else if (activeToolId !== 'spine' && dialog.getAttribute('open') === 'open') {\n                dialog.close();\n            }\n        }\n\n        if (!toolId) {\n            toolId = defaultTool[button];\n        }\n\n        // Otherwise, set the active tool for all viewport elements\n        $elements.each((index, element) => {\n            if (checkElementEnabled(element) === false) {\n                return;\n            }\n\n            toolManager.setActiveToolForElement(toolId, element, button);\n        });\n\n        activeTool[button] = toolId;\n\n        // Enable reactivity\n        Session.set('ToolManagerActiveToolUpdated', Random.id());\n    },\n\n    getNearbyToolData(element, coords, toolTypes) {\n        const allTools = this.getTools();\n        const touchDevice = isTouchDevice();\n        const nearbyTool = {};\n        let pointNearTool = false;\n\n        toolTypes.forEach(function(toolType) {\n            const toolData = cornerstoneTools.getToolState(element, toolType);\n            if (!toolData) {\n                return;\n            }\n\n            toolData.data.forEach(function(data, index) {\n                let toolInterfaceName = toolType;\n                let toolInterface;\n\n                // Edge cases where the tool is not the same as the typeName\n                if (toolType === 'simpleAngle') {\n                    toolInterfaceName = 'angle';\n                } else if (toolType === 'arrowAnnotate') {\n                    toolInterfaceName = 'annotate';\n                }\n\n                if (touchDevice) {\n                    toolInterface = allTools[toolInterfaceName].touch;\n                } else {\n                    toolInterface = allTools[toolInterfaceName].mouse;\n                }\n\n                if (toolInterface.pointNearTool(element, data, coords)) {\n                    pointNearTool = true;\n                    nearbyTool.tool = data;\n                    nearbyTool.index = index;\n                    nearbyTool.toolType = toolType;\n                }\n            });\n\n            if (pointNearTool) {\n                return false;\n            }\n        });\n\n        return pointNearTool ? nearbyTool : undefined;\n    },\n\n    getActiveTool(button) {\n        if (!initialized) {\n            toolManager.init();\n        }\n\n        // If activeTool is not defined, we should set as defaultTool\n        if (!activeTool) {\n            activeTool = defaultTool;\n        }\n\n        // If button is not defined, we should consider it left\n        if (!button) {\n            button = 'left';\n        }\n\n        return activeTool[button];\n    },\n\n    setDefaultTool(tool, button) {\n        // If button is not defined, we should consider it left\n        if (!button) {\n            button = 'left';\n        }\n\n        defaultTool[button] = tool;\n    },\n\n    getDefaultTool(button) {\n        // If button is not defined, we should consider it left\n        if (!button) {\n            button = 'left';\n        }\n\n        return defaultTool[button];\n    },\n\n    setConfigureTools(configureTools) {\n        if (typeof configureTools === 'function') {\n            this.configureTools = configureTools;\n        }\n    },\n\n    activateCommandButton(button) {\n        const activeCommandButtons = Session.get('ToolManagerActiveCommandButtons') || [];\n\n        if (activeCommandButtons.indexOf(button) === -1) {\n            activeCommandButtons.push(button);\n            Session.set('ToolManagerActiveCommandButtons', activeCommandButtons);\n        }\n    },\n\n    deactivateCommandButton(button) {\n        const activeCommandButtons = Session.get('ToolManagerActiveCommandButtons') || [];\n        const index = activeCommandButtons.indexOf(button);\n\n        if (index !== -1) {\n            activeCommandButtons.splice(index, 1);\n            Session.set('ToolManagerActiveCommandButtons', activeCommandButtons);\n        }\n    }\n};\n","import { OHIF } from 'meteor/ohif:core';\n\nexport const unloadHandlers = {\n    beforeUnload: function(event) {\n        // Check for any unsaved changes on viewer namespace...\n        if (OHIF.ui.unsavedChanges.probe('viewer.*') > 0) {\n            let confirmationMessage = 'You have unsaved changes!';\n            event.returnValue = confirmationMessage;\n            return confirmationMessage;\n        }\n    }\n};\n","import { $ } from 'meteor/jquery';\n\nexport function updateAllViewports() {\n    var viewports = $('.imageViewerViewport').not('.empty');\n    viewports.each(function(index, element) {\n        cornerstone.updateImage(element);\n    });\n}\n","import { $ } from 'meteor/jquery';\nimport { getFrameOfReferenceUID } from './getFrameOfReferenceUID';\nimport { crosshairsSynchronizers } from './crosshairsSynchronizers';\n\n/**\n * This function is used to maintain the updateImageSynchronizers\n * that are using in the Crosshair tool. The function creates\n * (and destroys any currently existing) a new synchronizer for the given\n * frame of reference. It then searches for other viewports that share the same\n * frame of reference, and adds those to the synchronizer. These viewports\n * will now function together when the Crosshair tool is used.\n *\n * @param currentFrameOfReferenceUID\n */\n export function updateCrosshairsSynchronizer(currentFrameOfReferenceUID) {\n    // Check if an old synchronizer exists, and if it does, destroy it\n    // If not, create a new one\n    let synchronizer = crosshairsSynchronizers.synchronizers[currentFrameOfReferenceUID];\n    if (synchronizer) {\n        // If it already exists, remove all source & target elements\n        synchronizer.destroy();\n    } else {\n        // Create a new synchronizer\n        crosshairsSynchronizers.synchronizers[currentFrameOfReferenceUID] = new cornerstoneTools.Synchronizer('cornerstonenewimage', cornerstoneTools.updateImageSynchronizer);\n        synchronizer = crosshairsSynchronizers.synchronizers[currentFrameOfReferenceUID];\n    }\n\n    // Add all elements that stem from the same frame of reference\n    $('.imageViewerViewport').each((index, element) => {\n        const frameOfReferenceUID = getFrameOfReferenceUID(element);\n        if (currentFrameOfReferenceUID !== frameOfReferenceUID) {\n            return;\n        }\n        synchronizer.add(element);\n    });\n}\n","import { _ } from 'meteor/underscore';\nimport { getWADORSImageId } from './getWADORSImageId';\nimport { WadoRsMetaDataBuilder } from './classes/metadata/WadoRsMetaDataBuilder';\n\nfunction getRadiopharmaceuticalInfoMetaData(instance) {\n    const radiopharmaceuticalInfo = instance.radiopharmaceuticalInfo;\n\n    if ((instance.modality !== 'PT') || !radiopharmaceuticalInfo) {\n        return;\n    }\n\n    return new WadoRsMetaDataBuilder()\n        .addTag('00181072', radiopharmaceuticalInfo.radiopharmaceuticalStartTime)\n        .addTag('00181074', radiopharmaceuticalInfo.radionuclideTotalDose)\n        .addTag('00181075', radiopharmaceuticalInfo.radionuclideHalfLife)\n        .toJSON();\n}\n\nconst getWadoRsInstanceMetaData = (study, series, instance) => {\n    return new WadoRsMetaDataBuilder()\n        .addTag('00080016', instance.sopClassUid)\n        .addTag('00080018', instance.sopInstanceUid)\n        .addTag('00080021', series.seriesDate)\n        .addTag('00080031', series.seriesTime)\n        .addTag('00080060', instance.modality)\n        .addTag('00101010', study.patientAge)\n        .addTag('00101020', study.patientSize)\n        .addTag('00101030', study.patientWeight)\n        .addTag('00180050', instance.sliceThickness)\n        .addTag('0020000e', series.seriesInstanceUid)\n        .addTag('00200011', series.seriesNumber)\n        .addTag('0020000d', study.studyInstanceUid)\n        .addTag('00200013', instance.instanceNumber)\n        .addTag('00200032', instance.imagePositionPatient, true)\n        .addTag('00200037', instance.imageOrientationPatient, true)\n        .addTag('00200052', instance.frameOfReferenceUID)\n        .addTag('00201041', instance.sliceLocation)\n        .addTag('00280002', instance.samplesPerPixel)\n        .addTag('00280004', instance.photometricInterpretation)\n        .addTag('00280006', instance.planarConfiguration)\n        .addTag('00280010', instance.rows)\n        .addTag('00280011', instance.columns)\n        .addTag('00280030', instance.pixelSpacing, true)\n        .addTag('00280034', instance.pixelAspectRatio, true)\n        .addTag('00280100', instance.bitsAllocated)\n        .addTag('00280101', instance.bitsStored)\n        .addTag('00280102', instance.highBit)\n        .addTag('00280103', instance.pixelRepresentation)\n        .addTag('00280106', instance.smallestPixelValue)\n        .addTag('00280107', instance.largestPixelValue)\n        .addTag('00281050', instance.windowCenter, true)\n        .addTag('00281051', instance.windowWidth, true)\n        .addTag('00281052', instance.rescaleIntercept)\n        .addTag('00281053', instance.rescaleSlope)\n        .addTag('00281054', instance.rescaleType)\n        .addTag('00281101', instance.redPaletteColorLookupTableDescriptor)\n        .addTag('00281102', instance.greenPaletteColorLookupTableDescriptor)\n        .addTag('00281103', instance.bluePaletteColorLookupTableDescriptor)\n        .addTag('00281201', instance.redPaletteColorLookupTableData)\n        .addTag('00281202', instance.greenPaletteColorLookupTableData)\n        .addTag('00281203', instance.bluePaletteColorLookupTableData)\n        .addTag('00540016', getRadiopharmaceuticalInfoMetaData(instance))\n        .toJSON();\n};\n\nexport function updateMetaDataManager(study) {\n    study.seriesList.forEach(series => {\n        series.instances.forEach(instance => {\n            // Cache just images that are going to be loaded via WADO-RS\n            if ((instance.imageRendering !== 'wadors') && (instance.thumbnailRendering !== 'wadors')) {\n                return;\n            }\n\n            const metaData = getWadoRsInstanceMetaData(study, series, instance);\n            const numberOfFrames = instance.numberOfFrames || 1;\n\n            // We can share the same metaData with all frames because it doesn't have\n            // any frame specific data, such as frameNumber, pixelData, offset, etc.\n            // WADO-RS frame number is 1-based\n            for (let frameNumber = 0; frameNumber < numberOfFrames; frameNumber++) {\n                const imageId = getWADORSImageId(instance, frameNumber);\n                cornerstoneWADOImageLoader.wadors.metaDataManager.add(imageId, metaData);\n            }\n        });\n    });\n}\n","import { $ } from 'meteor/jquery';\n\n/**\n * Updates the orientation labels on a Cornerstone-enabled Viewport element\n * when the viewport settings change (e.g. when a horizontal flip or a rotation occurs)\n *\n * @param element The DOM element of the Cornerstone viewport\n * optional\n * @param viewport The current viewport\n */\nexport function updateOrientationMarkers(element, viewport) {\n    // Get the current viewport settings\n    if(!viewport) {\n        viewport = cornerstone.getViewport(element);\n    }\n\n    // Updates the orientation labels on the viewport\n    const enabledElement = cornerstone.getEnabledElement(element);\n    const imagePlane = cornerstone.metaData.get('imagePlane', enabledElement.image.imageId);\n    \n    if (!imagePlane || !imagePlane.rowCosines || !imagePlane.columnCosines) {\n        return;\n    }\n\n    const rowString = cornerstoneTools.orientation.getOrientationString(imagePlane.rowCosines);\n    const columnString = cornerstoneTools.orientation.getOrientationString(imagePlane.columnCosines);\n    const oppositeRowString = cornerstoneTools.orientation.invertOrientationString(rowString);\n    const oppositeColumnString = cornerstoneTools.orientation.invertOrientationString(columnString);\n\n    const markers = {\n        top: oppositeColumnString,\n        left: oppositeRowString\n    };\n\n    // If any vertical or horizontal flips are applied, change the orientation strings ahead of\n    // the rotation applications\n    if (viewport.vflip) {\n        markers.top = cornerstoneTools.orientation.invertOrientationString(markers.top);\n    }\n\n    if (viewport.hflip) {\n        markers.left = cornerstoneTools.orientation.invertOrientationString(markers.left);\n    }\n\n    // Get the viewport orientation marker DOM elements\n    const viewportOrientationMarkers = $(element).siblings('.viewportOrientationMarkers');\n    const topMarker = viewportOrientationMarkers.find('.topMid');\n    const leftMarker = viewportOrientationMarkers.find('.leftMid');\n\n    // Swap the labels accordingly if the viewport has been rotated\n    // This could be done in a more complex way for intermediate rotation values (e.g. 45 degrees)\n    if (viewport.rotation === 90 || viewport.rotation === -270) {\n        topMarker.text(markers.left);\n        leftMarker.text(cornerstoneTools.orientation.invertOrientationString(markers.top));\n    } else if (viewport.rotation === -90 || viewport.rotation === 270) {\n        topMarker.text(cornerstoneTools.orientation.invertOrientationString(markers.left));\n        leftMarker.text(markers.top);\n    } else if (viewport.rotation === 180 || viewport.rotation === -180) {\n        topMarker.text(cornerstoneTools.orientation.invertOrientationString(markers.top));\n        leftMarker.text(cornerstoneTools.orientation.invertOrientationString(markers.left));\n    } else {\n        topMarker.text(markers.top);\n        leftMarker.text(markers.left);\n    }\n}\n","import { cornerstone } from 'meteor/ohif:cornerstone';\nimport { getElementIfNotEmpty } from './getElementIfNotEmpty';\n\nconst getPatient = function(property) {\n    if (!this.imageId) {\n        return false;\n    }\n\n    const patient = cornerstone.metaData.get('patient', this.imageId);\n    if (!patient) {\n        return '';\n    }\n\n    return patient[property];\n};\n\nconst getStudy = function(property) {\n    if (!this.imageId) {\n        return false;\n    }\n\n    const study = cornerstone.metaData.get('study', this.imageId);\n    if (!study) {\n        return '';\n    }\n\n    return study[property];\n};\n\nconst getSeries = function(property) {\n    if (!this.imageId) {\n        return false;\n    }\n\n    const series = cornerstone.metaData.get('series', this.imageId);\n    if (!series) {\n        return '';\n    }\n\n    return series[property];\n};\n\nconst getInstance = function(property) {\n    if (!this.imageId) {\n        return false;\n    }\n\n    const instance = cornerstone.metaData.get('instance', this.imageId);\n    if (!instance) {\n        return '';\n    }\n\n    return instance[property];\n};\n\nconst getTagDisplay = function(property) {\n    if (!this.imageId) {\n        return false;\n    }\n\n    const instance = cornerstone.metaData.get('tagDisplay', this.imageId);\n    if (!instance) {\n        return '';\n    }\n\n    return instance[property];\n};\n\nconst getImage = function(viewportIndex) {\n    const element = getElementIfNotEmpty(viewportIndex);\n    if (!element) {\n        return false;\n    }\n\n    let enabledElement;\n    try {\n        enabledElement = cornerstone.getEnabledElement(element);\n    } catch(error) {\n        return false;\n    }\n\n    if (!enabledElement || !enabledElement.image) {\n        return false;\n    }\n\n    return enabledElement.image;\n};\n\nconst formatDateTime = (date, time) => `${date} ${time}`;\n\nconst viewportOverlayUtils = {\n    getPatient,\n    getStudy,\n    getSeries,\n    getInstance,\n    getTagDisplay,\n    getImage,\n    formatDateTime\n};\n\nexport { viewportOverlayUtils };\n","import { Session } from 'meteor/session';\nimport { Random } from 'meteor/random';\nimport { $ } from 'meteor/jquery';\nimport { _ } from 'meteor/underscore';\n// Local Modules\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\nimport { updateOrientationMarkers } from './updateOrientationMarkers';\nimport { getInstanceClassDefaultViewport } from './instanceClassSpecificViewport';\n\n/**\n * Get a cornerstone enabledElement for a DOM Element\n * @param  {DOMElement} element Element to get the enabledElement from Cornerstone\n * @return {Object}             Cornerstone's enabledElement object for the given\n *                              element or undefined if the element is not enabled\n */\nconst getEnabledElement = element => {\n    let enabledElement;\n\n    try {\n        enabledElement = cornerstone.getEnabledElement(element);\n    } catch(error) {\n        OHIF.log.warn(error);\n    }\n\n    return enabledElement;\n};\n\n/**\n * Get the active viewport element. It uses activeViewport Session Variable\n * @return {DOMElement} DOMElement of the current active viewport\n */\nconst getActiveViewportElement = () => {\n    const viewportIndex = Session.get('activeViewport') || 0;\n    return $('.imageViewerViewport').get(viewportIndex);\n};\n\n/**\n * Get a cornerstone enabledElement for the Active Viewport Element\n * @return {Object}  Cornerstone's enabledElement object for the active\n *                   viewport element or undefined if the element\n *                   is not enabled\n */\nconst getEnabledElementForActiveElement = () => {\n    const activeViewportElement = getActiveViewportElement();\n    const enabledElement = getEnabledElement(activeViewportElement);\n\n    return enabledElement;\n};\n\nconst zoomIn = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    const viewport = cornerstone.getViewport(element);\n    const scaleIncrement = 0.15;\n    const maximumScale = 10;\n    viewport.scale = Math.min(viewport.scale + scaleIncrement, maximumScale);\n    cornerstone.setViewport(element, viewport);\n};\n\nconst zoomOut = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    const viewport = cornerstone.getViewport(element);\n    const scaleIncrement = 0.15;\n    const minimumScale = 0.05;\n    viewport.scale = Math.max(viewport.scale - scaleIncrement, minimumScale);\n    cornerstone.setViewport(element, viewport);\n};\n\nconst zoomToFit = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    cornerstone.fitToWindow(element);\n};\n\nconst rotateL = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    const viewport = cornerstone.getViewport(element);\n    viewport.rotation -= 90;\n    cornerstone.setViewport(element, viewport);\n    updateOrientationMarkers(element, viewport);\n};\n\nconst rotateR = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    const viewport = cornerstone.getViewport(element);\n    viewport.rotation += 90;\n    cornerstone.setViewport(element, viewport);\n    updateOrientationMarkers(element, viewport);\n};\n\nconst invert = () => {\n    const element = getActiveViewportElement();\n    if (!element) {\n        return;\n    }\n\n    const viewport = cornerstone.getViewport(element);\n    viewport.invert = (viewport.invert === false);\n    cornerstone.setViewport(element, viewport);\n};\n\nconst flipV = () => {\n    const element = getActiveViewportElement();\n    const viewport = cornerstone.getViewport(element);\n    viewport.vflip = (viewport.vflip === false);\n    cornerstone.setViewport(element, viewport);\n    updateOrientationMarkers(element, viewport);\n};\n\nconst flipH = () => {\n    const element = getActiveViewportElement();\n    const viewport = cornerstone.getViewport(element);\n    viewport.hflip = (viewport.hflip === false);\n    cornerstone.setViewport(element, viewport);\n    updateOrientationMarkers(element, viewport);\n};\n\nconst resetViewportWithElement = element => {\n    const enabledElement = cornerstone.getEnabledElement(element);\n    if (enabledElement.fitToWindow === false) {\n        const imageId = enabledElement.image.imageId;\n        const instance = cornerstone.metaData.get('instance', imageId);\n\n        enabledElement.viewport = cornerstone.getDefaultViewport(enabledElement.canvas, enabledElement.image);\n\n        const instanceClassDefaultViewport = getInstanceClassDefaultViewport(instance, enabledElement, imageId);\n        cornerstone.setViewport(element, instanceClassDefaultViewport);\n    } else {\n        cornerstone.reset(element);\n    }\n};\n\nconst resetViewport = (viewportIndex=null) => {\n    if (viewportIndex === null) {\n        resetViewportWithElement(getActiveViewportElement());\n    } else if (viewportIndex === 'all') {\n        $('.imageViewerViewport').each((index, element) => {\n            resetViewportWithElement(element);\n        });\n    } else {\n        resetViewportWithElement($('.imageViewerViewport').get(viewportIndex));\n    }\n};\n\nconst clearTools = () => {\n    const element = getActiveViewportElement();\n    const toolStateManager = cornerstoneTools.globalImageIdSpecificToolStateManager;\n    toolStateManager.clear(element);\n    cornerstone.updateImage(element);\n};\n\nconst linkStackScroll = () => {\n    const synchronizer = OHIF.viewer.stackImagePositionOffsetSynchronizer;\n\n    if (!synchronizer) {\n        return;\n    }\n\n    if (synchronizer.isActive()) {\n        synchronizer.deactivate();\n    } else {\n        synchronizer.activate();\n    }\n};\n\n// This function was originally defined alone inside client/lib/toggleDialog.js\n// and has been moved here to avoid circular dependency issues.\nconst toggleDialog = (element, closeAction) => {\n    const $element = $(element);\n    if ($element.is('dialog')) {\n        if (element.hasAttribute('open')) {\n            if (closeAction) {\n                closeAction();\n            }\n\n            element.close();\n        } else {\n            element.show();\n        }\n    } else {\n        const isClosed = $element.hasClass('dialog-open');\n        $element.toggleClass('dialog-closed', isClosed);\n        $element.toggleClass('dialog-open', !isClosed);\n    }\n};\n\n// Toggle the play/stop state for the cornerstone clip tool\nconst toggleCinePlay = () => {\n    // Get the active viewport element\n    const element = getActiveViewportElement();\n\n    // Check if it's playing the clip to toggle it\n    if (isPlaying()) {\n        cornerstoneTools.stopClip(element);\n    } else {\n        cornerstoneTools.playClip(element);\n    }\n\n    // Update the UpdateCINE session property\n    Session.set('UpdateCINE', Math.random());\n};\n\n// Show/hide the CINE dialog\nconst toggleCineDialog = () => {\n    const dialog = document.getElementById('cineDialog');\n\n    toggleDialog(dialog, stopAllClips);\n    Session.set('UpdateCINE', Random.id());\n};\n\nconst toggleDownloadDialog = () => {\n    stopActiveClip();\n    const $dialog = $('#imageDownloadDialog');\n    if ($dialog.length) {\n        $dialog.find('.close:first').click();\n    } else {\n        OHIF.ui.showDialog('imageDownloadDialog');\n    }\n};\n\nconst isDownloadEnabled = () => {\n    const activeViewport = getActiveViewportElement();\n\n    return activeViewport ? true : false;\n};\n\n// Check if the clip is playing on the active viewport\nconst isPlaying = () => {\n    // Create a dependency on LayoutManagerUpdated and UpdateCINE session\n    Session.get('UpdateCINE');\n    Session.get('LayoutManagerUpdated');\n\n    // Get the viewport element and its current playClip tool state\n    const element = getActiveViewportElement();\n    // Empty Elements throws cornerstore exception\n    if (!element || !$(element).find('canvas').length) {\n        return;\n    }\n\n    const toolState = cornerstoneTools.getToolState(element, 'playClip');\n\n    // Stop here if the tool state is not defined yet\n    if (!toolState) {\n        return false;\n    }\n\n    // Get the clip state\n    const clipState = toolState.data[0];\n\n    if (clipState) {\n        // Return true if the clip is playing\n        return !_.isUndefined(clipState.intervalId);\n    }\n\n    return false;\n};\n\n// Check if a study has multiple frames\nconst hasMultipleFrames = () => {\n    // Its called everytime active viewport and/or layout change\n    Session.get('activeViewport');\n    Session.get('LayoutManagerUpdated');\n\n    const activeViewport = getActiveViewportElement();\n\n    // No active viewport yet: disable button\n    if (!activeViewport || !$(activeViewport).find('canvas').length) {\n        return true;\n    }\n\n    // Get images in the stack\n    const stackToolData = cornerstoneTools.getToolState(activeViewport, 'stack');\n\n    // No images in the stack, so disable button\n    if (!stackToolData || !stackToolData.data || !stackToolData.data.length) {\n        return true;\n    }\n\n    // Get number of images in the stack\n    const stackData = stackToolData.data[0];\n    const nImages = stackData.imageIds && stackData.imageIds.length ? stackData.imageIds.length : 1;\n\n    // Stack has just one image, so disable button\n    if (nImages === 1) {\n        return true;\n    }\n\n    return false;\n};\n\n// Stop clips on all non-empty elements\nconst stopAllClips = () => {\n    const elements = $('.imageViewerViewport').not('.empty');\n    elements.each((index, element) => {\n        if ($(element).find('canvas').length) {\n            cornerstoneTools.stopClip(element);\n        }\n    });\n};\n\nconst stopActiveClip = () => {\n    const activeElement = getActiveViewportElement();\n\n    if ($(activeElement).find('canvas').length) {\n        cornerstoneTools.stopClip(activeElement);\n    }\n};\n\nconst isStackScrollLinkingDisabled = () => {\n    let linkableViewportsCount = 0;\n\n    // Its called everytime active viewport and/or layout change\n    Session.get('viewportActivated');\n    Session.get('LayoutManagerUpdated');\n\n    const synchronizer = OHIF.viewer.stackImagePositionOffsetSynchronizer;\n    if (synchronizer) {\n        const linkableViewports = synchronizer.getLinkableViewports();\n        linkableViewportsCount = linkableViewports.length;\n    }\n\n    return linkableViewportsCount <= 1;\n};\n\nconst isStackScrollLinkingActive = () => {\n    let isActive = true;\n\n    // Its called everytime active viewport layout changes\n    Session.get('LayoutManagerUpdated');\n\n    const synchronizer = OHIF.viewer.stackImagePositionOffsetSynchronizer;\n    const syncedElements = _.pluck(synchronizer.syncedViewports, 'element');\n    const $renderedViewports = $('.imageViewerViewport');\n    $renderedViewports.each((index, element) => {\n        if (!_.contains(syncedElements, element)) {\n            isActive = false;\n        }\n    });\n\n    return isActive;\n};\n\n// Create an event listener to update playing state when a clip stops playing\nwindow.addEventListener('cornerstonetoolsclipstopped', () => {\n    Session.set('UpdateCINE', Math.random());\n});\n\n/**\n * Export functions inside viewportUtils namespace.\n */\n\nconst viewportUtils = {\n    getEnabledElementForActiveElement,\n    getEnabledElement,\n    getActiveViewportElement,\n    zoomIn,\n    zoomOut,\n    zoomToFit,\n    rotateL,\n    rotateR,\n    invert,\n    flipV,\n    flipH,\n    resetViewport,\n    clearTools,\n    linkStackScroll,\n    toggleDialog,\n    toggleCinePlay,\n    toggleCineDialog,\n    toggleDownloadDialog,\n    isPlaying,\n    isDownloadEnabled,\n    hasMultipleFrames,\n    stopAllClips,\n    isStackScrollLinkingDisabled,\n    isStackScrollLinkingActive\n};\n\nexport { viewportUtils };\n","import { Random } from 'meteor/random';\nimport { OHIFError } from './OHIFError';\n\nconst OBJECT = 'object';\n\n/**\n * This class defines an ImageSet object which will be used across the viewer. This object represents\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\n * indiscriminately, but this should be changed).\n */\nexport class ImageSet {\n\n    constructor(images) {\n\n        if (Array.isArray(images) !== true) {\n            throw new OHIFError('ImageSet expects an array of images');\n        }\n\n        // @property \"images\"\n        Object.defineProperty(this, 'images', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: images\n        });\n\n        // @property \"uid\"\n        Object.defineProperty(this, 'uid', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: Random.id() // Unique ID of the instance\n        });\n\n    }\n\n    getUID() {\n        return this.uid;\n    }\n\n    setAttribute(attribute, value) {\n        this[attribute] = value;\n    }\n\n    getAttribute(attribute) {\n        return this[attribute];\n    }\n\n    setAttributes(attributes) {\n        if (typeof attributes === OBJECT && attributes !== null) {\n            const imageSet = this, hasOwn = Object.prototype.hasOwnProperty;\n            for (let attribute in attributes) {\n                if (hasOwn.call(attributes, attribute)) {\n                    imageSet[attribute] = attributes[attribute];\n                }\n            }\n        }\n    }\n\n    getImage(index) {\n        return this.images[index];\n    }\n\n    sortBy(sortingCallback) {\n        return this.images.sort(sortingCallback);\n    }\n\n}\n","import { Blaze } from 'meteor/blaze';\nimport { Session } from 'meteor/session';\nimport { Tracker } from 'meteor/tracker';\nimport { Template } from 'meteor/templating';\nimport { _ } from 'meteor/underscore';\nimport { $ } from 'meteor/jquery';\n\nimport { OHIF } from 'meteor/ohif:core';\n\n// Displays Series in Viewports given a Protocol and list of Studies\nexport class LayoutManager {\n    /**\n     * Constructor: initializes a Layout Manager object.\n     * @param {DOM element}    parentNode DOM element representing the parent node, which wraps the Layout Manager content\n     * @param {Array} studies  Array of studies objects that will be rendered in the Viewer. Each object will be rendered in a div.imageViewerViewport\n     */\n    constructor(parentNode, studies) {\n        OHIF.log.info('LayoutManager constructor');\n\n        this.observer = new Tracker.Dependency();\n        this.parentNode = parentNode;\n        this.studies = studies;\n        this.viewportData = [];\n        this.layoutTemplateName = 'gridLayout';\n        this.layoutProps = {\n            rows: 1,\n            columns: 1\n        };\n        this.layoutClassName = this.getLayoutClass();\n\n        this.isZoomed = false;\n\n        const updateSessionFn = () => Tracker.afterFlush(() => {\n            Session.set('LayoutManagerUpdated', Math.random());\n            this.observer.changed();\n        });\n        this.updateSession = _.throttle(updateSessionFn, 300);\n    }\n\n    /**\n     * Returns the number of viewports rendered, based on layoutProps\n     * @return {integer} number of viewports\n     */\n    getNumberOfViewports() {\n        return this.layoutProps.rows * this.layoutProps.columns;\n    }\n\n    /**\n     * It creates a new viewport data. This is useful for the first rendering when no viewportData is set yet.\n     */\n    setDefaultViewportData() {\n        OHIF.log.info('LayoutManager setDefaultViewportData');\n\n        const self = this;\n\n        // Get the number of viewports to be rendered\n        const viewportsAmount = this.getNumberOfViewports();\n\n        // Store the old viewport data and reset the current\n        const oldViewportData = self.viewportData;\n\n        // Get the studies and display sets sequence map\n        const sequenceMap = this.getDisplaySetSequenceMap();\n\n        // Check if the display sets are sequenced\n        const isSequenced = this.isDisplaySetsSequenced(sequenceMap);\n\n        // Define the current viewport index and the viewport data array\n        let currentViewportIndex = 0;\n        if (viewportsAmount > oldViewportData.length && oldViewportData.length && isSequenced) {\n            // Keep the displayed display sets\n            self.viewportData = oldViewportData;\n            currentViewportIndex = oldViewportData.length;\n        } else if (viewportsAmount <= oldViewportData.length) {\n            // Reduce the original displayed display sets\n            self.viewportData = oldViewportData.slice(0, viewportsAmount);\n            return;\n        } else {\n            // Reset all display sets\n            self.viewportData = [];\n        }\n\n        // Get all the display sets for the viewer studies\n        let displaySets = [];\n        this.studies.forEach(study => {\n            study.displaySets.forEach(dSet => dSet.images.length && displaySets.push(dSet));\n        });\n\n        // Get the display sets that will be appended to the current ones\n        let appendix;\n        const currentLength = self.viewportData.length;\n        if (currentLength) {\n            // TODO: isolate displaySets array by study (maybe a map?)\n            const beginIndex = sequenceMap.values().next().value[0].displaySetIndex + currentLength;\n            const endIndex = beginIndex + (viewportsAmount - currentLength);\n            appendix = displaySets.slice(beginIndex, endIndex);\n        } else {\n            // Get available display sets from the first to the grid size\n            appendix = displaySets.slice(0, viewportsAmount);\n        }\n\n        // Generate the additional data based on the appendix\n        const additionalData = [];\n        appendix.forEach((displaySet, index) => {\n            const { images, studyInstanceUid, seriesInstanceUid, displaySetInstanceUid } = displaySet;\n            const sopInstanceUid = images[0] && images[0].getSOPInstanceUID ? images[0].getSOPInstanceUID() : '';\n            const viewportIndex = currentViewportIndex + index;\n            const data = {\n                viewportIndex,\n                studyInstanceUid,\n                seriesInstanceUid,\n                displaySetInstanceUid,\n                sopInstanceUid\n            };\n\n            additionalData.push(data);\n        });\n\n        // Append the additional data with the viewport data\n        self.viewportData = self.viewportData.concat(additionalData);\n\n        // Push empty objects if the amount is lesser than the grid size\n        while (self.viewportData.length < viewportsAmount) {\n            self.viewportData.push({});\n        }\n    }\n\n    /**\n     * Returns the name of the class to be added to the parentNode\n     * @return {string} class name following the pattern layout-<rows>-<columns>. Ex: layout-1-1, layout-2-2\n     */\n    getLayoutClass() {\n        const { rows, columns } = this.layoutProps;\n        const layoutClass = `layout-${rows}-${columns}`;\n\n        return layoutClass;\n    }\n\n    /**\n     * Add a class to the parentNode based on the layout configuration.\n     * This function is helpful to style the layout of viewports.\n     * Besides that, each inner div.viewportContainer will have helpful classes\n     * as well. See viewer/components/gridLayout/ component in this ohif-viewerbase package.\n     */\n    updateLayoutClass() {\n        const newLayoutClass = this.getLayoutClass();\n\n        // If layout has changed, change its class\n        if (this.layoutClassName !== newLayoutClass) {\n            this.parentNode.classList.remove(this.layoutClassName);\n        }\n\n        this.layoutClassName = newLayoutClass;\n\n        this.parentNode.classList.add(newLayoutClass);\n    }\n\n    /**\n     * Updates the grid with the new layout props.\n     * It iterates over all viewportData to render the studies\n     * in the viewports.\n     * If no viewportData or no viewports defined, it renders the default viewport data.\n     */\n    updateViewports() {\n        OHIF.log.info('LayoutManager updateViewports');\n\n        if (!this.viewportData ||\n            !this.viewportData.length ||\n            this.viewportData.length !== this.getNumberOfViewports()) {\n            this.setDefaultViewportData();\n        }\n\n        // imageViewerViewports occasionally needs relevant layout data in order to set\n        // the element style of the viewport in question\n        const layoutProps = this.layoutProps;\n        const data = $.extend({\n            viewportData: []\n        }, layoutProps);\n\n        this.viewportData.forEach(viewportData => {\n            const viewportDataAndLayoutProps = $.extend(viewportData, layoutProps);\n            data.viewportData.push(viewportDataAndLayoutProps);\n        });\n\n        const layoutTemplate = Template[this.layoutTemplateName];\n        const $parentNode = $(this.parentNode);\n\n        $parentNode.html('');\n        this.updateLayoutClass();\n        Blaze.renderWithData(layoutTemplate, data, this.parentNode);\n\n        this.updateSession();\n\n        this.isZoomed = false;\n    }\n\n    /**\n     * This function destroys and re-renders the imageViewerViewport template.\n     * It uses the data provided to load a new display set into the produced viewport.\n     * @param  {integer} viewportIndex index of the viewport to be re-rendered\n     * @param  {Object} data           instance data object\n     */\n    rerenderViewportWithNewDisplaySet(viewportIndex, viewportData) {\n        // Clone the data to prevent changing the original object\n        const data = _.clone(viewportData);\n\n        OHIF.log.info(`LayoutManager rerenderViewportWithNewDisplaySet: ${viewportIndex}`);\n\n        // The parent container is identified because it is later removed from the DOM\n        const element = $('.imageViewerViewport').eq(viewportIndex);\n        const container = element.parents('.viewportContainer').get(0);\n\n        // Record the current viewportIndex so this can be passed into the re-rendering call\n        data.viewportIndex = viewportIndex;\n\n        // Update the dictionary of loaded displaySet for the specified viewport\n        this.viewportData[viewportIndex] = {\n            viewportIndex: viewportIndex,\n            displaySetInstanceUid: data.displaySetInstanceUid,\n            seriesInstanceUid: data.seriesInstanceUid,\n            studyInstanceUid: data.studyInstanceUid,\n            renderedCallback: data.renderedCallback,\n            currentImageIdIndex: data.currentImageIdIndex || 0\n        };\n\n        // Remove the hover styling\n        element.find('canvas').not('.magnifyTool').removeClass('faded');\n\n        // Remove the whole template, add in the new one\n        const viewportContainer = element.parents('.removable');\n\n        const newViewportContainer = document.createElement('div');\n        newViewportContainer.className = 'removable';\n\n        // Remove the parent element of the template\n        // This is a workaround since otherwise Blaze UI onDestroyed doesn't fire\n        viewportContainer.remove();\n\n        container.appendChild(newViewportContainer);\n\n        // Render and insert the template\n        Blaze.renderWithData(Template.imageViewerViewport, data, newViewportContainer);\n\n        this.updateSession();\n    }\n\n    /**\n     * Enlarge a single viewport. Useful when the layout has more than one viewport\n     * @param  {integer} viewportIndex Index of the viewport to be enlarged\n     */\n    enlargeViewport(viewportIndex) {\n        OHIF.log.info(`LayoutManager enlargeViewport: ${viewportIndex}`);\n\n        if (!this.viewportData ||\n            !this.viewportData.length) {\n            return;\n        }\n\n        // Clone the array for later\n        this.previousViewportData = this.viewportData.slice(0);\n\n        const singleViewportData = $.extend({}, this.viewportData[viewportIndex]);\n        singleViewportData.rows = 1;\n        singleViewportData.columns = 1;\n        singleViewportData.viewportIndex = 0;\n\n        const data = {\n            viewportData: [singleViewportData],\n            rows: 1,\n            columns: 1\n        };\n\n        const layoutTemplate = Template.gridLayout;\n\n        $(this.parentNode).html('');\n        Blaze.renderWithData(layoutTemplate, data, this.parentNode);\n\n        this.isZoomed = true;\n        this.zoomedViewportIndex = viewportIndex;\n        this.viewportData = data.viewportData;\n\n        this.updateSession();\n    }\n\n    /**\n     * Resets to the previous layout configuration.\n     * Useful after enlarging a single viewport.\n     */\n    resetPreviousLayout() {\n        OHIF.log.info('LayoutManager resetPreviousLayout');\n\n        if (!this.isZoomed) {\n            return;\n        }\n\n        this.previousViewportData[this.zoomedViewportIndex] = $.extend({}, this.viewportData[0]);\n        this.previousViewportData[this.zoomedViewportIndex].viewportIndex = this.zoomedViewportIndex;\n        this.viewportData = this.previousViewportData;\n        this.updateViewports();\n    }\n\n    /**\n     * Toogle viewport enlargement.\n     * Useful for user to enlarge or going back to previous layout configurations\n     * @param  {integer} viewportIndex Index of the viewport to be toggled\n     */\n    toggleEnlargement(viewportIndex) {\n        OHIF.log.info(`LayoutManager toggleEnlargement: ${viewportIndex}`);\n\n        if (this.isZoomed) {\n            this.resetPreviousLayout();\n        } else {\n            // Don't enlarge the viewport if we only have one Viewport\n            // to begin with\n            if (this.getNumberOfViewports() > 1) {\n                this.enlargeViewport(viewportIndex);\n            }\n        }\n    }\n\n    /**\n     * Return the display sets map sequence of display sets and viewports\n     */\n    getDisplaySetSequenceMap() {\n        OHIF.log.info('LayoutManager getDisplaySetSequenceMap');\n\n        // Get the viewport data list\n        const viewportDataList = this.viewportData;\n\n        // Create a map to control the display set sequence\n        const sequenceMap = new Map();\n\n        // Iterate over each viewport and register its  details on the sequence map\n        viewportDataList.forEach((viewportData, viewportIndex) => {\n            // Get the current study\n            const currentStudy = _.findWhere(this.studies, {\n                studyInstanceUid: viewportData.studyInstanceUid\n            }) || this.studies[0];\n\n            // Get the display sets\n            const displaySets = currentStudy.displaySets;\n\n            // Get the current display set\n            const displaySet = _.findWhere(displaySets, {\n                displaySetInstanceUid: viewportData.displaySetInstanceUid\n            });\n\n            // Get the current instance index (using 9999 to sort greater than -1)\n            let displaySetIndex = _.indexOf(displaySets, displaySet);\n            displaySetIndex = displaySetIndex < 0 ? 9999 : displaySetIndex;\n\n            // Try to get a map entry for current study or create it if not present\n            let studyViewports = sequenceMap.get(currentStudy);\n            if (!studyViewports) {\n                studyViewports = [];\n                sequenceMap.set(currentStudy, studyViewports);\n            }\n\n            // Register the viewport index and the display set index on the map\n            studyViewports.push({\n                viewportIndex,\n                displaySetIndex\n            });\n        });\n\n        // Return the generated sequence map\n        return sequenceMap;\n    }\n\n    /**\n     * Check if all the display sets and viewports are sequenced\n     * @param  {Array}  definedSequenceMap Array of display set sequence map\n     * @return {Boolean}                   Returns if the display set sequence map is sequenced or not\n     */\n    isDisplaySetsSequenced(definedSequenceMap) {\n        OHIF.log.info('LayoutManager isDisplaySetsSequenced');\n\n        let isSequenced = true;\n\n        // Get the studies and display sets sequence map\n        const sequenceMap = definedSequenceMap || this.getDisplaySetSequenceMap();\n\n        sequenceMap.forEach((studyViewports, study) => {\n            let lastDisplaySetIndex = null;\n            let lastViewportIndex = null;\n            studyViewports.forEach(({ viewportIndex, displaySetIndex }, index) => {\n                // Check if the sequence is wrong\n                if (\n                    displaySetIndex !== 9999 &&\n                    lastViewportIndex !== null &&\n                    lastDisplaySetIndex !== null &&\n                    displaySetIndex !== null &&\n                    (viewportIndex - 1 !== lastViewportIndex ||\n                    displaySetIndex - 1 !== lastDisplaySetIndex)\n                ) {\n                    // Set the sequenced flag as false;\n                    isSequenced = false;\n                }\n\n                // Update the last viewport index\n                lastViewportIndex = viewportIndex;\n\n                // Update the last display set index\n                lastDisplaySetIndex = displaySetIndex;\n            });\n        });\n\n        return isSequenced;\n    }\n\n    /**\n     * Check if is possible to move display sets on a specific direction.\n     * It checks if looping is allowed by OHIF.uiSettings.displaySetNavigationLoopOverSeries\n     * @param  {Boolean} isNext Represents the direction\n     * @return {Boolean}        Returns if display sets can be moved\n     */\n    canMoveDisplaySets(isNext) {\n        OHIF.log.info('LayoutManager canMoveDisplaySets');\n\n        // Get the setting that defines if the display set navigation is multiple\n        const isMultiple = OHIF.uiSettings.displaySetNavigationMultipleViewports;\n\n        // Get the setting that allow display set navigation looping over series\n        const allowLooping = OHIF.uiSettings.displaySetNavigationLoopOverSeries;\n\n        // Get the studies and display sets sequence map\n        const sequenceMap = this.getDisplaySetSequenceMap();\n\n        // Check if the display sets are sequenced\n        const isSequenced = this.isDisplaySetsSequenced(sequenceMap);\n\n        // Get Active Viewport Index if isMultiple is false\n        const activeViewportIndex = !isMultiple ? Session.get('activeViewport') : null;\n\n        // Check if is next and looping is blocked\n        if (isNext && !allowLooping) {\n            // Check if the end was reached\n            let endReached = true;\n\n            sequenceMap.forEach((studyViewports, study) => {\n                // Get active viewport index if isMultiple is false ortherwise get last\n                const studyViewport = studyViewports[activeViewportIndex !== null ? activeViewportIndex : studyViewports.length - 1];\n                if (!studyViewport) {\n                    return;\n                }\n\n                const viewportIndex = studyViewport.displaySetIndex;\n                const layoutViewports = studyViewports.length;\n                const amount = study.displaySets.length;\n                const move = !isMultiple ? 1 : ((amount % layoutViewports) || layoutViewports);\n                const lastStepIndex = amount - move;\n\n                // 9999 for index means empty viewport, see getDisplaySetSequenceMap function\n                if (viewportIndex !== 9999 && viewportIndex !== lastStepIndex) {\n                    endReached = false;\n                }\n            });\n\n            // Return false if end is not reached yet\n            if ((!isMultiple || isSequenced) && endReached) {\n                return false;\n            }\n        }\n\n        // Check if is previous and looping is blocked\n        if (!isNext && !allowLooping) {\n            // Check if the begin was reached\n            let beginReached = true;\n\n            if (activeViewportIndex >= 0) {\n                sequenceMap.forEach((studyViewports, study) => {\n                    // Get active viewport index if isMultiple is false ortherwise get first\n                    const studyViewport = studyViewports[activeViewportIndex !== null ? activeViewportIndex : 0];\n                    if (!studyViewport) {\n                        return;\n                    }\n\n                    const viewportIndex = studyViewport.displaySetIndex;\n                    const layoutViewports = studyViewports.length;\n\n                    // 9999 for index means empty viewport, see getDisplaySetSequenceMap function\n                    if (viewportIndex !== 9999 && viewportIndex - layoutViewports !== -layoutViewports) {\n                        beginReached = false;\n                    }\n                });\n            }\n\n            // Return false if begin is not reached yet\n            if ((!isMultiple || isSequenced) && beginReached) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Move display sets forward or backward in the given viewport index\n     * @param  {integer}  viewportIndex Index of the viewport to be moved\n     * @param  {Boolean} isNext         Represents the direction (true = forward, false = backward)\n     */\n    moveSingleViewportDisplaySets(viewportIndex, isNext) {\n        OHIF.log.info(`LayoutManager moveSingleViewportDisplaySets: ${viewportIndex}`);\n\n        // Get the setting that allow display set navigation looping over series\n        const allowLooping = OHIF.uiSettings.displaySetNavigationLoopOverSeries;\n\n        // Get the selected viewport data\n        const viewportData = this.viewportData[viewportIndex];\n\n        // Get the current study\n        const currentStudy = _.findWhere(this.studies, {\n            studyInstanceUid: viewportData.studyInstanceUid\n        }) || this.studies[0];\n\n        // Get the display sets\n        const displaySets = currentStudy.displaySets;\n\n        // Get the current display set\n        const currentDisplaySet = _.findWhere(displaySets, {\n            displaySetInstanceUid: viewportData.displaySetInstanceUid\n        });\n\n        // Get the new index and ensure that it will exists in display sets\n        let newIndex = _.indexOf(displaySets, currentDisplaySet);\n        if (isNext) {\n            newIndex++;\n            if (newIndex >= displaySets.length) {\n                // Stop here if looping is not allowed\n                if (!allowLooping) {\n                    return;\n                }\n\n                newIndex = 0;\n            }\n        } else {\n            newIndex--;\n            if (newIndex < 0) {\n                // Stop here if looping is not allowed\n                if (!allowLooping) {\n                    return;\n                }\n\n                newIndex = displaySets.length - 1;\n            }\n        }\n\n        // Get the display set data for the new index\n        const newDisplaySetData = displaySets[newIndex];\n\n        // Rerender the viewport using the new display set data\n        this.rerenderViewportWithNewDisplaySet(viewportIndex, newDisplaySetData);\n    }\n\n    /**\n     * Move multiple display sets forward or backward in all viewports\n     * @param  {Boolean} isNext Represents the direction (true = forward, false = backward)\n     */\n    moveMultipleViewportDisplaySets(isNext) {\n        OHIF.log.info('LayoutManager moveMultipleViewportDisplaySets');\n\n        // Get the setting that allow display set navigation looping over series\n        const allowLooping = OHIF.uiSettings.displaySetNavigationLoopOverSeries;\n\n        // Create a map to control the display set sequence\n        const sequenceMap = this.getDisplaySetSequenceMap();\n\n        // Check if the display sets are sequenced\n        const isSequenced = this.isDisplaySetsSequenced(sequenceMap);\n\n        const displaySetsToRender = [];\n\n        // Iterate over the studies map and move its display sets\n        sequenceMap.forEach((studyViewports, study) => {\n            // Sort the viewports on the study by the display set index\n            studyViewports.sort((a, b) => a.displaySetIndex > b.displaySetIndex);\n\n            // Get the study display sets\n            const displaySets = study.displaySets;\n\n            // Calculate the base index\n            const firstIndex = studyViewports[0].displaySetIndex;\n            const steps = studyViewports.length;\n            const rest = firstIndex % steps;\n            let baseIndex = rest ? firstIndex - rest : firstIndex;\n            const direction = isNext ? 1 : -1;\n            baseIndex += steps * direction;\n\n            const amount = displaySets.length;\n\n            // Check if the indexes are sequenced or will overflow the array bounds\n            if (baseIndex >= amount) {\n                const move = (amount % steps) || steps;\n                const lastStepIndex = amount - move;\n                if (firstIndex + steps !== lastStepIndex + steps) {\n                    // Reset the index if the display sets are sequenced but shifted\n                    baseIndex = lastStepIndex;\n                } else if (!allowLooping) {\n                    // Stop here if looping is not allowed\n                    return;\n                } else {\n                    // Start over the series if looping is allowed\n                    baseIndex = 0;\n                }\n            } else if (baseIndex < 0) {\n                if (firstIndex > 0) {\n                    // Reset the index if the display sets are sequenced but shifted\n                    baseIndex = 0;\n                } else if (!allowLooping) {\n                    // Stop here if looping is not allowed\n                    return;\n                } else {\n                    // Go to the series' end if looping is allowed\n                    baseIndex = (amount - 1) - ((amount - 1) % steps);\n                }\n            } else if (!isSequenced) {\n                // Reset the sequence if indexes are not sequenced\n                baseIndex = 0;\n            }\n\n            // Iterate over the current study viewports\n            studyViewports.forEach(({ viewportIndex }, index) => {\n                // Get the new displaySet index to be rendered in viewport\n                const newIndex = baseIndex + index;\n\n                // Get the display set data for the new index\n                const displaySetData = displaySets[newIndex] || {};\n\n                // Add the current display set that on the render list\n                displaySetsToRender.push(displaySetData);\n            });\n        });\n\n        // Sort the display sets\n        const sortingFunction = OHIF.utils.sortBy({\n            name: 'studyInstanceUid'\n        }, {\n            name: 'instanceNumber'\n        }, {\n            name: 'seriesNumber'\n        });\n        displaySetsToRender.sort((a, b) => sortingFunction(a, b));\n\n        // Iterate over each display set data and render on its respective viewport\n        displaySetsToRender.forEach((data, index) => {\n            this.rerenderViewportWithNewDisplaySet(index, data);\n        });\n    }\n\n    /**\n     * Move display sets forward or backward\n     * @param  {Boolean} isNext Represents the direction (true = forward, false = backward)\n     */\n    moveDisplaySets(isNext) {\n        OHIF.log.info('LayoutManager moveDisplaySets');\n\n        //Check if navigation is on a single or multiple viewports\n        if (OHIF.uiSettings.displaySetNavigationMultipleViewports) {\n            // Move display sets on multiple viewports\n            this.moveMultipleViewportDisplaySets(isNext);\n        } else {\n            // Get the selected viewport index\n            const viewportIndex = Session.get('activeViewport');\n\n            // Move display sets on a single viewport\n            this.moveSingleViewportDisplaySets(viewportIndex, isNext);\n        }\n    }\n\n    /**\n     * Check if a study is loaded into a viewport\n     * @param  {string}  studyInstanceUid Study instance Uid string\n     * @param  {integer}  viewportIndex   Index of the viewport to be checked\n     * @return {Boolean}                  Returns if the given study is in the given viewport or not\n     */\n    isStudyLoadedIntoViewport(studyInstanceUid, viewportIndex) {\n        return (this.viewportData.find(item => item.studyInstanceUid === studyInstanceUid && item.viewportIndex === viewportIndex) !== void 0);\n    }\n\n    /**\n     * Check if the layout has multiple rows and columns\n     * @return {Boolean} Return if the layout has multiple rows and columns or not\n     */\n    isMultipleLayout() {\n        return this.layoutProps.row !== 1 && this.layoutProps.columns !== 1;\n    }\n\n}\n","// @TODO: improve this object\n/**\n * Objects to be used to throw errors, specially\n * in Trackers functions (afterFlush, Flush).\n */\nexport class OHIFError extends Error {\n\n    constructor(message) {\n      super();\n      this.message = message; \n      this.stack = (new Error()).stack;\n      this.name = this.constructor.name;\n    }\n}","import { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\nimport { getInstanceClassDefaultViewport } from '../instanceClassSpecificViewport';\n\n// Manage resizing viewports triggered by window resize\nexport class ResizeViewportManager {\n    constructor() {\n        this._resizeHandler = null;\n    }\n\n    // Reposition Study Series Quick Switch based whether side bars are opened or not\n    repositionStudySeriesQuickSwitch() {\n        OHIF.log.info('ResizeViewportManager repositionStudySeriesQuickSwitch');\n\n        // Stop here if viewer is not displayed\n        const isViewer = Session.get('ViewerOpened');\n        if (!isViewer) return;\n\n        // Stop here if there is no one or only one viewport\n        const nViewports = OHIF.viewerbase.layoutManager.viewportData.length;\n        if (!nViewports || nViewports <= 1) return;\n\n        const $viewer = $('#viewer');\n        const leftSidebar = $viewer.find('.sidebar-left.sidebar-open');\n        const rightSidebar = $viewer.find('.sidebar-right.sidebar-open');\n\n        const $leftQuickSwitch = $('.quickSwitchWrapper.left');\n        const $rightQuickSwitch = $('.quickSwitchWrapper.right');\n\n        const hasLeftSidebar = leftSidebar.length > 0;\n        const hasRightSidebar = rightSidebar.length > 0;\n\n        $rightQuickSwitch.removeClass('left-sidebar-only');\n        $leftQuickSwitch.removeClass('right-sidebar-only');\n\n        let leftOffset = 0;\n\n        if (hasLeftSidebar) {\n            leftOffset = (leftSidebar.width() / $(window).width()) * 100;\n\n            if (!hasRightSidebar) {\n                $rightQuickSwitch.addClass('left-sidebar-only');\n            }\n        }\n\n        if (hasRightSidebar && !hasLeftSidebar) {\n            $leftQuickSwitch.addClass('right-sidebar-only');\n        }\n\n        const leftPosition = (($('#imageViewerViewports').width() / nViewports) / $(window).width()) * 100 + leftOffset;\n        const rightPosition = 100 - leftPosition;\n\n        $leftQuickSwitch.css('right', rightPosition + '%');\n        $rightQuickSwitch.css('left', leftPosition + '%');\n    }\n\n    // Relocate dialogs positions\n    relocateDialogs(){\n        OHIF.log.info('ResizeViewportManager relocateDialogs');\n\n        const $bottomRightDialogs = $('#annotationDialog, #textMarkerOptionsDialog');\n        $bottomRightDialogs.css({\n            top: '', // This removes the CSS property completely\n            left: '',\n            bottom: 0,\n            right: 0\n        });\n\n        const centerDialogs = $('.draggableDialog').not($bottomRightDialogs);\n\n        centerDialogs.css({\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0\n        });\n    }\n\n    // Resize viewport scrollbars\n    resizeScrollbars(element) {\n        OHIF.log.info('ResizeViewportManager resizeScrollbars');\n\n        const $currentOverlay = $(element).siblings('.imageViewerViewportOverlay');\n        $currentOverlay.find('.scrollbar').trigger('rescale');\n    }\n\n    // Resize a single viewport element\n    resizeViewportElement(element, fitToWindow = true) {\n        let enabledElement;\n        try {\n            enabledElement = cornerstone.getEnabledElement(element);\n        } catch(error) {\n            return;\n        }\n\n        cornerstone.resize(element, fitToWindow);\n\n        if (enabledElement.fitToWindow === false) {\n            const imageId = enabledElement.image.imageId;\n            const instance = cornerstone.metaData.get('instance', imageId);\n            const instanceClassViewport = getInstanceClassDefaultViewport(instance, enabledElement, imageId);\n            cornerstone.setViewport(element, instanceClassViewport);\n        }\n    }\n\n    // Resize each viewport element\n    resizeViewportElements() {\n        this.relocateDialogs();\n\n        setTimeout(() => {\n            this.repositionStudySeriesQuickSwitch();\n\n            const elements = $('.imageViewerViewport').not('.empty');\n            elements.each((index, element) => {\n                this.resizeViewportElement(element);\n                this.resizeScrollbars(element);\n            });\n        }, 1);\n    }\n\n    // Function to override resizeViewportElements function\n    setResizeViewportElement(resizeViewportElements) {\n        this.resizeViewportElements = resizeViewportElements;\n    }\n\n    // Avoid doing DOM manipulation during the resize handler\n    // because it is fired very often.\n    // Resizing is therefore performed 100 ms after the resize event stops.\n    handleResize() {\n        clearTimeout(this.resizeTimer);\n        this.resizeTimer = setTimeout(() => {\n            OHIF.log.info('ResizeViewportManager resizeViewportElements');\n            this.resizeViewportElements();\n        }, 100);\n    }\n\n    /**\n     * Returns a unique event handler function associated with a given instance using lazy assignment.\n     * @return {function} Returns a unique copy of the event handler of this class.\n     */\n    getResizeHandler() {\n        let resizeHandler = this._resizeHandler;\n        if (resizeHandler === null) {\n            resizeHandler = this.handleResize.bind(this);\n            this._resizeHandler = resizeHandler;\n        }\n\n        return resizeHandler;\n    }\n}\n","import { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneTools } from 'meteor/ohif:cornerstone';\nimport { toolManager } from '../toolManager';\n\nexport class StackImagePositionOffsetSynchronizer {\n    constructor() {\n        this.active = false;\n        this.syncedViewports = [];\n        this.synchronizer = new cornerstoneTools.Synchronizer('cornerstonenewimage', cornerstoneTools.stackImagePositionOffsetSynchronizer);\n    }\n\n    static get ELEMENT_DISABLED_EVENT() {\n        return 'cornerstoneelementdisabled.StackImagePositionOffsetSynchronizer';\n    }\n\n    isActive() {\n        return this.active;\n    }\n\n    activate() {\n        const viewports = this.getLinkableViewports();\n        this.syncViewports(viewports);\n    }\n\n    activateByViewportIndexes(viewportIndexes) {\n        const viewports = this.getViewportByIndexes(viewportIndexes);\n        this.syncViewports(viewports);\n    }\n\n    deactivate() {\n        if (!this.isActive()) {\n            return;\n        }\n\n        while (this.syncedViewports.length) {\n            const viewport = this.syncedViewports[0];\n            this.removeViewport(viewport);\n        }\n\n        this.active = false;\n        toolManager.deactivateCommandButton('linkStackScroll');\n    }\n\n    update() {\n        if (!this.isActive()) {\n            return;\n        }\n\n        const activeViewportElement = this.getActiveViewportElement();\n\n        if (this.isViewportSynced(activeViewportElement)) {\n            return;\n        }\n\n        this.deactivate();\n        this.activate();\n    }\n\n    syncViewports(viewports) {\n        const viewportIndexes = [];\n\n        if (this.isActive() || (viewports.length <= 1)) {\n            return;\n        }\n\n        viewports.forEach((viewport, index) => {\n            this.synchronizer.add(viewport.element);\n            this.syncedViewports.push(viewport);\n            viewportIndexes.push(viewport.index);\n            if (!this.disabledListener) {\n                this.disabledListener = this.elementDisabledHandler(this);\n            }\n\n            viewport.element.addEventListener(StackImagePositionOffsetSynchronizer.ELEMENT_DISABLED_EVENT, this.disabledListener);\n        });\n\n        this.active = true;\n        toolManager.activateCommandButton('linkStackScroll');\n        Session.set('StackImagePositionOffsetSynchronizerLinkedViewports', viewportIndexes);\n    }\n\n    isViewportSynced(viewportElement) {\n        return !!this.getViewportByElement(viewportElement);\n    }\n\n    getActiveViewportElement() {\n        const viewportIndex = Session.get('activeViewport') || 0;\n        return $('.imageViewerViewport').get(viewportIndex);\n    }\n\n    removeViewport(viewport) {\n        const index = this.syncedViewports.indexOf(viewport);\n\n        if (index === -1) {\n            return;\n        }\n\n        this.syncedViewports.splice(index, 1);\n        this.synchronizer.remove(viewport.element);\n        this.removeLinkedViewportFromSession(viewport);\n        viewport.element.removeEventListener(StackImagePositionOffsetSynchronizer.ELEMENT_DISABLED_EVENT, this.disabledListener);\n    }\n\n    getViewportByElement(viewportElement) {\n        const length = this.syncedViewports.length;\n\n        for (let i = 0; i < length; i++) {\n            const viewport = this.syncedViewports[i];\n\n            if (viewport.element === viewportElement) {\n                return viewport;\n            }\n        }\n    }\n\n    removeViewportByElement(viewportElement) {\n        let viewport = this.getViewportByElement(viewportElement);\n\n        if (viewport) {\n            this.removeViewport(viewport);\n        }\n    }\n\n    removeLinkedViewportFromSession(viewport) {\n        const linkedViewports = Session.get('StackImagePositionOffsetSynchronizerLinkedViewports');\n        const index = linkedViewports.indexOf(viewport.index);\n\n        if (index !== -1) {\n            linkedViewports.splice(index, 1);\n            Session.set('StackImagePositionOffsetSynchronizerLinkedViewports', linkedViewports);\n        }\n    }\n\n    elementDisabledHandler(context) {\n        return e => context.removeViewportByElement(e.detail.element);\n    }\n\n    getViewportByIndexes(viewportIndexes) {\n        const viewports = [];\n        const $viewportElements = $('.imageViewerViewport');\n\n        viewportIndexes.forEach(index => {\n            const element = $viewportElements.get(index);\n\n            if (!element) {\n                return;\n            }\n\n            viewports.push({\n                index,\n                element\n            });\n        });\n\n        return viewports;\n    }\n\n    isViewportsLinkable(viewportElementA, viewportElementB) {\n        const viewportAImageNormal = this.getViewportImageNormal(viewportElementA);\n        const viewportBImageNormal = this.getViewportImageNormal(viewportElementB);\n\n        if (viewportAImageNormal && viewportBImageNormal) {\n            const angleInRadians = viewportBImageNormal.angleTo(viewportAImageNormal);\n\n            // Pi / 12 radians = 15 degrees\n            // If the angle between two vectors is Pi, it means they are just inverted\n            return angleInRadians < Math.PI / 12 || angleInRadians === Math.PI;\n        }\n\n        return false;\n    }\n\n    getLinkableViewports() {\n        const activeViewportElement = this.getActiveViewportElement();\n        const viewports = [];\n\n        $('.imageViewerViewport').each((index, viewportElement) => {\n            if (this.isViewportsLinkable(activeViewportElement, viewportElement)) {\n                viewports.push({\n                    index: index,\n                    element: viewportElement\n                });\n            }\n        });\n\n        return viewports;\n    }\n\n    getViewportImageNormal(element) {\n        if (!element) {\n            return;\n        }\n\n        element = $(element).get(0);\n\n        try {\n            const enabledElement = cornerstone.getEnabledElement(element);\n\n            if (!enabledElement.image) {\n                return;\n            }\n\n            const imageId = enabledElement.image.imageId;\n            const imagePlane = cornerstone.metaData.get('imagePlane', imageId);\n\n            if (!imagePlane || !imagePlane.rowCosines || !imagePlane.columnCosines) {\n                return;\n            }\n\n            return imagePlane.rowCosines.clone().cross(imagePlane.columnCosines);\n        } catch(error) {\n            const errorMessage = error.message || error;\n            OHIF.log.info(`StackImagePositionOffsetSynchronizer getViewportImageNormal: ${errorMessage}`);\n        }\n    }\n}\n","import { $ } from 'meteor/jquery';\nimport { Session } from 'meteor/session';\nimport { OHIF } from 'meteor/ohif:core';\nimport { cornerstone, cornerstoneWADOImageLoader } from 'meteor/ohif:cornerstone';\n\nclass BaseLoadingListener {\n    constructor(stack, options) {\n        options = options || {};\n\n        this.id = BaseLoadingListener.getNewId();\n        this.stack = stack;\n        this.startListening();\n        this.statsItemsLimit = options.statsItemsLimit || 2;\n        this.stats = {\n            items: [],\n            total: 0,\n            elapsedTime: 0,\n            speed: 0\n        };\n\n        // Register the start point to make it possible to calculate\n        // bytes/s or frames/s when the first byte or frame is received\n        this._addStatsData(0);\n\n        // Update the progress before starting the download\n        // to make it possible to update the UI\n        this._updateProgress();\n    }\n\n    _addStatsData(value) {\n        const date = new Date();\n        const stats = this.stats;\n        const items = stats.items;\n        const newItem = {\n            value,\n            date\n        };\n\n        items.push(newItem);\n        stats.total += newItem.value;\n\n        // Remove items until it gets below the limit\n        while (items.length > this.statsItemsLimit) {\n            const item = items.shift();\n            stats.total -= item.value;\n        }\n\n        // Update the elapsedTime (seconds) based on first and last\n        // elements and recalculate the speed (bytes/s or frames/s)\n        if (items.length > 1) {\n            const oldestItem = items[0];\n            stats.elapsedTime = (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\n            stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\n        }\n    }\n\n    _getProgressSessionId() {\n        const displaySetInstanceUid = this.stack.displaySetInstanceUid;\n        return 'StackProgress:' + displaySetInstanceUid;\n    }\n\n    _clearSession() {\n        const progressSessionId = this._getProgressSessionId();\n        Session.set(progressSessionId, undefined);\n        delete Session.keys.progressSessionId;\n    }\n\n    startListening() {\n        throw new Error('`startListening` must be implemented by child clases');\n    }\n\n    stopListening() {\n        throw new Error('`stopListening` must be implemented by child clases');\n    }\n\n    destroy() {\n        this.stopListening();\n        this._clearSession();\n    }\n\n    static getNewId() {\n        const timeSlice = (new Date()).getTime().toString().slice(-8);\n        const randomNumber = parseInt(Math.random() * 1000000000);\n\n        return timeSlice.toString() + randomNumber.toString();\n    }\n}\n\nclass DICOMFileLoadingListener extends BaseLoadingListener {\n    constructor(stack) {\n        super(stack);\n        this._dataSetUrl = this._getDataSetUrl(stack);\n        this._lastLoaded = 0;\n\n        // Check how many instances has already been download (cached)\n        this._checkCachedData();\n    }\n\n    _checkCachedData() {\n        const dataSet = cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(this._dataSetUrl);\n\n        if (dataSet) {\n            const dataSetLength = dataSet.byteArray.length;\n\n            this._updateProgress({\n                percentComplete: 100,\n                loaded: dataSetLength,\n                total: dataSetLength\n            });\n        }\n    }\n\n    _getImageLoadProgressEventName() {\n        return 'cornerstoneimageloadprogress.' + this.id;\n    }\n\n    startListening() {\n        const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n        const imageLoadProgressEventHandle = this._imageLoadProgressEventHandle.bind(this);\n\n        this.stopListening();\n\n        cornerstone.events.addEventListener(imageLoadProgressEventName, imageLoadProgressEventHandle);\n    }\n\n    stopListening() {\n        const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n        cornerstone.events.removeEventListener(imageLoadProgressEventName);\n    }\n\n    _imageLoadProgressEventHandle(e) {\n        const eventData = e.detail;\n        const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\n        const bytesDiff = eventData.loaded - this._lastLoaded;\n\n        if (!this._dataSetUrl === dataSetUrl) {\n            return;\n        }\n\n        // Add the bytes downloaded to the stats\n        this._addStatsData(bytesDiff);\n\n        // Update the download progress\n        this._updateProgress(eventData);\n\n        // Cache the last eventData.loaded value\n        this._lastLoaded = eventData.loaded;\n    }\n\n    _updateProgress(eventData) {\n        const progressSessionId = this._getProgressSessionId();\n        eventData = eventData || {};\n\n        Session.set(progressSessionId, {\n            multiFrame: false,\n            percentComplete: eventData.percentComplete,\n            bytesLoaded: eventData.loaded,\n            bytesTotal: eventData.total,\n            bytesPerSecond: this.stats.speed\n        });\n    }\n\n    _convertImageIdToDataSetUrl(imageId) {\n        // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\n        imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\n\n        // Remove \"frame=999&\" from the imageId\n        imageId = imageId.replace(/frame=\\d+&?/i, '');\n\n        // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\n        imageId = imageId.replace(/&$/, '');\n\n        return imageId;\n    }\n\n    _getDataSetUrl(stack) {\n        const imageId = stack.imageIds[0];\n        return this._convertImageIdToDataSetUrl(imageId);\n    }\n}\n\nclass StackLoadingListener extends BaseLoadingListener {\n    constructor(stack) {\n        super(stack, { statsItemsLimit: 20 });\n        this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\n        this.framesStatus = this._createArray(stack.imageIds.length, false);\n        this.loadedCount = 0;\n\n        // Check how many instances has already been download (cached)\n        this._checkCachedData();\n    }\n\n    _convertImageIdsArrayToMap(imageIds) {\n        const imageIdsMap = new Map();\n\n        for (let i = 0; i < imageIds.length; i++) {\n            imageIdsMap.set(imageIds[i], {\n                index: i,\n                loaded: false\n            });\n        }\n\n        return imageIdsMap;\n    }\n\n    _createArray(length, defaultValue) {\n        // `new Array(length)` is an anti-pattern in javascript because its\n        // funny API. Otherwise I would go for `new Array(length).fill(false)`\n        const array = [];\n\n        for (let i = 0; i < length; i++) {\n            array[i] = defaultValue;\n        }\n\n        return array;\n    }\n\n    _checkCachedData() {\n        // const imageIds = this.stack.imageIds;\n\n        // TODO: No way to check status of Promise.\n        /*for(let i = 0; i < imageIds.length; i++) {\n            const imageId = imageIds[i];\n\n            const imagePromise = cornerstone.imageCache.getImageLoadObject(imageId).promise;\n\n            if (imagePromise && (imagePromise.state() === 'resolved')) {\n                this._updateFrameStatus(imageId, true);\n            }\n        }*/\n    }\n\n    _getImageLoadedEventName() {\n        return 'cornerstoneimageloaded.' + this.id;\n    }\n\n    _getImageCachePromiseRemoveEventName() {\n        return 'cornerstoneimagecachepromiseremoved.' + this.id;\n    }\n\n    startListening() {\n        const imageLoadedEventName = this._getImageLoadedEventName();\n        const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n        const imageLoadedEventHandle = this._imageLoadedEventHandle.bind(this);\n        const imageCachePromiseRemovedEventHandle = this._imageCachePromiseRemovedEventHandle.bind(this);\n\n        this.stopListening();\n\n        cornerstone.events.addEventListener(imageLoadedEventName, imageLoadedEventHandle);\n        cornerstone.events.addEventListener(imageCachePromiseRemovedEventName, imageCachePromiseRemovedEventHandle);\n    }\n\n    stopListening() {\n        const imageLoadedEventName = this._getImageLoadedEventName();\n        const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n        cornerstone.events.removeEventListener(imageLoadedEventName);\n        cornerstone.events.removeEventListener(imageCachePromiseRemovedEventName);\n    }\n\n    _updateFrameStatus(imageId, loaded) {\n        const imageData = this.imageDataMap.get(imageId);\n\n        if (!imageData || (imageData.loaded === loaded)) {\n            return;\n        }\n\n        // Add one more frame to the stats\n        if (loaded) {\n            this._addStatsData(1);\n        }\n\n        imageData.loaded = loaded;\n        this.framesStatus[imageData.index] = loaded;\n        this.loadedCount += loaded ? 1 : -1;\n        this._updateProgress();\n    }\n\n    _imageLoadedEventHandle(e) {\n        this._updateFrameStatus(e.detail.image.imageId, true);\n    }\n\n    _imageCachePromiseRemovedEventHandle(e) {\n        this._updateFrameStatus(e.detail.imageId, false);\n    }\n\n    _updateProgress() {\n        const totalFramesCount = this.stack.imageIds.length;\n        const loadedFramesCount = this.loadedCount;\n        const loadingFramesCount = totalFramesCount - loadedFramesCount;\n        const percentComplete = Math.round(loadedFramesCount / totalFramesCount * 100);\n        const progressSessionId = this._getProgressSessionId();\n\n        Session.set(progressSessionId, {\n            multiFrame: true,\n            totalFramesCount,\n            loadedFramesCount,\n            loadingFramesCount,\n            percentComplete,\n            framesPerSecond: this.stats.speed,\n            framesStatus: this.framesStatus\n        });\n    }\n\n    _logProgress() {\n        const totalFramesCount = this.stack.imageIds.length;\n        const displaySetInstanceUid = this.stack.displaySetInstanceUid;\n        let progressBar = '[';\n\n        for (let i = 0; i < totalFramesCount; i++) {\n            const ch = this.framesStatus[i] ? '|' : '.';\n            progressBar += `${ch}`;\n        }\n\n        progressBar += ']';\n        OHIF.log.info(`${displaySetInstanceUid}: ${progressBar}`);\n    }\n}\n\nclass StudyLoadingListener {\n    constructor() {\n        this.listeners = {};\n    }\n\n    addStack(stack, stackMetaData) {\n        const displaySetInstanceUid = stack.displaySetInstanceUid;\n\n        if (!this.listeners[displaySetInstanceUid]) {\n            const listener = this._createListener(stack, stackMetaData);\n            if (listener) {\n                this.listeners[displaySetInstanceUid] = listener;\n            }\n        }\n    }\n\n    addStudy(study) {\n        study.displaySets.forEach(displaySet => {\n            const stack = OHIF.viewerbase.stackManager.findOrCreateStack(study, displaySet);\n            this.addStack(stack, {\n                isMultiFrame: displaySet.isMultiFrame\n            });\n        });\n    }\n\n    addStudies(studies) {\n        if (!studies || !studies.length) {\n            return;\n        }\n\n        for (let i = 0; i < studies.length; i++) {\n            this.addStudy(studies[i]);\n        }\n    }\n\n    clear() {\n        const displaySetInstanceUids = Object.keys(this.listeners);\n        const length = displaySetInstanceUids.length;\n\n        for (let i = 0; i < length; i++) {\n            const displaySetInstanceUid = displaySetInstanceUids[i];\n            const displaySet = this.listeners[displaySetInstanceUid];\n\n            displaySet.destroy();\n        }\n\n        this.listeners = {};\n    }\n\n    _createListener(stack, stackMetaData) {\n        const schema = this._getSchema(stack);\n\n        // A StackLoadingListener can be created if it's wadors or not a multiframe\n        // wadouri instance (single file) that means \"N\" files will have to be\n        // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\n        // is created only if it's a single DICOM file and there's no way to know\n        // how many frames has already been loaded (bytes/s instead of frames/s).\n        if ((schema === 'wadors') || !stackMetaData.isMultiFrame) {\n            return new StackLoadingListener(stack);\n        } else {\n            return new DICOMFileLoadingListener(stack);\n        }\n    }\n\n    _getSchema(stack) {\n        const imageId = stack.imageIds[0];\n        const colonIndex = imageId.indexOf(':');\n        return imageId.substring(0, colonIndex);\n    }\n\n    // Singleton\n    static getInstance() {\n        if (!StudyLoadingListener._instance) {\n            StudyLoadingListener._instance = new StudyLoadingListener();\n        }\n\n        return StudyLoadingListener._instance;\n    }\n}\n\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\n","import { OHIFError } from './OHIFError';\n\n/**\n * Abstract class to fetch study metadata.\n */\nexport class StudyMetadataSource {\n\n    /**\n     * Get study metadata for a study with given study InstanceUID.\n     * @param {String} studyInstanceUID Study InstanceUID.\n     */\n    getByInstanceUID(studyInstanceUID) {\n        /**\n         * Please override this method on a specialized class.\n         */\n        throw new OHIFError('StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example');\n    }\n\n    /**\n     * Load study info and study metadata for a given study into the viewer.\n     * @param {StudySummary|StudyMetadata} study of StudySummary or StudyMetadata object.\n     */\n    loadStudy(study) {\n        /**\n         * Please override this method on a specialized class.\n         */\n        throw new OHIFError('StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example');\n    }\n\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { OHIFError } from './OHIFError';\nimport { StackManager } from '../StackManager.js';\nimport { getImageId } from '../getImageId.js';\n\nexport class StudyPrefetcher {\n\n    constructor(studies) {\n        this.studies = studies || [];\n        this.prefetchDisplaySetsTimeout = 300;\n        this.lastActiveViewportElement = null;\n        this.cacheFullHandlerBound = _.bind(this.cacheFullHandler, this);\n\n        cornerstone.events.addEventListener('cornerstoneimagecachefull.StudyPrefetcher', this.cacheFullHandlerBound);\n    }\n\n    destroy() {\n        this.stopPrefetching();\n        cornerstone.events.removeEventListener('cornerstoneimagecachefull.StudyPrefetcher', this.cacheFullHandlerBound);\n    }\n\n    static getInstance() {\n        if (!StudyPrefetcher.instance) {\n            StudyPrefetcher.instance = new StudyPrefetcher();\n        }\n\n        return StudyPrefetcher.instance;\n    }\n\n    setStudies(studies) {\n        this.stopPrefetching();\n        this.studies = studies;\n    }\n\n    prefetch() {\n        if (!this.studies || !this.studies.length) {\n            return;\n        }\n\n        this.stopPrefetching();\n        this.prefetchActiveViewport();\n        this.prefetchDisplaySets();\n    }\n\n    stopPrefetching() {\n        this.disableViewportPrefetch();\n        cornerstoneTools.requestPoolManager.clearRequestStack('prefetch');\n    }\n\n    prefetchActiveViewport() {\n        const activeViewportElement = OHIF.viewerbase.viewportUtils.getActiveViewportElement();\n        this.enablePrefetchOnElement(activeViewportElement);\n        this.attachActiveViewportListeners(activeViewportElement);\n    }\n\n    disableViewportPrefetch() {\n        $('.imageViewerViewport').each(function() {\n            if (!$(this).find('canvas').length) {\n                return;\n            }\n\n            cornerstoneTools.stackPrefetch.disable(this);\n        });\n    }\n\n    hasStack(element) {\n        const stack = cornerstoneTools.getToolState(element, 'stack');\n        return stack && stack.data.length && (stack.data[0].imageIds.length > 1);\n    }\n\n    /**\n     * This function enables stack prefetching for a specified element (viewport)\n     * It first disables any prefetching currently occurring on any other viewports.\n     *\n     * @param element {node} DOM Node representing the viewport element\n     */\n    enablePrefetchOnElement(element) {\n        if (!$(element).find('canvas').length) {\n            return;\n        }\n\n        // Make sure there is a stack to fetch\n        if (this.hasStack(element)) {\n            // Check if this is a clip or not\n            const activeViewportIndex = Session.get('activeViewport');\n            const displaySetInstanceUid = OHIF.viewer.data.loadedSeriesData[activeViewportIndex].displaySetInstanceUid;\n\n            const stack = StackManager.findStack(displaySetInstanceUid);\n\n            if (!stack) {\n                throw new OHIFError(`Requested stack ${displaySetInstanceUid} was not created`);\n            }\n\n            cornerstoneTools.stackPrefetch.enable(element);\n        }\n    }\n\n    attachActiveViewportListeners(activeViewportElement) {\n        function newImageHandler() {\n            // It needs to be called asynchronously because cornerstone does it at the same way.\n            // All instance urls to be prefetched will be removed again if we add them before\n            // Cornerstone callback (see stackPrefetch.onImageUpdated).\n            StudyPrefetcher.prefetchDisplaySetsAsync();\n        }\n\n        if (this.lastActiveViewportElement) {\n            this.lastActiveViewportElement.removeEventListener('cornerstonenewimage.StudyPrefetcher', newImageHandler);\n        }\n\n        activeViewportElement.removeEventListener('cornerstonenewimage.StudyPrefetcher', newImageHandler);\n\n        // Cornerstone will not attach an event listener if the element doesn't have a stack\n        if (this.hasStack(activeViewportElement)) {\n            activeViewportElement.addEventListener('cornerstonenewimage.StudyPrefetcher', newImageHandler);\n        }\n\n        this.lastActiveViewportElement = activeViewportElement;\n    }\n\n    prefetchDisplaySetsAsync(timeout) {\n        timeout = timeout || this.prefetchDisplaySetsTimeout;\n\n        clearTimeout(this.prefetchDisplaySetsHandler);\n        this.prefetchDisplaySetsHandler = setTimeout(() => {\n            this.prefetchDisplaySets();\n        }, timeout);\n    }\n\n    prefetchDisplaySets() {\n        const config = Meteor.settings.public.prefetch;\n        const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(config);\n        const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\n\n        this.prefetchImageIds(imageIds);\n    }\n\n    prefetchImageIds(imageIds) {\n        const nonCachedImageIds = this.filterCachedImageIds(imageIds);\n        const requestPoolManager = cornerstoneTools.requestPoolManager;\n        const requestType = 'prefetch';\n        const preventCache = false;\n        const noop = () => {};\n\n        nonCachedImageIds.forEach(imageId => {\n            requestPoolManager.addRequest({}, imageId, requestType, preventCache, noop, noop);\n        });\n\n        requestPoolManager.startGrabbing();\n    }\n\n    getActiveViewportImage() {\n        const element = OHIF.viewerbase.viewportUtils.getActiveViewportElement();\n\n        if (!element) {\n            return;\n        }\n\n        const enabledElement = cornerstone.getEnabledElement(element);\n        const image = enabledElement.image;\n\n        return image;\n    }\n\n    getStudy(image) {\n        const studyMetadata = cornerstone.metaData.get('study', image.imageId);\n        return OHIF.viewer.Studies.find(study => study.studyInstanceUid === studyMetadata.studyInstanceUid);\n    }\n\n    getSeries(study, image) {\n        const seriesMetadata = cornerstone.metaData.get('series', image.imageId);\n        const studyMetadata = OHIF.viewerbase.getStudyMetadata(study);\n\n        return studyMetadata.getSeriesByUID(seriesMetadata.seriesInstanceUid);\n    }\n\n    getInstance(series, image) {\n        const instanceMetadata = cornerstone.metaData.get('instance', image.imageId);\n        return series.getInstanceByUID(instanceMetadata.sopInstanceUid);\n    }\n\n    getActiveDisplaySet(displaySets, instance) {\n        return _.find(displaySets, displaySet => {\n            return _.some(displaySet.images, displaySetImage => {\n                return displaySetImage.sopInstanceUid === instance.sopInstanceUid;\n            });\n        });\n    }\n\n    getDisplaySetsToPrefetch(config) {\n        const image = this.getActiveViewportImage();\n\n        if (!image || !config || !config.displaySetCount) {\n            return [];\n        }\n\n        const study = this.getStudy(image);\n        const series = this.getSeries(study, image);\n        const instance = this.getInstance(series, image);\n        const displaySets = study.displaySets;\n        const activeDisplaySet = this.getActiveDisplaySet(displaySets, instance);\n        const prefetchMethodMap = {\n            topdown: 'getFirstDisplaySets',\n            downward: 'getNextDisplaySets',\n            closest: 'getClosestDisplaySets'\n        };\n\n        const prefetchOrder = config.order;\n        const methodName = prefetchMethodMap[prefetchOrder];\n        const getDisplaySets = this[methodName];\n\n        if (!getDisplaySets) {\n            if (prefetchOrder) {\n                OHIF.log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\n            }\n\n            return [];\n        }\n\n        return getDisplaySets.call(this, displaySets, activeDisplaySet, config.displaySetCount);\n    }\n\n    getFirstDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n        const length = displaySets.length;\n        const selectedDisplaySets = [];\n\n        for (let i = 0; (i < length) && displaySetCount; i++) {\n            const displaySet = displaySets[i];\n\n            if (displaySet !== activeDisplaySet) {\n                selectedDisplaySets.push(displaySet);\n                displaySetCount--;\n            }\n        }\n\n        return selectedDisplaySets;\n    }\n\n    getNextDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n        const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n        const begin = activeDisplaySetIndex + 1;\n        const end = Math.min(begin + displaySetCount, displaySets.length);\n\n        return displaySets.slice(begin, end);\n    }\n\n    getClosestDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n        const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n        const length = displaySets.length;\n        const selectedDisplaySets = [];\n        let left = activeDisplaySetIndex - 1;\n        let right = activeDisplaySetIndex + 1;\n\n        while (((left >= 0) || (right < length)) && displaySetCount) {\n            if (left >= 0) {\n                selectedDisplaySets.push(displaySets[left]);\n                displaySetCount--;\n                left--;\n            }\n\n            if ((right < length) && displaySetCount) {\n                selectedDisplaySets.push(displaySets[right]);\n                displaySetCount--;\n                right++;\n            }\n        }\n\n        return selectedDisplaySets;\n    }\n\n    getImageIdsFromDisplaySets(displaySets) {\n        let imageIds = [];\n\n        displaySets.forEach(displaySet => {\n            imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\n        });\n\n        return imageIds;\n    }\n\n    getImageIdsFromDisplaySet(displaySet) {\n        const imageIds = [];\n\n        displaySet.images.forEach(image => {\n            const numFrames = image.numFrames;\n            if (numFrames > 1) {\n                for (let i = 0; i < numFrames; i++) {\n                    let imageId = getImageId(image, i);\n                    imageIds.push(imageId);\n                }\n            } else {\n                let imageId = getImageId(image);\n                imageIds.push(imageId);\n            }\n        });\n\n        return imageIds;\n    }\n\n    filterCachedImageIds(imageIds) {\n        return _.filter(imageIds, imageId => {\n            return !this.isImageCached(imageId);\n        });\n    }\n\n    isImageCached(imageId) {\n        const image = cornerstone.imageCache.imageCache[imageId];\n        return image && image.sizeInBytes;\n    }\n\n    cacheFullHandler() {\n        OHIF.log.warn('Cache full');\n        this.stopPrefetching();\n    }\n\n}\n","import { Random } from 'meteor/random';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\n/**\n * Constants\n */\n\nconst PROPERTY_SEPARATOR = '.';\nconst ORDER_ASC = 'asc';\nconst ORDER_DESC = 'desc';\nconst MIN_COUNT = 0x00000000;\nconst MAX_COUNT = 0x7FFFFFFF;\n\n/**\n * Class Definition\n */\n\nexport class TypeSafeCollection {\n\n    constructor() {\n        this._operationCount = new ReactiveVar(MIN_COUNT);\n        this._elementList = [];\n        this._handlers = Object.create(null);\n    }\n\n    /**\n     * Private Methods\n     */\n\n    _invalidate() {\n        let count = this._operationCount.get();\n        this._operationCount.set(count < MAX_COUNT ? count + 1 : MIN_COUNT);\n    }\n\n    _elements(silent) {\n        (silent === true || this._operationCount.get());\n        return this._elementList;\n    }\n\n    _elementWithPayload(payload, silent) {\n        return this._elements(silent).find(item => item.payload === payload);\n    }\n\n    _elementWithId(id, silent) {\n        return this._elements(silent).find(item => item.id === id);\n    }\n\n    _trigger(event, data) {\n        let handlers = this._handlers;\n        if (event in handlers) {\n            handlers = handlers[event];\n            if (!(handlers instanceof Array)) {\n                return;\n            }\n            for (let i = 0, limit = handlers.length; i < limit; ++i) {\n                let handler = handlers[i];\n                if (_isFunction(handler)) {\n                    handler.call(null, data);\n                }\n            }\n        }\n    }\n\n    /**\n     * Public Methods\n     */\n\n    onInsert(callback) {\n        if (_isFunction(callback)) {\n            let handlers = this._handlers.insert;\n            if (!(handlers instanceof Array)) {\n                handlers = [];\n                this._handlers.insert = handlers;\n            }\n            handlers.push(callback);\n        }\n    }\n\n    /**\n     * Update the payload associated with the given ID to be the new supplied payload.\n     * @param {string} id The ID of the entry that will be updated.\n     * @param {any} payload The element that will replace the previous payload.\n     * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\n     */\n    updateById(id, payload) {\n        let result = false,\n            found = this._elementWithPayload(payload, true);\n        if (found) {\n            // nothing to do since the element is already in the collection...\n            if (found.id === id) {\n                // set result to true since the ids match...\n                result = true;\n                this._invalidate();\n            }\n        } else {\n            found = this._elementWithId(id, true);\n            if (found) {\n                found.payload = payload;\n                result = true;\n                this._invalidate();\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Signal that the given element has been changed by notifying reactive data-source observers.\n     * This method is basically a means to invalidate the inernal reactive data-source.\n     * @param {any} payload The element that has been altered.\n     * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\n     */\n    update(payload) {\n        let result = false,\n            found = this._elementWithPayload(payload, true);\n        if (found) {\n            // nothing to do since the element is already in the collection...\n            result = true;\n            this._invalidate();\n        }\n        return result;\n    }\n\n    /**\n     * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\n     * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\n     * @param {any} payload The element to be stored.\n     * @returns {string} The ID of the inserted element or null if the element already exists...\n     */\n    insert(payload) {\n        let id = null,\n            found = this._elementWithPayload(payload, true);\n        if (!found) {\n            id = Random.id();\n            this._elements(true).push({ id, payload });\n            this._invalidate();\n            this._trigger('insert', { id, data: payload });\n        }\n        return id;\n    }\n\n    /**\n     * Remove all elements from the collection.\n     * @returns {void} No meaningful value is returned.\n     */\n    removeAll() {\n        let all = this._elements(true),\n            length = all.length;\n        for (let i = length - 1; i >= 0; i--) {\n            let item = all[i];\n            delete item.id;\n            delete item.payload;\n            all[i] = null;\n        }\n        all.splice(0, length);\n        this._invalidate();\n    }\n\n    /**\n     * Remove elements from the collection that match the criteria given in the property map.\n     * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n     * @returns {Array} A list with all removed elements.\n     */\n    remove(propertyMap) {\n        let found = this.findAllEntriesBy(propertyMap),\n            foundCount = found.length,\n            removed = [];\n        if (foundCount > 0) {\n            const all = this._elements(true);\n            for (let i = foundCount - 1; i >= 0; i--) {\n                let item = found[i];\n                all.splice(item[2], 1);\n                removed.push(item[0]);\n            }\n            this._invalidate();\n        }\n        return removed;\n    }\n\n    /**\n     * Provides the ID of the given element inside the collection.\n     * @param {any} payload The element being searched for.\n     * @returns {string} The ID of the given element or undefined if the element is not present.\n     */\n    getElementId(payload) {\n        let found = this._elementWithPayload(payload);\n        return found && found.id;\n    }\n\n    /**\n     * Provides the position of the given element in the internal list returning -1 if the element is not present.\n     * @param {any} payload The element being searched for.\n     * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n     */\n    findById(id) {\n        let found = this._elementWithId(id);\n        return found && found.payload;\n    }\n\n    /**\n     * Provides the position of the given element in the internal list returning -1 if the element is not present.\n     * @param {any} payload The element being searched for.\n     * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n     */\n    indexOfElement(payload) {\n        return this._elements().indexOf(this._elementWithPayload(payload, true));\n    }\n\n    /**\n     * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\n     * @param {string} id The index of the element.\n     * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\n     */\n    indexOfId(id) {\n        return this._elements().indexOf(this._elementWithId(id, true));\n    }\n\n    /**\n     * Provides a list-like approach to the collection returning an element by index.\n     * @param {number} index The index of the element.\n     * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\n     */\n    getElementByIndex(index) {\n        let found = ((this._elements())[index >= 0 ? index : -1]);\n        return found && found.payload;\n    }\n\n    /**\n     * Find an element by a criteria defined by the given callback function.\n     * Attention!!! The reactive source will not be notified if no valid callback is supplied...\n     * @param {function} callback A callback function which will define the search criteria. The callback\n     * function will be passed the collection element, its ID and its index in this very order. The callback\n     * shall return true when its criterea has been fulfilled.\n     * @returns {any} The matched element or undefined if not match was found.\n     */\n    find(callback) {\n        let found;\n        if (_isFunction(callback)) {\n            found = this._elements().find((item, index) => {\n                return callback.call(this, item.payload, item.id, index);\n            });\n        }\n        return found && found.payload;\n    }\n\n    /**\n     * Find the first element that strictly matches the specified property map.\n     * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n     * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n     * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n     * but is not valid, an exception will be thrown.\n     * @returns {Any} The matched element or undefined if not match was found.\n     */\n    findBy(propertyMap, options) {\n        let found;\n        if (_isObject(options)) {\n            // if the \"options\" argument is provided and is a valid object,\n            // it must be applied to the dataset before search...\n            const all = this.all(options);\n            if (all.length > 0) {\n                if (_isObject(propertyMap)) {\n                    found = all.find(item => _compareToPropertyMapStrict(propertyMap, item));\n                } else {\n                    found = all[0]; // simply extract the first element...\n                }\n            }\n        } else if (_isObject(propertyMap)) {\n            found = this._elements().find(item => _compareToPropertyMapStrict(propertyMap, item.payload));\n            if (found) {\n                found = found.payload;\n            }\n        }\n        return found;\n    }\n\n    /**\n     * Find all elements that strictly match the specified property map.\n     * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n     * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n     * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\n     * in the array has the following format: [ elementData, elementId, elementIndex ].\n     */\n    findAllEntriesBy(propertyMap) {\n        const found = [];\n        if (_isObject(propertyMap)) {\n            this._elements().forEach((item, index) => {\n                if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\n                    // Match! Add it to the found list...\n                    found.push([ item.payload, item.id, index ]);\n                }\n            });\n        }\n        return found;\n    }\n\n    /**\n     * Find all elements that match a specified property map.\n     * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n     * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n     * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n     * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n     * but is not valid, an exception will be thrown.\n     * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\n     */\n    findAllBy(propertyMap, options) {\n        const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\n        if (_isObject(options)) {\n            if ('sort' in options) {\n                _sortListBy(found, options.sort);\n            }\n        }\n        return found;\n    }\n\n    /**\n     * Executes the supplied callback function for each element of the collection.\n     * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n     * @param {function} callback The callback function to be executed. The callback is passed the element,\n     * its ID and its index in this very order.\n     * @returns {void} Nothing is returned.\n     */\n    forEach(callback) {\n        if (_isFunction(callback)) {\n            this._elements().forEach((item, index) => {\n                callback.call(this, item.payload, item.id, index);\n            });\n        }\n    }\n\n    /**\n     * Count the number of elements currently in the collection.\n     * @returns {number} The current number of elements in the collection.\n     */\n    count() {\n        return this._elements().length;\n    }\n\n    /**\n     * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\n     * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n     * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n     * but is not valid, an exception will be thrown.\n     * @returns {Array} An array with all elements stored in the collection.\n     */\n    all(options) {\n        let list = this._elements().map(item => item.payload);\n        if (_isObject(options)) {\n            if ('sort' in options) {\n                _sortListBy(list, options.sort);\n            }\n        }\n        return list;\n    }\n\n}\n\n/**\n * Utility Functions\n */\n\n/**\n * Test if supplied argument is a valid object for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isObject(subject) {\n    return subject instanceof Object || typeof subject === 'object' && subject !== null;\n}\n\n/**\n * Test if supplied argument is a valid string for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isString(subject) {\n    return typeof subject === 'string';\n}\n\n/**\n * Test if supplied argument is a valid function for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isFunction(subject) {\n    return typeof subject === 'function';\n}\n\n/**\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\n * @param {Object} targetObject The object we want read the property from...\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\n * to read object.address.street.name or object.address.street.number, respectively);\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\n */\nfunction _getPropertyValue(targetObject, propertyName) {\n    let propertyValue; // undefined (the default return value)\n    if (_isObject(targetObject) && _isString(propertyName)) {\n        const fragments = propertyName.split(PROPERTY_SEPARATOR);\n        const fragmentCount = fragments.length;\n        if (fragmentCount > 0) {\n            const firstFragment = fragments[0];\n            const remainingFragments = fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\n            propertyValue = targetObject[firstFragment];\n            if (remainingFragments !== null) {\n                propertyValue = _getPropertyValue(propertyValue, remainingFragments);\n            }\n        }\n    }\n    return propertyValue;\n}\n\n/**\n * Compare a property map with a target object using strict comparison.\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\n * @param {Object} targetObject The target object whose properties will be tested.\n * @returns {boolean} Returns true if the properties match, false otherwise.\n */\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\n    let result = false;\n    // \"for in\" loops do not thown exceptions for invalid data types...\n    for (let propertyName in propertyMap) {\n        if (_hasOwnProperty.call(propertyMap, propertyName)) {\n            if (propertyMap[propertyName] !== _getPropertyValue(targetObject, propertyName)) {\n                result = false;\n                break;\n            } else if (result !== true) {\n                result = true;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Checks if a sorting specifier is valid.\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\n * in the format [\"property name\", \"sorting order\"].\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\n * @param {Array} specifiers The sorting specifier to be tested.\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\n */\nfunction _isValidSortingSpecifier(specifiers) {\n    let result = true;\n    if (specifiers instanceof Array && specifiers.length > 0) {\n        for (let i = specifiers.length - 1; i >= 0; i--) {\n            const item = specifiers[i];\n            if (item instanceof Array) {\n                const property = item[0];\n                const order = item[1];\n                if (_isString(property) && (order === ORDER_ASC || order === ORDER_DESC)) {\n                    continue;\n                }\n            }\n            result = false;\n            break;\n        }\n    }\n    return result;\n}\n\n/**\n * Sorts an array based on sorting specifier options.\n * @param {Array} list The that needs to be sorted.\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\n * @returns {void} No value is returned. The array is sorted in place.\n */\nfunction _sortListBy(list, specifiers) {\n    if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\n        const specifierCount = specifiers.length;\n        list.sort(function _sortListByCallback(a, b) { // callback name for stack traces...\n            let index = 0;\n            while (index < specifierCount) {\n                const specifier = specifiers[index];\n                const property = specifier[0];\n                const order = specifier[1] === ORDER_DESC ? -1 : 1;\n                const aValue = _getPropertyValue(a, property);\n                const bValue = _getPropertyValue(b, property);\n                // @TODO: should we check for the types being compared, like:\n                // ~~ if (typeof aValue !== typeof bValue) continue;\n                // Not sure because dates, for example, can be correctly compared to numbers...\n                if (aValue < bValue) {\n                    return order * -1;\n                }\n                if (aValue > bValue) {\n                    return order * 1;\n                }\n                if (++index >= specifierCount) {\n                    return 0;\n                }\n            }\n        });\n    } else {\n        throw new Error('Invalid Arguments');\n    }\n}\n","import { Metadata } from './Metadata';\nimport { OHIFError } from '../OHIFError';\n\n/**\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\n * possibly cause circular dependency issues.\n */\n\nconst UNDEFINED = 'undefined';\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst STUDY_INSTANCE_UID = 'x0020000d';\nconst SERIES_INSTANCE_UID = 'x0020000e';\n\nexport class InstanceMetadata extends Metadata {\n\n    constructor(data, uid) {\n        super(data, uid);\n        // Initialize Private Properties\n        Object.defineProperties(this, {\n            _sopInstanceUID: {\n                configurable: true, // configurable so that it can be redefined in sub-classes...\n                enumerable: false,\n                writable: true,\n                value: null\n            },\n            _imageId: {\n                configurable: true, // configurable so that it can be redefined in sub-classes...\n                enumerable: false,\n                writable: true,\n                value: null\n            }\n        });\n        // Initialize Public Properties\n        this._definePublicProperties();\n    }\n\n    /**\n     * Private Methods\n     */\n\n    /**\n     * Define Public Properties\n     * This method should only be called during initialization (inside the class constructor)\n     */\n    _definePublicProperties() {\n\n        /**\n         * Property: this.sopInstanceUID\n         * Same as this.getSOPInstanceUID()\n         * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n         * sopInstanceCollection.findBy({\n         *   sopInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n         * });\n         */\n        Object.defineProperty(this, 'sopInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            get: function() {\n                return this.getSOPInstanceUID();\n            }\n        });\n\n    }\n\n    /**\n     * Public Methods\n     */\n\n    /**\n     * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n     */\n    getStudyInstanceUID() {\n        return this.getTagValue(STUDY_INSTANCE_UID, null);\n    }\n\n    /**\n     * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n     */\n    getSeriesInstanceUID() {\n        return this.getTagValue(SERIES_INSTANCE_UID, null);\n    }\n\n    /**\n     * Returns the SOPInstanceUID of the current instance.\n     */\n    getSOPInstanceUID() {\n        return this._sopInstanceUID;\n    }\n\n    // @TODO: Improve this... (E.g.: blob data)\n    getStringValue(tagOrProperty, index, defaultValue) {\n        let value = this.getTagValue(tagOrProperty, defaultValue);\n\n        if (typeof value !== STRING && typeof value !== UNDEFINED) {\n            value = value.toString(); \n        }\n\n        return InstanceMetadata.getIndexedValue(value, index, defaultValue);\n    }\n\n    // @TODO: Improve this... (E.g.: blob data)\n    getFloatValue(tagOrProperty, index, defaultValue) {\n        let value = this.getTagValue(tagOrProperty, defaultValue);\n        value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n        if(value instanceof Array) {\n            value.forEach( (val, idx) => {\n                value[idx] = parseFloat(val);\n            });\n            \n            return value;\n        }\n\n        return typeof value === STRING ? parseFloat(value) : value;\n    }\n\n    // @TODO: Improve this... (E.g.: blob data)\n    getIntValue(tagOrProperty, index, defaultValue) {\n        let value = this.getTagValue(tagOrProperty, defaultValue);\n        value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n        if(value instanceof Array) {\n            value.forEach( (val, idx) => {\n                value[idx] = parseFloat(val);\n            });\n\n            return value;\n        }\n\n        return typeof value === STRING ? parseInt(value) : value;\n    }\n\n    /**\n     * @deprecated Please use getTagValue instead.\n     */\n    getRawValue(tagOrProperty, defaultValue) {\n        return this.getTagValue(tagOrProperty, defaultValue);\n    }\n\n    /**\n     * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\n     */\n    getTagValue(tagOrProperty, defaultValue) {\n        /**\n         * Please override this method on a specialized class.\n         */\n        throw new OHIFError('InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');\n    }\n\n    /**\n     * Compares the current instance with another one.\n     * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\n     * @returns {boolean} Returns true if both instances refer to the same instance.\n     */\n    equals(instance) {\n        const self = this;\n        return (\n            instance === self ||\n            (\n                instance instanceof InstanceMetadata &&\n                instance.getSOPInstanceUID() === self.getSOPInstanceUID()\n            )\n        );\n    }\n\n    /**\n     * Check if the tagOrProperty exists\n     * @param  {String} tagOrProperty tag or property be checked\n     * @return {Boolean}   True if the tag or property exists or false if doesn't\n     */\n    tagExists(tagOrProperty) {\n        /**\n         * Please override this method\n         */\n        throw new OHIFError('InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');\n    }\n\n    /**\n     * Get custom image id of a sop instance\n     * @return {Any}          sop instance image id\n     */\n    getImageId(frame) {\n        /**\n         * Please override this method\n         */\n        throw new OHIFError('InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');\n    }\n\n    /**\n     * Static Methods\n     */\n\n    /**\n     * Get an value based that can be index based. This function is called by all getters. See above functions.\n     *     - If value is a String and has indexes:\n     *         - If undefined index: returns an array of the split values.\n     *         - If defined index: \n     *             - If invalid: returns defaultValue\n     *             - If valid: returns the indexed value\n     *      - If value is not a String, returns default value.\n     */\n    static getIndexedValue(value, index, defaultValue) {\n        let result = defaultValue;\n\n        if (typeof value === STRING) {\n            const hasIndexValues = value.indexOf('\\\\') !== -1;\n\n            result = value;\n\n            if(hasIndexValues) {\n                const splitValues = value.split('\\\\');\n                if (Metadata.isValidIndex(index)) {\n                    const indexedValue = splitValues[index];\n\n                    result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\n                }\n                else {\n                    result = splitValues;\n                }\n            }\n        }\n\n        return result;\n    }\n\n}\n","\n/**\n * Constants\n */\n\nconst STRING = 'string';\nconst NUMBER = 'number';\nconst FUNCTION = 'function';\nconst OBJECT = 'object';\n\n/**\n * Class Definition\n */\n\nexport class Metadata {\n\n    /**\n     * Constructor and Instance Methods\n     */\n\n    constructor(data, uid) {\n        // Define the main \"_data\" private property as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_data', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: data\n        });\n\n        // Define the main \"_uid\" private property as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_uid', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: uid\n        });\n\n        // Define \"_custom\" properties as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_custom', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: Object.create(null)\n        });\n    }\n\n    getData() {\n        return this._data;\n    }\n\n    getDataProperty(propertyName) {\n        let propertyValue;\n        const _data = this._data;\n        if (_data instanceof Object || typeof _data === OBJECT && _data !== null) {\n            propertyValue = _data[propertyName];\n        }\n        return propertyValue;\n    }\n\n    /**\n     * Get unique object ID\n     */\n    getObjectID() {\n        return this._uid;\n    }\n\n    /**\n     * Set custom attribute value\n     * @param {String} attribute Custom attribute name\n     * @param {Any} value     Custom attribute value\n     */\n    setCustomAttribute(attribute, value) {\n        this._custom[attribute] = value;\n    }\n\n    /**\n     * Get custom attribute value\n     * @param  {String} attribute Custom attribute name\n     * @return {Any}              Custom attribute value\n     */\n    getCustomAttribute(attribute) {\n        return this._custom[attribute];\n    }\n\n    /**\n     * Check if a custom attribute exists\n     * @param  {String} attribute Custom attribute name\n     * @return {Boolean}          True if custom attribute exists or false if not\n     */\n    customAttributeExists(attribute) {\n        return attribute in this._custom;\n    }\n\n    /**\n     * Set custom attributes in batch mode.\n     * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\n     */\n    setCustomAttributes(attributeMap) {\n        const _hasOwn = Object.prototype.hasOwnProperty;\n        const _custom = this._custom;\n        for (let attribute in attributeMap) {\n            if (_hasOwn.call(attributeMap, attribute)) {\n                _custom[attribute] = attributeMap[attribute];\n            }\n        }\n    }\n\n    /**\n     * Static Methods\n     */\n\n    static isValidUID(uid) {\n        return typeof uid === STRING && uid.length > 0;\n    }\n\n    static isValidIndex(index) {\n        return typeof index === NUMBER && index >= 0 && (index | 0) === index;\n    }\n\n    static isValidCallback(callback) {\n        return typeof callback === FUNCTION;\n    }\n\n}\n","import { Metadata } from './Metadata';\nimport { InstanceMetadata } from './InstanceMetadata';\n\nexport class SeriesMetadata extends Metadata {\n\n    constructor(data, uid) {\n        super(data, uid);\n        // Initialize Private Properties\n        Object.defineProperties(this, {\n            _seriesInstanceUID: {\n                configurable: true, // configurable so that it can be redefined in sub-classes...\n                enumerable: false,\n                writable: true,\n                value: null\n            },\n            _instances: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: []\n            },\n            _firstInstance: {\n                configurable: false,\n                enumerable: false,\n                writable: true,\n                value: null\n            }\n        });\n        // Initialize Public Properties\n        this._definePublicProperties();\n    }\n\n    /**\n     * Private Methods\n     */\n\n    /**\n     * Define Public Properties\n     * This method should only be called during initialization (inside the class constructor)\n     */\n    _definePublicProperties() {\n\n        /**\n         * Property: this.seriesInstanceUID\n         * Same as this.getSeriesInstanceUID()\n         * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n         * seriesCollection.findBy({\n         *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n         * });\n         */\n        Object.defineProperty(this, 'seriesInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            get: function() {\n                return this.getSeriesInstanceUID();\n            }\n        });\n\n    }\n\n    /**\n     * Public Methods\n     */\n\n    /**\n     * Returns the SeriesInstanceUID of the current series.\n     */\n    getSeriesInstanceUID() {\n        return this._seriesInstanceUID;\n    }\n\n    /**\n     * Append an instance to the current series.\n     * @param {InstanceMetadata} instance The instance to be added to the current series.\n     * @returns {boolean} Returns true on success, false otherwise.\n     */\n    addInstance(instance) {\n        let result = false;\n        if (instance instanceof InstanceMetadata && this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0) {\n            this._instances.push(instance);\n            result = true;\n        }\n        return result;\n    }\n\n    /**\n     * Get the first instance of the current series retaining a consistent result across multiple calls.\n     * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n     */\n    getFirstInstance() {\n        let instance = this._firstInstance;\n        if (!(instance instanceof InstanceMetadata)) {\n            instance = null;\n            const found = this.getInstanceByIndex(0);\n            if (found instanceof InstanceMetadata) {\n                this._firstInstance = found;\n                instance = found;\n            }\n        }\n        return instance;\n    }\n\n    /**\n     * Find an instance by index.\n     * @param {number} index An integer representing a list index.\n     * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n     */\n    getInstanceByIndex(index) {\n        let found; // undefined by default...\n        if (Metadata.isValidIndex(index)) {\n            found = this._instances[index];\n        }\n        return found;\n    }\n\n    /**\n     * Find an instance by SOPInstanceUID.\n     * @param {string} uid An UID string.\n     * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n     */\n    getInstanceByUID(uid) {\n        let found; // undefined by default...\n        if (Metadata.isValidUID(uid)) {\n            found = this._instances.find(instance => {\n                return instance.getSOPInstanceUID() === uid;\n            });\n        }\n        return found;\n    }\n\n    /**\n     * Retrieve the number of instances within the current series.\n     * @returns {number} The number of instances in the current series.\n     */\n    getInstanceCount() {\n        return this._instances.length;\n    }\n\n    /**\n     * Invokes the supplied callback for each instance in the current series passing\n     * two arguments: instance (an InstanceMetadata instance) and index (the integer\n     * index of the instance within the current series)\n     * @param {function} callback The callback function which will be invoked for each instance in the series.\n     * @returns {undefined} Nothing is returned.\n     */\n    forEachInstance(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            this._instances.forEach((instance, index) => {\n                callback.call(null, instance, index);\n            });\n        }\n    }\n\n    /**\n     * Find the index of an instance inside the series.\n     * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\n     * @returns {number} The index of the instance inside the series or -1 if not found.\n     */\n    indexOfInstance(instance) {\n        return this._instances.indexOf(instance);\n    }\n\n    /**\n     * Search the associated instances using the supplied callback as criteria. The callback is passed\n     * two arguments: instance (a InstanceMetadata instance) and index (the integer\n     * index of the instance within its series)\n     * @param {function} callback The callback function which will be invoked for each instance.\n     * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n     *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n     */\n    findInstance(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            return this._instances.find((instance, index) => {\n                return callback.call(null, instance, index);\n            });\n        }\n    }\n\n    /**\n     * Compares the current series with another one.\n     * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n     * @returns {boolean} Returns true if both instances refer to the same series.\n     */\n    equals(series) {\n        const self = this;\n        return (\n            series === self ||\n            (\n                series instanceof SeriesMetadata &&\n                series.getSeriesInstanceUID() === self.getSeriesInstanceUID()\n            )\n        );\n    }\n\n}\n","import { Metadata } from './Metadata';\nimport { SeriesMetadata } from './SeriesMetadata';\nimport { InstanceMetadata } from './InstanceMetadata';\nimport { ImageSet } from '../ImageSet';\nimport { OHIFError } from '../OHIFError';\n\nexport class StudyMetadata extends Metadata {\n\n    constructor(data, uid) {\n        super(data, uid);\n        // Initialize Private Properties\n        Object.defineProperties(this, {\n            _studyInstanceUID: {\n                configurable: true, // configurable so that it can be redefined in sub-classes...\n                enumerable: false,\n                writable: true,\n                value: null\n            },\n            _series: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: []\n            },\n            _displaySets: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: []\n            },\n            _firstSeries: {\n                configurable: false,\n                enumerable: false,\n                writable: true,\n                value: null\n            },\n            _firstInstance: {\n                configurable: false,\n                enumerable: false,\n                writable: true,\n                value: null\n            }\n        });\n        // Initialize Public Properties\n        this._definePublicProperties();\n    }\n\n    /**\n     * Private Methods\n     */\n\n    /**\n     * Define Public Properties\n     * This method should only be called during initialization (inside the class constructor)\n     */\n    _definePublicProperties() {\n\n        /**\n         * Property: this.studyInstanceUID\n         * Same as this.getStudyInstanceUID()\n         * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n         * studyCollection.findBy({\n         *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n         * });\n         */\n        Object.defineProperty(this, 'studyInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            get: function() {\n                return this.getStudyInstanceUID();\n            }\n        });\n\n    }\n\n    /**\n     * Public Methods\n     */\n\n    /**\n     * Getter for displaySets\n     * @return {Array} Array of display set object\n     */\n    getDisplaySets() {\n        return this._displaySets.slice();\n    }\n\n    /**\n     * Set display sets\n     * @param {Array} displaySets Array of display sets (ImageSet[])\n     */\n    setDisplaySets(displaySets) {\n        displaySets.forEach(displaySet => this.addDisplaySet(displaySet));\n    }\n\n    /**\n     * Add a single display set to the list\n     * @param {Object} displaySet Display set object\n     * @returns {boolean} True on success, false on failure.\n     */\n    addDisplaySet(displaySet) {\n        if (displaySet instanceof ImageSet) {\n            this._displaySets.push(displaySet);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes the supplied callback for each display set in the current study passing\n     * two arguments: display set (a ImageSet instance) and index (the integer\n     * index of the display set within the current study)\n     * @param {function} callback The callback function which will be invoked for each display set instance.\n     * @returns {undefined} Nothing is returned.\n     */\n    forEachDisplaySet(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            this._displaySets.forEach((displaySet, index) => {\n                callback.call(null, displaySet, index);\n            });\n        }\n    }\n\n    /**\n     * Search the associated display sets using the supplied callback as criteria. The callback is passed\n     * two arguments: display set (a ImageSet instance) and index (the integer\n     * index of the display set within the current study)\n     * @param {function} callback The callback function which will be invoked for each display set instance.\n     * @returns {undefined} Nothing is returned.\n     */\n    findDisplaySet(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            return this._displaySets.find((displaySet, index) => {\n                return callback.call(null, displaySet, index);\n            });\n        }\n    }\n\n    /**\n     * Retrieve the number of display sets within the current study.\n     * @returns {number} The number of display sets in the current study.\n     */\n    getDisplaySetCount() {\n        return this._displaySets.length;\n    }\n\n    /**\n     * Returns the StudyInstanceUID of the current study.\n     */\n    getStudyInstanceUID() {\n        return this._studyInstanceUID;\n    }\n\n    /**\n     * Getter for series\n     * @return {Array} Array of SeriesMetadata object\n     */\n    getSeries() {\n        return this._series.slice();\n    }\n\n    /**\n     * Append a series to the current study.\n     * @param {SeriesMetadata} series The series to be added to the current study.\n     * @returns {boolean} Returns true on success, false otherwise.\n     */\n    addSeries(series) {\n        let result = false;\n        if (series instanceof SeriesMetadata && this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0) {\n            this._series.push(series);\n            result = true;\n        }\n        return result;\n    }\n\n    /**\n     * Find a series by index.\n     * @param {number} index An integer representing a list index.\n     * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n     */\n    getSeriesByIndex(index) {\n        let found; // undefined by default...\n        if (Metadata.isValidIndex(index)) {\n            found = this._series[index];\n        }\n        return found;\n    }\n\n    /**\n     * Find a series by SeriesInstanceUID.\n     * @param {string} uid An UID string.\n     * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n     */\n    getSeriesByUID(uid) {\n        let found; // undefined by default...\n        if (Metadata.isValidUID(uid)) {\n            found = this._series.find(series => {\n                return series.getSeriesInstanceUID() === uid;\n            });\n        }\n        return found;\n    }\n\n    /**\n     * Retrieve the number of series within the current study.\n     * @returns {number} The number of series in the current study.\n     */\n    getSeriesCount() {\n        return this._series.length;\n    }\n\n    /**\n     * Retrieve the number of instances within the current study.\n     * @returns {number} The number of instances in the current study.\n     */\n    getInstanceCount() {\n        return this._series.reduce((sum, series) => {\n            return sum + series.getInstanceCount();\n        }, 0);\n    }\n\n    /**\n     * Invokes the supplied callback for each series in the current study passing\n     * two arguments: series (a SeriesMetadata instance) and index (the integer\n     * index of the series within the current study)\n     * @param {function} callback The callback function which will be invoked for each series instance.\n     * @returns {undefined} Nothing is returned.\n     */\n    forEachSeries(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            this._series.forEach((series, index) => {\n                callback.call(null, series, index);\n            });\n        }\n    }\n\n    /**\n     * Find the index of a series inside the study.\n     * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n     * @returns {number} The index of the series inside the study or -1 if not found.\n     */\n    indexOfSeries(series) {\n        return this._series.indexOf(series);\n    }\n\n    /**\n     * It sorts the series based on display sets order. Each series must be an instance \n     * of SeriesMetadata and each display sets must be an instance of ImageSet.\n     * Useful example of usage: \n     *     Study data provided by backend does not sort series at all and client-side \n     *     needs series sorted by the same criteria used for sorting display sets.\n     */\n    sortSeriesByDisplaySets() {\n\n        // Object for mapping display sets' index by seriesInstanceUid\n        const displaySetsMapping = {};\n\n        // Loop through each display set to create the mapping\n        this.forEachDisplaySet( (displaySet, index) => {\n\n            if (!(displaySet instanceof ImageSet)) {\n              throw new OHIFError(`StudyMetadata::sortSeriesByDisplaySets display set at index ${index} is not an instance of ImageSet`);\n            }\n\n            // In case of multiframe studies, just get the first index occurence\n            if (displaySetsMapping[displaySet.seriesInstanceUid] === void 0) {\n                displaySetsMapping[displaySet.seriesInstanceUid] = index;\n            }\n        });\n\n        // Clone of actual series\n        const actualSeries = this.getSeries();\n\n        actualSeries.forEach( (series, index) => {\n\n            if (!(series instanceof SeriesMetadata)) {\n              throw new OHIFError(`StudyMetadata::sortSeriesByDisplaySets series at index ${index} is not an instance of SeriesMetadata`);\n            }\n\n            // Get the new series index\n            const seriesIndex = displaySetsMapping[series.getSeriesInstanceUID()];\n\n            // Update the series object with the new series position\n            this._series[seriesIndex] = series;\n        });\n    }\n\n    /**\n     * Compares the current study instance with another one.\n     * @param {StudyMetadata} study An instance of the StudyMetadata class.\n     * @returns {boolean} Returns true if both instances refer to the same study.\n     */\n    equals(study) {\n        const self = this;\n        return (\n            study === self ||\n            (\n                study instanceof StudyMetadata &&\n                study.getStudyInstanceUID() === self.getStudyInstanceUID()\n            )\n        );\n    }\n\n    /**\n     * Get the first series of the current study retaining a consistent result across multiple calls.\n     * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\n     */\n    getFirstSeries() {\n        let series = this._firstSeries;\n        if (!(series instanceof SeriesMetadata)) {\n            series = null;\n            const found = this.getSeriesByIndex(0);\n            if (found instanceof SeriesMetadata) {\n                this._firstSeries = found;\n                series = found;\n            }\n        }\n        return series;\n    }\n\n    /**\n     * Get the first instance of the current study retaining a consistent result across multiple calls.\n     * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n     */\n    getFirstInstance() {\n        let instance = this._firstInstance;\n        if (!(instance instanceof InstanceMetadata)) {\n            instance = null;\n            const firstSeries = this.getFirstSeries();\n            if (firstSeries instanceof SeriesMetadata) {\n                const found = firstSeries.getFirstInstance();\n                if (found instanceof InstanceMetadata) {\n                    this._firstInstance = found;\n                    instance = found;\n                }\n            }\n        }\n        return instance;\n    }\n\n     /**\n     * Search the associated series to find an specific instance using the supplied callback as criteria.\n     * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\n     * index of the instance within the current series)\n     * @param {function} callback The callback function which will be invoked for each instance instance.\n     * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata) \n     *                   objects or an empty object if not found.\n     */\n    findSeriesAndInstanceByInstance(callback) {\n        let result;\n\n        if (Metadata.isValidCallback(callback)) {\n            let instance;\n\n            const series = this._series.find(series => {\n                instance = series.findInstance(callback);\n                return instance instanceof InstanceMetadata;\n            });\n\n            // No series found\n            if (series instanceof SeriesMetadata) {\n                result = {\n                    series,\n                    instance\n                };\n            }\n        }\n\n        return result || {};\n    }\n\n    /**\n     * Find series by instance using the supplied callback as criteria. The callback is passed\n     * two arguments: instance (a InstanceMetadata instance) and index (the integer index of \n     * the instance within its series)\n     * @param {function} callback The callback function which will be invoked for each instance.\n     * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\n     *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\n     */\n    findSeriesByInstance(callback) {\n        const result = this.findSeriesAndInstanceByInstance(callback);\n\n        return result.series;\n    }\n\n    /**\n     * Find an instance using the supplied callback as criteria. The callback is passed\n     * two arguments: instance (a InstanceMetadata instance) and index (the integer index of \n     * the instance within its series)\n     * @param {function} callback The callback function which will be invoked for each instance.\n     * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n     *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n     */\n    findInstance(callback) {\n        const result = this.findSeriesAndInstanceByInstance(callback);\n\n        return result.instance;\n    }\n\n   \n\n}\n","import { Metadata } from './Metadata';\nimport { OHIFError } from '../OHIFError';\nimport { DICOMTagDescriptions } from '../../DICOMTagDescriptions';\n\n/**\n * Constants\n */\n\nconst STUDY_INSTANCE_UID = 'x0020000d';\n\n/**\n * Class Definition\n */\n\nexport class StudySummary extends Metadata {\n\n    constructor(tagMap, attributeMap, uid) {\n\n        // Call the superclass constructor passing an plain object with no prototype to be used as the main \"_data\" attribute.\n        const _data = Object.create(null);\n        super(_data, uid);\n\n        // Initialize internal tag map if first argument is given.\n        if (tagMap !== void 0) {\n            this.addTags(tagMap);\n        }\n\n        // Initialize internal property map if second argument is given.\n        if (attributeMap !== void 0) {\n            this.setCustomAttributes(attributeMap);\n        }\n\n    }\n\n    getStudyInstanceUID() {\n        // This method should return null if StudyInstanceUID is not available to keep compatibility StudyMetadata API\n        return this.getTagValue(STUDY_INSTANCE_UID) || null;\n    }\n\n    /**\n     * Append tags to internal tag map.\n     * @param {Object} tagMap An object whose own properties will be used as tag values and appended to internal tag map.\n     */\n    addTags(tagMap) {\n        const _hasOwn = Object.prototype.hasOwnProperty;\n        const _data = this._data;\n        for (let tag in tagMap) {\n            if (_hasOwn.call(tagMap, tag)) {\n                const description = DICOMTagDescriptions.find(tag);\n                // When a description is available, use its tag as internal key...\n                if (description) {\n                    _data[description.tag] = tagMap[tag];\n                } else {\n                    _data[tag] = tagMap[tag];\n                }\n            }\n        }\n    }\n\n    tagExists(tagName) {\n        const _data = this._data;\n        const description = DICOMTagDescriptions.find(tagName);\n        if (description) {\n            return (description.tag in _data);\n        }\n        return (tagName in _data);\n    }\n\n    getTagValue(tagName) {\n        const _data = this._data;\n        const description = DICOMTagDescriptions.find(tagName);\n        if (description) {\n            return _data[description.tag];\n        }\n        return _data[tagName];\n    }\n\n}\n","export class WadoRsMetaDataBuilder {\n    constructor() {\n        this.tags = {};\n    }\n\n    addTag(tag, value, multi) {\n        this.tags[tag] = {\n            tag,\n            value,\n            multi\n        };\n\n        return this;\n    }\n\n    toJSON() {\n        const json = {};\n        const keys = Object.keys(this.tags);\n\n        keys.forEach(key => {\n            if (!this.tags.hasOwnProperty(key)) {\n                return;\n            }\n\n            const tag = this.tags[key];\n            const multi = !!tag.multi;\n            let value = tag.value;\n\n            if ((value == null) || ((value.length === 1) && (value[0] == null))) {\n                return;\n            }\n\n            if ((typeof value === 'string') && multi) {\n                value = value.split('\\\\');\n            }\n\n            if (!_.isArray(value)) {\n                value = [value];\n            }\n\n            json[key] = {\n                Value: value\n            };\n        });\n\n        return json;\n    }\n}\n","import { Blaze } from 'meteor/blaze';\n\n/**\n * A global Blaze UI helper to capitalizes the first letter of an input String\n *\n * Credit to:\n *\n * http://stackoverflow.com/questions/1026069/capitalize-the-first-letter-of-string-in-javascript\n */\nBlaze.registerHelper('capitalizeFirstLetter', function (context) {\n    if (!context) {\n        return;\n    }\n\n    return context.charAt(0).toUpperCase() + context.slice(1);\n});\n","import { Blaze } from 'meteor/blaze';\nimport { moment } from 'meteor/momentjs:moment';\n\n/**\n * A global Blaze UI helper function to format DICOM Dates using the Moment library\n */\n\nconst formatDA = (context, format, options) => {\n    if (!context) {\n        return undefined;\n    }\n    var dateAsMoment = moment(context, \"YYYYMMDD\");\n    var strFormat = \"MMM D, YYYY\";\n    if (options) {\n        strFormat = format;\n    }\n    return dateAsMoment.format(strFormat);\n};\n\n// Check if global helper already exists to not override it\nif (!Blaze._getGlobalHelper('formatDA')) {\n  Blaze.registerHelper('formatDA', formatDA);\n}\n\nexport { formatDA };\n","import { Blaze } from 'meteor/blaze';\nimport { moment } from 'meteor/momentjs:moment';\n\n/**\n * A global Blaze UI helper function to format JavaScript Dates using the Moment library\n */\nBlaze.registerHelper('formatJSDate', function(context, format, options) {\n    if (!context) {\n        return;\n    }\n\n    var dateAsMoment = moment(new Date(context));\n    var strFormat = 'MMM D, YYYY';\n    if (options) {\n        strFormat = format;\n    }\n\n    return dateAsMoment.format(strFormat);\n});\n","import { Blaze } from 'meteor/blaze';\n\n/**\n * A global Blaze UI helper to format a float value to a specified precision\n */\nBlaze.registerHelper('formatNumberPrecision', function(context, precision) {\n    if (context != null) {\n        return parseFloat(context).toFixed(precision);\n    }\n});\n","import { Blaze } from 'meteor/blaze';\n/**\n * Formats a patient name for display purposes\n */\nconst formatPN = context => {\n    if (!context) {\n        return;\n    }\n\n    return context.replace('^', ', ');\n};\n\n/**\n * A global Blaze UI helper to format a patient name for display purposes\n */\n\n// Check if global helper already exists to not override it\nif (!Blaze._getGlobalHelper('formatPN')) {\n    Blaze.registerHelper('formatPN', formatPN);\n}\n\nexport { formatPN };\n","import { Blaze } from 'meteor/blaze';\nimport { moment } from 'meteor/momentjs:moment';\n\n/**\n * A global Blaze UI helper to format a DICOM Time for display using the Moment library\n */\n\nconst formatTM = (context, options) => {\n    if (!context) {\n        return;\n    }\n\n    // DICOM Time is stored as HHmmss.SSS, where: \n    //      HH 24 hour time:\n    //      m mm    0..59   Minutes\n    //      s ss    0..59   Seconds\n    //      S SS SSS    0..999  Fractional seconds\n    //\n    // See MomentJS: http://momentjs.com/docs/#/parsing/string-format/\n    var dateTime = moment(context, 'HHmmss.SSS');\n\n    var format = \"HH:mm:ss\";\n    if (options && options.format) {\n        format = options.format;\n    }\n\n    return dateTime.format(format);\n};\n\n// Check if global helper already exists to not override it\nif (!Blaze._getGlobalHelper('formatTM')) {\n    Blaze.registerHelper('formatTM', formatTM);\n}\n\nexport { formatTM };\n","import { Meteor } from 'meteor/meteor';\nimport { Blaze } from 'meteor/blaze';\n\n/**\n * Helper for retrieving username given userId\n */\nBlaze.registerHelper('getUsername', function(userId) {\n    var user = Meteor.users.findOne({\n        userId: userId\n    });\n\n    if (user && user.name) {\n        return user.name;\n    }\n});\n","import { Blaze } from 'meteor/blaze';\n\n/**\n * Helper for checking datatype of a variable\n */\nBlaze.registerHelper('ifTypeIs', function(value, match, attributeName) {\n    if (typeof(value) === match) {\n        return attributeName;\n    }\n\n    return '';\n});\n","import { Blaze } from 'meteor/blaze';\n\nBlaze.registerHelper('inc', function(value) {\n    return parseInt(value) + 1;\n});\n","/**\n * Helpers with exposed symbols...\n */\n\nimport { isTouchDevice } from './isTouchDevice';\nimport { formatPN } from './formatPN';\nimport { formatDA } from './formatDA';\nimport { formatTM } from './formatTM';\n\n/**\n * Helpers with side effects only...\n */\n\nimport './formatJSDate';\nimport './jsDateFromNow';\nimport './formatNumberPrecision';\nimport './inc';\nimport './isDisplaySetActive';\nimport './getUsername';\nimport './capitalizeFirstLetter';\nimport './objectToPairs';\nimport './objectEach';\nimport './ifTypeIs';\nimport './prettyPrintStringify';\nimport './sorting';\nimport './studyThumbnails';\n\n/**\n * Exposed interface...\n */\n\nconst helpers = {\n    isTouchDevice,\n    formatPN,\n    formatDA,\n    formatTM\n};\n\nexport { helpers };\n","import { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\nimport { _ } from 'meteor/underscore';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n\n/**\n * Boolean helper to identify if a series instance is active in some viewport\n */\nTemplate.registerHelper('isDisplaySetActive', (displaySetInstanceUid, viewportIndex) => {\n    // Run this computation every time the viewports are updated\n    Session.get('LayoutManagerUpdated');\n\n    // Stop here if layoutManager is not defined yet\n    if (!OHIF.viewerbase.layoutManager) {\n        return;\n    }\n\n    // Check if the display set is current visible in any of the layout\n    // manager's displayed viewports. Note that we have to check the \n    // onscreen number of viewports here, since the layout manager will\n    // keep the viewport data of old viewports, even after the layout is changed.\n    //\n    // This behaviour is intentional. If the user displays four viewports, then assigns\n    // display sets to them, and then switches to / from another layout configuration,\n    // we don't want them to lose their specified viewports.\n    let result = false;\n    if (_.isUndefined(viewportIndex)) {\n        // Get the number of viewports that are currently displayed\n        // (Note, viewportData may have more entries!)\n        const currentNumberOfViewports = OHIF.viewerbase.layoutManager.getNumberOfViewports();\n\n        // Loop through the viewport data up until the currently displayed\n        // number of viewports\n        const viewportData = OHIF.viewerbase.layoutManager.viewportData;\n        for (let i = 0; i < currentNumberOfViewports; i++) {\n            const data = viewportData[i];\n\n            // If the display set is displayed in this viewport and is active, stop here\n            if (data && data.displaySetInstanceUid === displaySetInstanceUid) {\n                result = true;\n                break;\n            }\n        }\n    } else {\n        const data = OHIF.viewerbase.layoutManager.viewportData[viewportIndex];\n\n        // If the display set is displayed in this viewport, stop here\n        if (data && data.displaySetInstanceUid === displaySetInstanceUid) {\n            result = true;\n        }\n    }\n\n    return result;\n});\n","import { Blaze } from 'meteor/blaze';\n\n/**\n * Helper function to determine if the current client devices\n * is touch-capable. This can be used to modify certain aspects of the UI.\n *\n * The check may not work on all devices!\n *\n * @returns {boolean} true if the client device is touch-capable, false otherwise\n */\nconst isTouchDevice = () => {\n    return (('ontouchstart' in window) ||\n    (navigator.MaxTouchPoints > 0) ||\n    (navigator.msMaxTouchPoints > 0));\n};\n\n/**\n * Blaze helper for checking if the current device is touch capable\n *\n * @returns {boolean} true if the client device is touch-capable, false otherwise\n */\nBlaze.registerHelper('isTouchDevice', isTouchDevice);\n\nexport { isTouchDevice };\n","import { Blaze } from 'meteor/blaze';\nimport { Session } from 'meteor/session';\nimport { moment } from 'meteor/momentjs:moment';\n\n/**\n * A global Blaze UI helper function to format JavaScript Dates using the Moment library\n */\nBlaze.registerHelper('jsDateFromNow', function(context, format, options) {\n    if (!context) {\n        return;\n    }\n\n    Session.get('timeAgoVariable');\n    \n    var dateAsMoment = moment(new Date(context));\n    return dateAsMoment.fromNow();\n});\n","import { Blaze } from 'meteor/blaze';\nimport { _ } from 'meteor/underscore';\n\nBlaze.registerHelper('objectEach', function(object) {\n    // http://stackoverflow.com/questions/30234732/how-to-print-key-and-values-in-meteor-template\n    return _.map(object, function(value, key) {\n        return _.extend({key: key}, value);\n    });\n});\n","import { Blaze } from 'meteor/blaze';\nimport { _ } from 'meteor/underscore';\n\nBlaze.registerHelper('objectToPairs', function(object) {\n    // http://stackoverflow.com/questions/30234732/how-to-print-key-and-values-in-meteor-template\n    return _.map(object, function(value, key) {\n        return {\n            key: key,\n            value: value\n        };\n    });\n});\n","import { Blaze } from 'meteor/blaze';\n\n/**\n * A global Blaze UI helper to Stringify a JavaScript object\n *\n * Credit to:\n *\n * http://stackoverflow.com/questions/1026069/capitalize-the-first-letter-of-string-in-javascript\n */\nBlaze.registerHelper('prettyPrintStringify', function(context) {\n    if (!context) {\n        return;\n    }\n\n    var string = JSON.stringify(context, null, 2);\n    string = string.replace(/['\"]+/g, '');\n    string = string.replace('{', '');\n    string = string.replace('}', '');\n    string = string.replace(',', '\\n');\n    return string;\n});\n","import { Template } from 'meteor/templating';\nimport { _ } from 'meteor/underscore';\n\n/**\n * Global Blaze UI helper to sort array elements\n *  by an array element's property (property) or deep object property (property.childProperty)\n * Sorts ascending as default\n */\nTemplate.registerHelper('sort', (array, sortBy, sortType) => {\n    if (!sortBy) {\n        return array;\n    }\n\n    //  To keep the order for the same values of the field which is used to sort:\n    //      1. Group the array by the field\n    //      2. Sort the grouped array\n    //      3. Ungroup the sorted array\n\n    const groupedArray = _.groupBy(array, (element) => {\n        if (sortBy) {\n            var groupingElement = getKeyValue(element, sortBy);\n            if (groupingElement) {\n                return groupingElement;\n            }\n        }\n        return element;\n    });\n\n    const sortedArray = _.sortBy(groupedArray, (element) => {\n        if (sortBy) {\n            var sortingElement = getKeyValue(element[0], sortBy);\n            if (sortingElement) {\n                return sortingElement;\n            }\n        }\n        return element;\n    });\n\n    if (sortType === 'desc') {\n        return _.flatten(sortedArray.reverse(), true);\n    }\n\n    return _.flatten(sortedArray, true);\n});\n\nfunction getKeyValue(object, keyPath) {\n    keyPath = keyPath.split('.');\n    for (var i = 0; i < keyPath.length; i++) {\n        if (object && _.has(object, keyPath[i])) {\n            object = object[keyPath[i]];\n        }\n        else {\n            return undefined;\n        }\n    }\n    return object;\n}\n","import { Template } from 'meteor/templating';\nimport { _ } from 'meteor/underscore';\n\n/**\n * A global Blaze UI helper to get the thumbnails for the given study\n */\nTemplate.registerHelper('studyThumbnails', study => {\n    if (!study) {\n        return;\n    }\n\n    // Find the study's stacks\n    const stacks = study.displaySets;\n\n    // Defines the resulting thumbnails list\n    const thumbnails = [];\n\n    // Iterate over the stacks and add one by one with its index\n    _.each(stacks, (stack, thumbnailIndex) => {\n        thumbnails.push({\n            thumbnailIndex,\n            stack\n        });\n    });\n\n    return thumbnails;\n});\n","/**\n * Import namespace...\n */\n\nimport { OHIF, Viewerbase } from  './namespace.js';\n\n/**\n * Import scripts that will populate the Viewerbase namespace as a side effect only import. This is effectively the public API...\n */\n\nimport './client/'; // which is actually: import './client/index.js';\n\n/**\n * Export relevant objects...\n *\n * With the following export it becomes possible to import \"OHIF\" from \"ohif:core\" and \"Viewerbase\"\n * from \"ohif:viewerbase\" using a single import (a shorthand), like this:\n *\n * import { OHIF } from 'meteor/ohif:viewerbase';\n *\n * Which is equivalent to:\n *\n * import { OHIF } from 'meteor/ohif:core';\n * import 'meteor/ohif:viewerbase';\n *\n * The second (extended) format should be used when other OHIF packages are also to be used within\n * the current module. This makes it explicit that the following imports will populate their\n * respective namespaces within the to \"OHIF\" namespace. Example:\n *\n * import { OHIF } from 'meteor/ohif:core';\n * import 'meteor/ohif:viewerbase';\n * import 'meteor/ohif:hanging-protocols';\n * [ ... ]\n * OHIF.viewerbase.setActiveViewport(...);\n * OHIF.hangingprotocols.doSomething(...);\n *\n */\n\nexport { OHIF, Viewerbase };\n","/**\n * Import main dependency\n */\n\nimport { OHIF } from 'meteor/ohif:core';\n\n/**\n * Create Viewerbase namespace\n */\n\nconst Viewerbase = {};\n\n/**\n * Append Viewerbase namespace to OHIF namespace\n */\n\nOHIF.viewerbase = Viewerbase;\n\n/**\n * Export relevant objects\n */\n\nexport { OHIF, Viewerbase };\n"]}