)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/components/roundedButtonGroup/roundedButtonGroup.js"],"names":["Template","roundedButtonGroup","onCreated","instance","reactiveValue","data","value","getValue","get","key","setValue","args","ReactiveDict","unshift","set","toggleable","options","events","event","preventDefault","$target","$","currentTarget","hasClass","nullValue","attr","helpers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,kBAAT,CAA4BC,SAA5B,CAAsC,YAAM;AACxC,MAAMC,WAAWH,SAASG,QAAT,EAAjB;AACA,MAAMC,gBAAgBD,SAASE,IAAT,CAAcC,KAApC,CAFwC,CAIxC;;AACAH,WAASI,QAAT,GAAoB,YAAM;AACtB,WAAOH,cAAcI,GAAd,CAAkBL,SAASE,IAAT,CAAcI,GAAhC,CAAP;AACH,GAFD,CALwC,CASxC;;;AACAN,WAASO,QAAT,GAAoB,iBAAS;AACzB,QAAMC,OAAO,CAACL,KAAD,CAAb;;AACA,QAAIF,yBAAyBQ,YAA7B,EAA2C;AACvCD,WAAKE,OAAL,CAAaV,SAASE,IAAT,CAAcI,GAA3B;AACH;;AAEDL,kBAAcU,GAAd,sBAAqBH,IAArB;AACH,GAPD,CAVwC,CAmBxC;;;AACA,MAAI,CAACR,SAASI,QAAT,EAAD,IAAwB,CAACJ,SAASE,IAAT,CAAcU,UAA3C,EAAuD;AACnDZ,aAASO,QAAT,CAAkBP,SAASE,IAAT,CAAcW,OAAd,CAAsB,CAAtB,EAAyBV,KAA3C;AACH;AACJ,CAvBD;AAyBAN,SAASC,kBAAT,CAA4BgB,MAA5B,CAAmC;AAC/B,sBAD+B,YACVC,KADU,EACHf,QADG,EACO;AAClCe,UAAMC,cAAN;AACA,QAAMC,UAAUC,EAAEH,MAAMI,aAAR,CAAhB,CAFkC,CAIlC;;AACA,QAAIF,QAAQG,QAAR,CAAiB,UAAjB,CAAJ,EAAkC;AAC9B;AACH;;AAED,QAAMC,YAAYJ,QAAQG,QAAR,CAAiB,QAAjB,KAA8BpB,SAASE,IAAT,CAAcU,UAA9D;AACA,QAAMT,QAAQkB,YAAY,IAAZ,GAAmBJ,QAAQK,IAAR,CAAa,YAAb,CAAjC;AACAtB,aAASO,QAAT,CAAkBJ,KAAlB;AACH;AAb8B,CAAnC;AAgBAN,SAASC,kBAAT,CAA4ByB,OAA5B,CAAoC;AAChCnB,UADgC,cACrB;AACP,WAAOP,SAASG,QAAT,GAAoBI,QAApB,EAAP;AACH;AAH+B,CAApC,E","file":"/packages/ohif_design.js","sourcesContent":["Template.roundedButtonGroup.onCreated(() => {\n    const instance = Template.instance();\n    const reactiveValue = instance.data.value;\n\n    // Get the value for ReactiveVar or ReactiveDict objects\n    instance.getValue = () => {\n        return reactiveValue.get(instance.data.key);\n    };\n\n    // Set the value for ReactiveVar or ReactiveDict objects\n    instance.setValue = value => {\n        const args = [value];\n        if (reactiveValue instanceof ReactiveDict) {\n            args.unshift(instance.data.key);\n        }\n\n        reactiveValue.set(...args);\n    };\n\n    // Initialize the value with the first option if there's no value set and options are not toggleable\n    if (!instance.getValue() && !instance.data.toggleable) {\n        instance.setValue(instance.data.options[0].value);\n    }\n});\n\nTemplate.roundedButtonGroup.events({\n    'click [data-value]'(event, instance) {\n        event.preventDefault();\n        const $target = $(event.currentTarget);\n\n        // Stop here if the tool is disabled\n        if ($target.hasClass('disabled')) {\n            return;\n        }\n\n        const nullValue = $target.hasClass('active') && instance.data.toggleable;\n        const value = nullValue ? null : $target.attr('data-value');\n        instance.setValue(value);\n    }\n});\n\nTemplate.roundedButtonGroup.helpers({\n    getValue() {\n        return Template.instance().getValue();\n    }\n});\n"]}