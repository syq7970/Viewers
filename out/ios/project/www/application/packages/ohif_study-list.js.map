)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:study-list/both/index.js","meteor://ðŸ’»app/packages/ohif:study-list/both/base.js","meteor://ðŸ’»app/packages/ohif:study-list/both/collections.js","meteor://ðŸ’»app/packages/ohif:study-list/client/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/base.js","meteor://ðŸ’»app/packages/ohif:study-list/client/dropdown.js","meteor://ðŸ’»app/packages/ohif:study-list/client/collections/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/collections/studies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/seriesDetailsModal/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/seriesDetailsModal/seriesDetailsTable/seriesDetailsTable.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/studylist/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/studylist/studylistResult/studylistResult.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/studylist/studylistStudy/studylistStudy.js","meteor://ðŸ’»app/packages/ohif:study-list/client/components/studylist/studylistToolbar/studylistToolbar.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/exportSelectedStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/exportStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/getSelectedStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/getStudyPriors.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/getStudyPriorsMap.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/importStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/index.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/queryStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/retrieveStudiesMetadata.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/retrieveStudyMetadata.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/studylist.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/viewSeriesDetails.js","meteor://ðŸ’»app/packages/ohif:study-list/client/lib/viewStudies.js"],"names":["module","watch","require","OHIF","v","studylist","collections","actions","export","StudyImportStatus","Mongo","Collection","_debugName","Object","assign","callbacks","Meteor","startup","dropdown","ui","Dropdown","setItems","action","viewSeriesDetails","text","disabled","separatorAfter","exportSelectedStudies","title","Studies","Template","ReactiveDict","_","seriesDetailsTable","onCreated","instance","selectedStudies","selectedStudiesData","data","each","selectedStudy","displaySeriesLoadingText","set","onRendered","studies","get","map","index","seriesList","retrieveStudyMetadata","study","helpers","Session","ReactiveVar","moment","setDefault","studylistResult","sortOption","patientName","studyDate","rowsPerPage","paginationData","currentPage","offset","limit","find","sort","fetch","recordCount","length","slice","numberOfStudies","count","sortingColumnsIcons","keys","sortingColumns","forEach","value","key","studyDateFrom","studyDateTo","filter","getFilter","substr","isIndexOf","mainVal","searchVal","undefined","indexOf","replaceUndefinedColumnValue","toUpperCase","convertStringToStudyDate","dateStr","y","substring","m","d","newDateStr","Date","search","log","info","$","val","patientId","accessionNumber","studyDescription","modalitiesInStudy","modality","remove","call","error","errorType","stack","warn","modalities","setHours","numberOfStudyRelatedInstances","isNaN","parseInt","insert","getRowsPerPage","sessionStorage","getItem","setRowsPerPage","oldValue","newValue","setItem","_isEqual","cachedRowsPerPage","sortOptionSession","today","lastWeek","subtract","lastMonth","$studyDate","dateFilterNumDays","uiSettings","studyListDateFilterNumDays","startDate","endDate","datePicker","daterangepicker","maxDate","autoUpdateInput","ranges","Today","updateInputText","onDestroyed","resetSortingColumns","sortingColumn","events","event","which","dateRange","currentTarget","replace","dates","split","elementId","id","columnName","columnObject","Blaze","Hammer","doClearStudySelections","update","$set","selected","multi","doSelectRow","$studyRow","studyInstanceUid","modifiers","$lastSelectedRow","doSelectSingleRow","doUnselectRow","handleShiftClick","$previousRow","getData","$rowsInBetween","nextAll","prevAll","row","$row","is","handleCtrlClick","handler","studylistStudy","first","mc","Manager","doubleTapRecognizer","Tap","taps","interval","threshold","posThreshold","add","_id","shiftKey","ctrlKey","metaKey","middleClickOnStudy","dblClickOnStudy","preventDefault","showDropdown","getItems","menuClasses","studylistToolbar","result","selectedFiles","files","importStudies","importSupported","studyListFunctionsEnabled","getSelectedStudies","studiesCount","studyText","showDialog","element","message","toLowerCase","then","exportStudies","catch","JSZip","getNumberOfFilesToExport","studiesToExport","numberOfFilesToExport","getNumberOfFilesInStudy","convertSizeToString","measuments","totalBytes","size","measumentIndex","toFixed","queryStudiesWithProgress","exportQueriedStudiesWithProgress","exportFilesCount","exportHandler","total","task","run","dialog","exportQueriedStudies","notify","fileSize","stats","processed","setMessage","promise","done","cancel","options","zip","promises","pendingDownloads","cancelDownloads","download","pop","series","instances","wadouri","downloadDicomFile","push","downloadIndex","splice","zipInstance","err","ExportStudyDownloadCanceledError","Promise","all","zipContent","generate","type","saveAs","xhr","promiseReject","resolve","reject","XMLHttpRequest","open","responseType","onload","readyState","status","Error","response","onerror","send","abort","fileReader","FileReader","blobFile","Blob","zipFolder","folder","seriesInstanceUid","file","sopInstanceUid","binary","readAsArrayBuffer","name","prototype","create","constructor","getStudyPriors","viewerbase","metadata","StudyMetadata","StudySummary","PATIENT_ID","STUDY_DATE","OHIFError","getFirstInstance","priorStudies","patientID","getTagValue","cursor","$lt","summary","classes","OHIFStudySummary","getStudyPriorsMap","priorsMap","Map","Array","studyObjectID","getObjectID","priors","numberOfFiles","filesToImport","uploadMessage","taskRunHandler","uploadErrorHandler","names","fileNames","join","uploadSuccessHandler","importStudiesInternal","studiesToImport","errorMessage","uploadFiles","filePromise","uploadFile","setRequestHeader","responseText","setTotal","studyImportStatusId","observe","changed","studyImportStatus","numberOfStudiesImported","numberOfStudiesFailed","failed","queryStudies","studiesToQuery","studiesQueried","numberOfStudiesToQuery","studyToQuery","trace","numberOFFilesToExport","note","instructions","retrieveStudiesMetadata","apply","arguments","Router","functions","defineProperty","go","studyInstanceUids","viewStudies"],"mappings":"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","file":"/packages/ohif_study-list.js","sourcesContent":["import './base.js';\nimport './collections.js';\n","import { OHIF } from 'meteor/ohif:core';\n\nOHIF.studylist = {\n    collections: {},\n    actions: {}\n};\n","import { Mongo } from 'meteor/mongo';\nimport { OHIF } from 'meteor/ohif:core';\n\nconst StudyImportStatus = new Mongo.Collection('studyImportStatus');\nStudyImportStatus._debugName = 'StudyImportStatus';\nOHIF.studylist.collections.StudyImportStatus = StudyImportStatus;\n\nexport { StudyImportStatus };\n","import './base';\nimport './collections';\nimport './lib';\nimport './components';\nimport './dropdown';\n","import { OHIF } from 'meteor/ohif:core';\n\nObject.assign(OHIF.studylist, {\n    callbacks: {}\n});\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\n\nMeteor.startup(() => {\n    OHIF.studylist.dropdown = new OHIF.ui.Dropdown();\n\n    OHIF.studylist.dropdown.setItems([{\n        action: OHIF.studylist.viewSeriesDetails,\n        text: 'View Series Details'\n    }, {\n        text: 'Anonymize',\n        disabled: true\n    }, {\n        text: 'Send',\n        disabled: true,\n        separatorAfter: true\n    }, {\n        text: 'Delete',\n        disabled: true\n    }, {\n        action: OHIF.studylist.exportSelectedStudies,\n        text: 'Export',\n        title: 'Export Selected Studies'\n    }]);\n});\n","import './studies.js';\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\n\n// Define the Studies Collection. This is a client-side only Collection which stores the list of\n// studies in the StudyList\nMeteor.startup(() => {\n    const Studies = new Meteor.Collection(null);\n    Studies._debugName = 'Studies';\n\n    OHIF.studylist.collections.Studies = Studies;\n});\n","import './seriesDetailsModal';\nimport './studylist';\n","import './seriesDetailsModal.html';\n\nimport './seriesDetailsTable/seriesDetailsTable.html';\nimport './seriesDetailsTable/seriesDetailsTable.styl';\nimport './seriesDetailsTable/seriesDetailsTable.js';\n","import { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\n\nTemplate.seriesDetailsTable.onCreated(() => {\n    const instance = Template.instance();\n\n    // Create selected studies\n    instance.selectedStudies = new ReactiveDict();\n\n    let selectedStudiesData = instance.data.selectedStudies;\n\n    if (!selectedStudiesData) {\n        return;\n    }\n\n    // Display loading text while getting series\n    _.each(selectedStudiesData, selectedStudy => {\n\n        selectedStudy.displaySeriesLoadingText = true;\n    });\n\n    // Set reactive selected studies\n    instance.selectedStudies.set('studies', selectedStudiesData);\n});\n\nTemplate.seriesDetailsTable.onRendered(() => {\n    const instance = Template.instance();\n    const studies = instance.selectedStudies.get('studies');\n\n    if (!studies) {\n        return;\n    }\n\n    // Get series list for the study\n    _.map(studies, (selectedStudy, index) => {\n        studies[index].seriesList = [];\n        OHIF.studies.retrieveStudyMetadata(study => {\n            // Set series list\n            studies[index].seriesList = study.seriesList;\n            studies[index].displaySeriesLoadingText = false;\n\n            // Update selected studies\n            instance.selectedStudies.set('studies', studies);\n        });\n    });\n});\n\nTemplate.seriesDetailsTable.helpers({\n    selectedStudies() {\n        const instance = Template.instance();\n        return instance.selectedStudies.get('studies');\n    }\n});\n","import './studylist.html';\nimport './studylist.styl';\n\nimport './studylistStudy/studylistStudy.html';\nimport './studylistStudy/studylistStudy.js';\nimport './studylistStudy/studylistStudy.styl';\n\nimport './studylistResult/studylistResult.html';\nimport './studylistResult/studylistResult.js';\nimport './studylistResult/studylistResult.styl';\n\nimport './studylistToolbar/studylistToolbar.html';\nimport './studylistToolbar/studylistToolbar.js';\nimport './studylistToolbar/studylistToolbar.styl';\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { ReactiveDict } from 'meteor/reactive-dict';\nimport { moment } from 'meteor/momentjs:moment';\nimport { OHIF } from 'meteor/ohif:core';\n\nSession.setDefault('showLoadingText', true);\nSession.setDefault('serverError', false);\n\nTemplate.studylistResult.helpers({\n    /**\n     * Returns a ascending sorted instance of the Studies Collection by Patient name and Study Date\n     */\n    studies() {\n        const instance = Template.instance();\n        let studies;\n        let sortOption = {\n            patientName: 1,\n            studyDate: 1\n        };\n\n        // Update sort option if session is defined\n        if (Session.get('sortOption')) {\n            sortOption = Session.get('sortOption');\n        }\n\n        // Pagination parameters\n        const rowsPerPage = instance.paginationData.rowsPerPage.get();\n        const currentPage = instance.paginationData.currentPage.get();\n        const offset = rowsPerPage * currentPage;\n        const limit = offset + rowsPerPage;\n\n        studies = OHIF.studylist.collections.Studies.find({}, {\n            sort: sortOption\n        }).fetch();\n\n        if (!studies) {\n            return;\n        }\n\n        // Update record count\n        instance.paginationData.recordCount.set(studies.length);\n\n        // Limit studies\n        return studies.slice(offset, limit);\n    },\n\n    numberOfStudies() {\n        return OHIF.studylist.collections.Studies.find().count();\n    },\n\n    sortingColumnsIcons() {\n        const instance = Template.instance();\n\n        let sortingColumnsIcons = {};\n        Object.keys(instance.sortingColumns.keys).forEach(key => {\n            const value = instance.sortingColumns.get(key);\n\n            if (value === 1) {\n                sortingColumnsIcons[key] = 'fa fa-fw fa-sort-up';\n            } else if (value === -1) {\n                sortingColumnsIcons[key] = 'fa fa-fw fa-sort-down';\n            } else {\n                // fa-fw is blank\n                sortingColumnsIcons[key] = 'fa fa-fw';\n            }\n        });\n        return sortingColumnsIcons;\n    }\n});\n\nlet studyDateFrom;\nlet studyDateTo;\nlet filter;\n\n/**\n * Transforms an input string into a search filter for\n * the StudyList Search call\n *\n * @param filter The input string to be searched for\n * @returns {*}\n */\nfunction getFilter(filter) {\n    if (filter && filter.length && filter.substr(filter.length - 1) !== '*') {\n        filter += '*';\n    }\n\n    return filter;\n}\n\n/**\n * Search for a value in a string\n */\nfunction isIndexOf(mainVal, searchVal) {\n    if (mainVal === undefined || mainVal === '' || mainVal.indexOf(searchVal) > -1){\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Replace object if undefined\n */\nfunction replaceUndefinedColumnValue(text) {\n    if (text === undefined || text === 'undefined') {\n        return '';\n    } else {\n        return text.toUpperCase();\n    }\n}\n\n/**\n * Convert string to study date\n */\nfunction convertStringToStudyDate(dateStr) {\n    const y = dateStr.substring(0, 4);\n    const m = dateStr.substring(4, 6);\n    const d = dateStr.substring(6, 8);\n    const newDateStr = m + '/' + d + '/' + y;\n    return new Date(newDateStr);\n}\n\n/**\n * Runs a search for studies matching the studylist query parameters\n * Inserts the identified studies into the Studies Collection\n */\nfunction search() {\n    OHIF.log.info('search()');\n\n    // Show loading message\n    Session.set('showLoadingText', true);\n\n    // Hiding error message\n    Session.set('serverError', false);\n\n    // Create the filters to be used for the StudyList Search\n    filter = {\n        patientName: getFilter($('input#patientName').val()),\n        patientId: getFilter($('input#patientId').val()),\n        accessionNumber: getFilter($('input#accessionNumber').val()),\n        studyDescription: getFilter($('input#studyDescription').val()),\n        studyDateFrom,\n        studyDateTo,\n        modalitiesInStudy: $('input#modality').val() ? $('input#modality').val() : ''\n    };\n\n    // Make sure that modality has a reasonable value, since it is occasionally\n    // returned as 'undefined'\n    const modality = replaceUndefinedColumnValue($('input#modality').val());\n\n    // Clear all current studies\n    OHIF.studylist.collections.Studies.remove({});\n\n    Meteor.call('StudyListSearch', filter, (error, studies) => {\n        OHIF.log.info('StudyListSearch');\n        // Hide loading text\n\n        Session.set('showLoadingText', false);\n\n        if (error) {\n            Session.set('serverError', true);\n\n            const errorType = error.error;\n\n            if (errorType === 'server-connection-error') {\n                OHIF.log.error('There was an error connecting to the DICOM server, please verify if it is up and running.');\n            } else if (errorType === 'server-internal-error') {\n                OHIF.log.error('There was an internal error with the DICOM server');\n            } else {\n                OHIF.log.error('For some reason we could not list the studies.')\n            }\n\n            OHIF.log.error(error.stack);\n            return;\n        }\n\n        if (!studies) {\n            OHIF.log.warn('No studies found');\n            return;\n        }\n\n        // Loop through all identified studies\n        studies.forEach(study => {\n            // Search the rest of the parameters that aren't done via the server call\n            if (isIndexOf(study.modalities, modality) &&\n                (new Date(studyDateFrom).setHours(0, 0, 0, 0) <= convertStringToStudyDate(study.studyDate) || !studyDateFrom || studyDateFrom === '') &&\n                (convertStringToStudyDate(study.studyDate) <= new Date(studyDateTo).setHours(0, 0, 0, 0) || !studyDateTo || studyDateTo === '')) {\n\n                // Convert numberOfStudyRelatedInstance string into integer\n                study.numberOfStudyRelatedInstances = !isNaN(study.numberOfStudyRelatedInstances) ? parseInt(study.numberOfStudyRelatedInstances) : undefined;\n\n                // Insert any matching studies into the Studies Collection\n                OHIF.studylist.collections.Studies.insert(study);\n            }\n        });\n    });\n}\n\nconst getRowsPerPage = () => sessionStorage.getItem('rowsPerPage');\n\n// Wraps ReactiveVar equalsFunc function. Whenever ReactiveVar is\n// set to a new value, it will save it in the Session Storage.\n// The return is the default ReactiveVar equalsFunc if available\n// or values are === compared\nconst setRowsPerPage = (oldValue, newValue) => {\n    sessionStorage.setItem('rowsPerPage', newValue);\n    return typeof ReactiveVar._isEqual === 'function' ? ReactiveVar._isEqual(oldValue, newValue) : oldValue === newValue;\n};\n\nTemplate.studylistResult.onCreated(() => {\n    const instance = Template.instance();\n    instance.sortOption = new ReactiveVar();\n    instance.sortingColumns = new ReactiveDict();\n\n    // Pagination parameters\n\n    // Rows per page\n    // Check session storage or set 25 as default\n    const cachedRowsPerPage = getRowsPerPage();\n    if (!cachedRowsPerPage) {\n        setRowsPerPage(0, 25);\n    }\n\n    const rowsPerPage = getRowsPerPage();\n    instance.paginationData = {\n        class: 'studylist-pagination',\n        currentPage: new ReactiveVar(0),\n        rowsPerPage: new ReactiveVar(parseInt(rowsPerPage, 10), setRowsPerPage),\n        recordCount: new ReactiveVar(0)\n    };\n\n    // Set sortOption\n    const sortOptionSession = Session.get('sortOption');\n    if (sortOptionSession) {\n        instance.sortingColumns.set(sortOptionSession);\n    } else {\n        instance.sortingColumns.set({\n            patientName: 1,\n            studyDate: 1,\n            patientId: 0,\n            accessionNumber: 0,\n            studyDescription: 0,\n            modality: 0\n        });\n    }\n});\n\nTemplate.studylistResult.onRendered(() => {\n    const instance = Template.instance();\n\n    // Initialize daterangepicker\n    const today = moment();\n    const lastWeek = moment().subtract(6, 'days');\n    const lastMonth = moment().subtract(29, 'days');\n    const $studyDate = instance.$('#studyDate');\n    const dateFilterNumDays = OHIF.uiSettings.studyListDateFilterNumDays;\n    let startDate, endDate;\n\n    if (dateFilterNumDays) {\n        startDate = moment().subtract(dateFilterNumDays - 1, 'days');\n        endDate = today;\n    }\n\n    instance.datePicker = $studyDate.daterangepicker({\n        maxDate: today,\n        autoUpdateInput: true,\n        startDate: startDate,\n        endDate: endDate,\n        ranges: {\n            Today: [today, today],\n            'Last 7 Days': [lastWeek, today],\n            'Last 30 Days': [lastMonth, today]\n        }\n    }).data('daterangepicker');\n\n    if (startDate && endDate) {\n        instance.datePicker.updateInputText();\n    } else {\n        // Retrieve all studies\n        search();\n    }\n});\n\nTemplate.studylistResult.onDestroyed(() => {\n    const instance = Template.instance();\n\n    // Destroy the daterangepicker to prevent residual elements on DOM\n    instance.datePicker.remove();\n});\n\nfunction resetSortingColumns(instance, sortingColumn) {\n    Object.keys(instance.sortingColumns.keys).forEach(key => {\n        if (key !== sortingColumn) {\n            instance.sortingColumns.set(key, null);\n        }\n    });\n}\n\nTemplate.studylistResult.events({\n    'keydown input'(event) {\n        if (event.which === 13) { //  Enter\n            search();\n        }\n    },\n\n    'onsearch input'() {\n        search();\n    },\n\n    'change #studyDate'(event) {\n        let dateRange = $(event.currentTarget).val();\n\n        // Remove all space chars\n        dateRange = dateRange.replace(/ /g, '');\n\n        // Split dateRange into subdates\n        const dates = dateRange.split('-');\n        studyDateFrom = dates[0];\n        studyDateTo = dates[1];\n\n        if (dateRange !== '') {\n            search();\n        }\n    },\n\n    'click div.sortingCell'(event, instance) {\n        const elementId = event.currentTarget.id;\n\n        // Remove _ from id\n        const columnName = elementId.replace('_', '');\n\n        let sortOption = {};\n        resetSortingColumns(instance, columnName);\n\n        const columnObject = instance.sortingColumns.get(columnName);\n        if (columnObject) {\n            instance.sortingColumns.set(columnName, columnObject * -1);\n            sortOption[columnName] = columnObject * -1;\n        } else {\n            instance.sortingColumns.set(columnName, 1);\n            sortOption[columnName] = 1;\n        }\n\n        instance.sortOption.set(sortOption);\n        Session.set('sortOption', sortOption);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\nimport Hammer from 'hammerjs';\nimport { OHIF } from 'meteor/ohif:core';\n\n// Clear all selected studies\nfunction doClearStudySelections() {\n    OHIF.studylist.collections.Studies.update({}, {\n        $set: { selected: false }\n    }, { multi: true });\n}\n\nfunction doSelectRow($studyRow, data) {\n    // Mark the current study as selected if it's not marked yet\n    if (!data.selected) {\n        const filter = { studyInstanceUid: data.studyInstanceUid };\n        const modifiers = { $set: { selected: true } };\n        OHIF.studylist.collections.Studies.update(filter, modifiers);\n    }\n\n    // Set it as the previously selected row, so the user can use Shift to select from this point on\n    OHIF.studylist.$lastSelectedRow = $studyRow;\n}\n\nfunction doSelectSingleRow($studyRow, data) {\n    // Clear all selected studies\n    doClearStudySelections();\n\n    // Add selected row to selection list\n    doSelectRow($studyRow, data);\n}\n\nfunction doUnselectRow($studyRow, data) {\n    // Find the current studyInstanceUid in the stored list and mark as unselected\n    const filter = { studyInstanceUid: data.studyInstanceUid };\n    const modifiers = { $set: { selected: false } };\n    OHIF.studylist.collections.Studies.update(filter, modifiers);\n}\n\nfunction handleShiftClick($studyRow, data) {\n    let study;\n    let $previousRow = OHIF.studylist.$lastSelectedRow;\n    if ($previousRow && $previousRow.length > 0) {\n        study = Blaze.getData($previousRow.get(0));\n        if (!study.selected) {\n            $previousRow = $(); // undefined\n            OHIF.studylist.$lastSelectedRow = $previousRow;\n        }\n    }\n\n    // Select all rows in between these two rows\n    if ($previousRow.length) {\n        let $rowsInBetween;\n        if ($previousRow.index() < $studyRow.index()) {\n            // The previously selected row is above (lower index) the\n            // currently selected row.\n\n            // Fill in the rows upwards from the previously selected row\n            $rowsInBetween = $previousRow.nextAll('tr');\n        } else if ($previousRow.index() > $studyRow.index()) {\n            // The previously selected row is below the currently\n            // selected row.\n\n            // Fill in the rows upwards from the previously selected row\n            $rowsInBetween = $previousRow.prevAll('tr');\n        } else {\n            // nothing to do since $previousRow.index() === $studyRow.index()\n            // the user is shift-clicking the same row...\n            return;\n        }\n\n        // Loop through the rows in between current and previous selected studies\n        $rowsInBetween.each((index, row) => {\n            const $row = $(row);\n\n            // Retrieve the data context through Blaze\n            const data = Blaze.getData(row);\n\n            // If we find one that is already selected, do nothing\n            if (data.selected) return;\n\n            // Set the current study as selected\n            doSelectRow($row, data);\n\n            // When we reach the currently clicked-on $row, stop the loop\n            return !$row.is($studyRow);\n        });\n    } else {\n        // Set the current study as selected\n        doSelectSingleRow($studyRow, data);\n    }\n}\n\nfunction handleCtrlClick($studyRow, data) {\n    const handler = data.selected ? doUnselectRow : doSelectRow;\n    handler($studyRow, data);\n}\n\nTemplate.studylistStudy.onRendered(() => {\n    const instance = Template.instance();\n    const data = instance.data;\n    const $row = instance.$('tr.studylistStudy').first();\n\n    // Enable HammerJS to allow touch support\n    const mc = new Hammer.Manager($row.get(0));\n    const doubleTapRecognizer = new Hammer.Tap({\n        event: 'doubletap',\n        taps: 2,\n        interval: 500,\n        threshold: 30,\n        posThreshold: 30\n    });\n    mc.add(doubleTapRecognizer);\n\n    // Check if current row has been previously selected\n    if (data.selected) {\n        doSelectRow($row, data);\n    }\n});\n\nTemplate.studylistStudy.events({\n    'click tr.studylistStudy'(event, instance) {\n        const $studyRow = $(event.currentTarget);\n        const data = instance.data;\n\n        // Remove the ID so we can directly insert this into our client-side collection\n        delete data._id;\n\n        if (event.shiftKey) {\n            handleShiftClick($studyRow, data);\n        } else if (event.ctrlKey || event.metaKey) {\n            handleCtrlClick($studyRow, data);\n        } else {\n            doSelectSingleRow($studyRow, data);\n        }\n    },\n\n    'mousedown tr.studylistStudy'(event, instance) {\n        // This event handler is meant to handle middle-click on a study\n        if (event.which !== 2) {\n            return;\n        }\n\n        const middleClickOnStudy = OHIF.studylist.callbacks.middleClickOnStudy;\n        if (middleClickOnStudy && typeof middleClickOnStudy === 'function') {\n            middleClickOnStudy(instance.data);\n        }\n    },\n\n    'dblclick tr.studylistStudy, doubletap tr.studylistStudy'(event, instance) {\n        if (event.which !== undefined && event.which !== 1) {\n            return;\n        }\n\n        const dblClickOnStudy = OHIF.studylist.callbacks.dblClickOnStudy;\n\n        if (dblClickOnStudy && typeof dblClickOnStudy === 'function') {\n            dblClickOnStudy(instance.data);\n        }\n    },\n\n    'contextmenu tr.studylistStudy, press tr.studylistStudy'(event, instance) {\n        const $studyRow = $(event.currentTarget);\n\n        if (!instance.data.selected) {\n            doSelectSingleRow($studyRow, instance.data);\n        }\n\n        event.preventDefault();\n        OHIF.ui.showDropdown(OHIF.studylist.dropdown.getItems(), {\n            event,\n            menuClasses: 'dropdown-menu-left'\n        });\n        return false;\n    }\n});\n","import { OHIF } from 'meteor/ohif:core';\nimport { Template } from 'meteor/templating';\nimport { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { $ } from 'meteor/jquery';\n\nTemplate.studylistToolbar.onCreated(() => {\n    Meteor.call('importSupported', (error, result) => {\n        if (error || !result) {\n            Session.set('importSupported', false);\n        } else {\n            Session.set('importSupported', true);\n        }\n    });\n});\n\nTemplate.studylistToolbar.events({\n    'change .js-import-files'(event) {\n        //  Get selected files located in the client machine\n        const selectedFiles = $.map(event.currentTarget.files, value => value);\n\n        OHIF.studylist.importStudies(selectedFiles);\n    },\n\n    'click .js-import-files'(event) {\n        // Reset file input\n        $(event.currentTarget).val('');\n    }\n});\n\nTemplate.studylistToolbar.helpers({\n    importSupported() {\n        const importSupported = Session.get('importSupported');\n        return (importSupported && OHIF.uiSettings.studyListFunctionsEnabled);\n    }\n});\n","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * Exports all selected studies on the studylist\n * @param event Event that triggered the export\n */\nOHIF.studylist.exportSelectedStudies = event => {\n    const selectedStudies = OHIF.studylist.getSelectedStudies();\n    const studiesCount = selectedStudies.length;\n    const studyText = studiesCount > 1 ? 'Studies' : 'Study';\n\n    OHIF.ui.showDialog('dialogConfirm', {\n        element: event.element,\n        title: `Export ${studyText}`,\n        message: `Would you like to export ${studiesCount} ${studyText.toLowerCase()}?`\n    }).then(() => {\n        OHIF.studylist.exportStudies(selectedStudies);\n    }).catch(() => {});\n};\n","import { JSZip } from 'meteor/silentcicero:jszip';\nimport { OHIF } from 'meteor/ohif:core';\n\nconst getNumberOfFilesToExport = function(studiesToExport) {\n    let numberOfFilesToExport = 0;\n\n    studiesToExport.forEach(study => {\n        numberOfFilesToExport += getNumberOfFilesInStudy(study);\n    });\n\n    return numberOfFilesToExport;\n}\n\nconst convertSizeToString = size => {\n    const measuments = ['B', 'KB', 'MB', 'GB'];\n    let totalBytes = size,\n        measumentIndex = 0;\n\n    while(totalBytes > 1024) {\n        totalBytes /= 1024;\n        measumentIndex++;\n    }\n\n    return `${totalBytes.toFixed(2)} ${measuments[measumentIndex]}`;\n}\n\n/**\n * Exports requested studies\n * @param studiesToExport Studies to export\n */\nOHIF.studylist.exportStudies = studiesToExport => {\n    if (studiesToExport.length < 1) {\n        return;\n    }\n\n    queryStudiesWithProgress(studiesToExport)\n    .then(exportQueriedStudiesWithProgress);\n};\n\nconst exportQueriedStudiesWithProgress = studiesToExport => {\n    const exportFilesCount = getNumberOfFilesToExport(studiesToExport);\n    let exportHandler;\n\n    return OHIF.ui.showDialog('dialogProgress', {\n        title: 'Exporting Studies...',\n        message: `Exported files: 0 / ${exportFilesCount}`,\n        total: getNumberOfFilesToExport(studiesToExport),\n        task: {\n            run: (dialog) => {\n                exportHandler = exportQueriedStudies(studiesToExport, {\n                    notify: stats => {\n                        const fileSize = convertSizeToString(stats.totalBytes);\n\n                        dialog.update(stats.processed);\n                        dialog.setMessage(`Exported files: ${stats.processed} / ${stats.total} (${fileSize})`);\n                    }\n                });\n\n                exportHandler.promise.then(() => {\n                    dialog.done();\n                }, () => {\n                    dialog.setMessage('Failed to export studies');\n                });\n            }\n        }\n    }).then(null, err => {\n        exportHandler.cancel();\n    });\n};\n\nconst exportQueriedStudies = (studiesToExport, options) => {\n    const zip = new JSZip(),\n          promises = [],\n          pendingDownloads = [],\n          exportFilesCount = getNumberOfFilesToExport(studiesToExport),\n          notify = (options || {}).notify || function() { /* noop */ };\n\n    const cancelDownloads = () => {\n        while(pendingDownloads.length) {\n            const download = pendingDownloads.pop();\n            download.cancel();\n        }\n    };\n\n    let totalBytes = 0;\n\n    studiesToExport.forEach(study => {\n        study.seriesList.forEach(series => {\n            series.instances.forEach(instance => {\n                if (!instance.wadouri) {\n                    return;\n                }\n\n                const download = downloadDicomFile(instance);\n                pendingDownloads.push(download);\n\n                const promise = download.promise\n                .then(data => {\n                    const downloadIndex = pendingDownloads.indexOf(download);\n\n                    totalBytes += data && data.size ? data.size : 0;\n\n                    if(downloadIndex > -1) {\n                        pendingDownloads.splice(downloadIndex, 1);\n                    }\n\n                    notify({\n                        total: exportFilesCount,\n                        processed: exportFilesCount - pendingDownloads.length,\n                        totalBytes: totalBytes\n                    })\n                    \n                    return zipInstance(study, series, instance, zip, data)\n                })\n                .catch(err => {\n                    if(!(err instanceof ExportStudyDownloadCanceledError)) {\n                        OHIF.log.error('Failed to export studies', err);\n                    }\n\n                    cancelDownloads();\n                    throw err;\n                });\n\n                promises.push(promise);\n            });\n        });\n    });\n\n    return {\n        cancel: cancelDownloads,\n        promise: Promise.all(promises).then(() => {\n            const zipContent = zip.generate({ type: 'blob' });\n            saveAs(zipContent, 'studies.zip');\n        })\n    }\n};\n\nconst downloadDicomFile = instance => {\n    let xhr,\n        promiseReject;\n\n    const promise = new Promise((resolve, reject) => {\n        promiseReject = reject;\n\n        xhr = new XMLHttpRequest();\n        xhr.open('GET', instance.wadouri, true);\n        xhr.responseType = 'blob';\n\n        xhr.onload = () => {\n            if (xhr.readyState === 4 && xhr.status !== 200) {\n                return reject(new Error(`File not downloaded: ${instance.wadouri}`));\n            }\n\n            resolve(xhr.response)\n        };\n\n        xhr.onerror = () => {\n            reject(new Error(`File not downloaded: ${instance.wadouri}`));\n        };\n\n        xhr.send();\n    });\n\n    return {\n        promise: promise,\n        cancel: () => {\n            xhr.abort();\n            promiseReject(new ExportStudyDownloadCanceledError('Download canceled'));\n        }\n    }\n};\n\n\nconst zipInstance = (study, series, instance, zip, data) => {\n    const fileReader = new FileReader(),\n          blobFile = new Blob([data], { type: 'application/dicom' }),\n          zipFolder = zip.folder(study.studyInstanceUid).folder(series.seriesInstanceUid);\n\n    const promise = new Promise((resolve, reject) => {\n        fileReader.onload = () => {\n            try {\n                zipFolder.file(`${instance.sopInstanceUid}.dcm`, fileReader.result, { binary: true });\n                resolve()\n            } catch(err) {\n                reject(err);\n            }\n        };\n    });\n\n    fileReader.readAsArrayBuffer(blobFile);\n\n    return promise;\n};\n\n\nconst ExportStudyDownloadCanceledError = (message) => {\n  this.name = 'ExportStudyDownloadCanceledError';\n  this.message = message || 'Download canceled';\n  this.stack = (new Error()).stack;\n}\nExportStudyDownloadCanceledError.prototype = Object.create(Error.prototype);\nExportStudyDownloadCanceledError.prototype.constructor = ExportStudyDownloadCanceledError;\n","import { OHIF } from 'meteor/ohif:core';\n\nOHIF.studylist.getSelectedStudies = () => {\n    return OHIF.studylist.collections.Studies.find({ selected: true }, {\n        sort: {\n            studyDate: 1\n        }\n    }).fetch() || [];\n};\n","import { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n\nconst { StudyMetadata, StudySummary } = OHIF.viewerbase.metadata;\nconst PATIENT_ID = 'x00100020';\nconst STUDY_DATE = 'x00080020';\n\n/**\n * Get the priors of a given study\n * @param  {StudyMetadata|StudySummary} study An instance of StudyMetadata|StudySummary class to get it's priors\n * @return {Array}       An Array of StudySummary objects representing the study priors for the given study or an empty array if none\n */\nconst getStudyPriors = study => {\n\n    if (!(study instanceof StudyMetadata) && !(study instanceof StudySummary)) {\n        throw new OHIF.viewerbase.OHIFError('getStudyPriors study must be an instance of StudySummary or StudyMetadata');\n    }\n\n    if (study instanceof StudyMetadata) {\n        study = study.getFirstInstance();\n    }\n\n    const priorStudies = [];\n    const patientID = study.getTagValue(PATIENT_ID); // PatientID\n    const studyDate = study.getTagValue(STUDY_DATE); // StudyDate\n\n    // Find prior studies in global Studies Minimongo collection\n    const cursor = OHIF.studylist.collections.Studies.find({\n        patientId: patientID,\n        studyDate: {\n            $lt: studyDate\n        }\n    }, {\n        sort: {\n            studyDate: 'desc'\n        }\n    });\n\n    // Create an OHIFStudySummary object for each prior study found\n    cursor.forEach(study => {\n        const summary = new OHIF.studies.classes.OHIFStudySummary(study, null, study.studyInstanceUid);\n        priorStudies.push(summary);\n    });\n\n    return priorStudies;\n\n};\n\nexport { getStudyPriors };\n","import { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n// Local Dependencies\nimport { getStudyPriors } from './getStudyPriors';\n\nconst { StudyMetadata, StudySummary } = OHIF.viewerbase.metadata;\n\n/**\n * Create a Map of study priors where the key of each entry is the StudyInstanceUID and its value is an array of StudySummary instances.\n * @returns {Map} The study map.\n */\nconst getStudyPriorsMap = studies => {\n\n    const priorsMap = new Map();\n\n    if (studies instanceof Array) {\n        studies.forEach(study => {\n            if (study instanceof StudyMetadata || study instanceof StudySummary) {\n                const studyObjectID = study.getObjectID();\n                if (studyObjectID) {\n                    const priors = getStudyPriors(study);\n                    priorsMap.set(studyObjectID, priors);\n                }\n            }\n        });\n    }\n\n    return priorsMap;\n\n};\n\nexport { getStudyPriorsMap };\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\n\n/**\n * Imports selected studies from local into studylist\n * @param filesToImport Files located in the client machine to import\n */\nOHIF.studylist.importStudies = filesToImport => {\n    const numberOfFiles = filesToImport && filesToImport.length;\n    if (!numberOfFiles) {\n        return new Promise((resolve, reject) => reject('No files to upload'));\n    }\n\n    const uploadMessage = ({ processed, total }) => `Uploaded files: ${processed} / ${total}`;\n\n    const taskRunHandler = dialog => {\n        const uploadErrorHandler = fileNames => {\n            const names = fileNames.join('; ');\n            dialog.setMessage(`Failed to upload files: ${names}`);\n        };\n\n        const uploadSuccessHandler = studiesToImport => {\n            importStudiesInternal(studiesToImport, dialog).then(() => {\n                dialog.done();\n            }).catch(errorMessage => {\n                dialog.setMessage(errorMessage);\n            });\n        };\n\n        uploadFiles(filesToImport, dialog).then(uploadSuccessHandler).catch(uploadErrorHandler);\n    };\n\n    return OHIF.ui.showDialog('dialogProgress', {\n        title: 'Importing Studies...',\n        message: uploadMessage,\n        total: numberOfFiles,\n        task: { run: taskRunHandler }\n    });\n};\n\nconst uploadFiles = (files, dialog) => {\n    let processed = 0;\n\n    const promise = new Promise((resolve, reject) => {\n        const promises = [];\n\n        //  Upload files to the server\n        files.forEach(file => {\n            const filePromise = uploadFile(file, dialog);\n            filePromise.then(() => dialog.update(++processed));\n            promises.push(filePromise);\n        });\n\n        Promise.all(promises).then(resolve).catch(reject);\n    });\n\n    return promise;\n};\n\nconst uploadFile = file => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', '/uploadFilesToImport', true);\n        xhr.setRequestHeader('filename', file.name);\n\n        xhr.onload = () => {\n            if (xhr.readyState === 4 && xhr.status !== 200) {\n                // Failed to upload the file\n                reject(file.name);\n            } else {\n                // Success uploading the file\n                resolve(xhr.responseText);\n            }\n        };\n\n        // Failed to upload the file\n        xhr.onerror = () => reject(file.name);\n\n        xhr.send(file);\n    });\n};\n\nconst importStudiesInternal = (studiesToImport, dialog) => {\n    const numberOfStudies = studiesToImport && studiesToImport.length;\n    if (!numberOfStudies) {\n        return new Promise((resolve, reject) => reject('No studies to import'));\n    }\n\n    let processed = 0;\n    dialog.update(processed);\n    dialog.setTotal(numberOfStudies);\n    dialog.setMessage(({ processed, total }) => `Imported: ${processed} / ${total}`);\n\n    return new Promise((resolve, reject) => {\n        //  Create/Insert a new study import status item\n        Meteor.call('createStudyImportStatus', (error, studyImportStatusId) => {\n            if (error) {\n                return reject(error.message);\n            }\n\n            //  Handle when StudyImportStatus collection is updated\n            OHIF.studylist.collections.StudyImportStatus.find(studyImportStatusId).observe({\n                changed(studyImportStatus) {\n                    const { numberOfStudiesImported, numberOfStudiesFailed } = studyImportStatus;\n                    dialog.update(numberOfStudiesImported);\n\n                    if (numberOfStudiesImported === numberOfStudies) {\n                        //  The entire import operation is completed, so remove the study import status item\n                        Meteor.call('removeStudyImportStatus', studyImportStatus._id);\n\n                        // Show number of failed files if there is at least one failed file\n                        if (studyImportStatus.numberOfStudiesFailed > 0) {\n                            const failed = numberOfStudiesFailed;\n                            reject(`Failed to import ${failed} of ${numberOfStudies} studies`);\n                        } else {\n                            resolve();\n                        }\n                    }\n                }\n            });\n\n            //  Import studies with study import status id to get callbacks\n            Meteor.call('importStudies', studiesToImport, studyImportStatusId);\n        });\n    });\n};\n","import './exportSelectedStudies.js';\nimport './exportStudies.js';\nimport './getSelectedStudies.js';\nimport './importStudies.js';\nimport './queryStudies.js';\nimport './retrieveStudiesMetadata.js';\nimport './retrieveStudyMetadata.js';\nimport './studylist.js';\nimport './viewSeriesDetails.js';\nimport './viewStudies.js';\n","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * Queries requested studies to get their metadata from PACS\n * @param studiesToQuery Studies to query\n */\nqueryStudies = function(studiesToQuery, options) {\n    let studiesQueried = 0;\n    const numberOfStudiesToQuery = studiesToQuery.length;\n    const notify = (options || {}).notify || function() { /* noop */ };\n\n    const promises = [];\n\n    studiesToQuery.forEach(studyToQuery => {\n        const promise = OHIF.studies.retrieveStudyMetadata(studyToQuery.studyInstanceUid);\n        promise.then(study => {\n            studiesQueried++;\n            notify({\n                total: numberOfStudiesToQuery,\n                processed: studiesQueried\n            });\n        });\n        promises.push(promise);\n    });\n\n    return Promise.all(promises);\n};\n\nqueryStudiesWithProgress = function(studiesToQuery) {\n    return OHIF.ui.showDialog('dialogProgress', {\n        title: 'Querying Studies...',\n        message: `Queried: 0 / ${studiesToQuery.length}`,\n        total: studiesToQuery.length,\n        task: {\n            run: (dialog) => {\n                queryStudies(studiesToQuery, {\n                    notify: stats => {\n                        dialog.update(stats.processed);\n                        dialog.setMessage(`Queried: ${stats.processed} / ${stats.total}`);\n                    }\n                })\n                .then(studiesQueried => {\n                    dialog.done(studiesQueried);\n                }, () => {\n                    dialog.cancel();\n                }).catch(error => {\n                    OHIF.log.error('There was an error retrieving all studies metadeta.');\n                    OHIF.log.error(error.stack);\n\n                    OHIF.log.trace();\n                });\n            }\n        }\n    });\n};\n\n/**\n * Returns the total number of dicom files in a study\n * @param study Queried study (includes metadata)\n * @returns {number}\n */\ngetNumberOfFilesInStudy = function(study) {\n    let numberOFFilesToExport = 0;\n\n    study.seriesList.forEach(function(series) {\n        series.instances.forEach(function(instance) {\n            if (instance.wadouri) {\n                numberOFFilesToExport++;\n            }\n        });\n    });\n\n    return numberOFFilesToExport;\n};\n","import { OHIF } from 'meteor/ohif:core';\n\nconst note = 'OHIF.studylist.retrieveStudiesMetadata is deprecated.';\nconst instructions = 'Please use OHIF.studies.retrieveStudiesMetadata instead.';\n\n/**\n * @deprecated Please use OHIF.studies.retrieveStudiesMetadata instead\n */\nOHIF.studylist.retrieveStudiesMetadata = function() {\n    OHIF.log.warn(`${note}\\n${instructions}`);\n    OHIF.studies.retrieveStudiesMetadata.apply(this, arguments);\n};\n","import { OHIF } from 'meteor/ohif:core';\n\nconst note = 'OHIF.studylist.retrieveStudyMetadata is deprecated.';\nconst instructions = 'Please use OHIF.studies.retrieveStudyMetadata instead.';\n\n/**\n * @deprecated Please use OHIF.studies.retrieveStudyMetadata instead\n */\nOHIF.studylist.retrieveStudyMetadata = function() {\n    OHIF.log.warn(`${note}\\n${instructions}`);\n    OHIF.studies.retrieveStudyMetadata.apply(this, arguments);\n};\n","import { OHIF } from 'meteor/ohif:core';\nimport { Router } from 'meteor/iron:router';\n\n// Functions\nimport { getStudyPriors } from './getStudyPriors';\nimport { getStudyPriorsMap } from './getStudyPriorsMap';\n\nOHIF.studylist.functions = {\n    getStudyPriors,\n    getStudyPriorsMap\n};\n\n// Add deprecation notice to the OHIF.studylist.classes namespace\nconst note = 'OHIF.studylist.classes is deprecated.';\nconst instructions = 'Please use OHIF.studies.classes instead.';\nObject.defineProperty(OHIF.studylist, 'classes', {\n    get() {\n        OHIF.log.warn(`${note}\\n${instructions}`);\n        return OHIF.studies.classes;\n    }\n});\n\nconst dblClickOnStudy = data => {\n    Router.go('viewerStudies', { studyInstanceUids: data.studyInstanceUid });\n};\n\nOHIF.studylist.callbacks.dblClickOnStudy = dblClickOnStudy;\nOHIF.studylist.callbacks.middleClickOnStudy = dblClickOnStudy;\n","import { OHIF } from 'meteor/ohif:core';\n\n/**\n * Display series details of study in a modal\n */\nOHIF.studylist.viewSeriesDetails = () => {\n    const selectedStudies = OHIF.studylist.getSelectedStudies();\n    if (!selectedStudies) return;\n    OHIF.ui.showDialog('seriesDetailsModal', { selectedStudies });\n};\n","import { OHIF } from 'meteor/ohif:core';\nimport { Router } from 'meteor/iron:router';\n\n/**\n * Loads multiple unassociated studies in the Viewer\n */\nOHIF.studylist.viewStudies = () => {\n    OHIF.log.info('viewStudies');\n    const selectedStudies = OHIF.studylist.getSelectedStudies();\n\n    if (!selectedStudies || !selectedStudies.length) {\n        return;\n    }\n\n    const studyInstanceUids = selectedStudies.map(study => study.studyInstanceUid).join(';');\n\n    Router.go('viewerStudies', { studyInstanceUids });\n};\n"]}