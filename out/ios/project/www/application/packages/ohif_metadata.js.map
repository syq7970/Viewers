)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:metadata/main.js","meteor://ðŸ’»app/packages/ohif:metadata/namespace.js","meteor://ðŸ’»app/packages/ohif:metadata/client/OHIFInstanceMetadata.js","meteor://ðŸ’»app/packages/ohif:metadata/client/OHIFSeriesMetadata.js","meteor://ðŸ’»app/packages/ohif:metadata/client/OHIFStudyMetadata.js","meteor://ðŸ’»app/packages/ohif:metadata/client/index.js"],"names":["module1","module","export","OHIF","Metadata","watch","require","v","metadata","OHIFInstanceMetadata","Viewerbase","InstanceMetadata","DICOMTagDescriptions","data","series","study","uid","init","instance","getData","Object","defineProperties","_sopInstanceUID","configurable","enumerable","writable","value","sopInstanceUid","_study","_series","_instance","_cache","create","getTagValue","tagOrProperty","defaultValue","bypassCache","propertyName","getPropertyName","rawValue","tagExists","getImageId","frame","thumbnail","_imageId","tagInfo","find","keyword","replace","charAt","toLowerCase","substr","OHIFSeriesMetadata","defineProperty","seriesInstanceUid","instances","forEach","addInstance","SeriesMetadata","OHIFStudyMetadata","studyInstanceUid","seriesList","addSeries","StudyMetadata"],"mappings":"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","file":"/packages/ohif_metadata.js","sourcesContent":["/**\n * Import namespace...\n */\n\nimport { OHIF, Metadata } from  './namespace.js';\n\n/**\n * Import scripts that will populate the Metadata namespace as a side effect only import. This is effectively the public API...\n */\n\nimport './client/'; // which is actually: import './client/index.js';\n\n/**\n * Export relevant objects...\n *\n * With the following export it becomes possible to import \"OHIF\" from \"ohif:core\" and \"Metadata\"\n * from \"ohif:metadata\" using a single import (a shorthand), like this:\n *\n * import { OHIF } from 'meteor/ohif:metadata';\n *\n * Which is equivalent to:\n *\n * import { OHIF } from 'meteor/ohif:core';\n * import 'meteor/ohif:metadata';\n *\n * The second (extended) format should be used when other OHIF packages are also to be used within\n * the current module. This makes it explicit that the following imports will populate their\n * respective namespaces within the to \"OHIF\" namespace. Example:\n *\n * import { OHIF } from 'meteor/ohif:core';\n * import 'meteor/ohif:metadata';\n * import 'meteor/ohif:hanging-protocols';\n * [ ... ]\n * OHIF.metadata.setActiveViewport(...);\n * OHIF.hangingprotocols.doSomething(...);\n *\n */\n\nexport { OHIF, Metadata };\n","/**\n * Import main dependency...\n */\n\nimport { OHIF } from 'meteor/ohif:core';\n\n/**\n * Create Metadata namespace...\n */\n\nconst Metadata = {};\n\n/**\n * Append Metadata namespace to OHIF namespace...\n */\n\nOHIF.metadata = Metadata;\n\n/**\n * Export relevant objects...\n */\n\nexport { OHIF, Metadata };\n","import { Viewerbase } from 'meteor/ohif:viewerbase';\n\nconst InstanceMetadata = Viewerbase.metadata.InstanceMetadata;\nconst DICOMTagDescriptions = Viewerbase.DICOMTagDescriptions;\n\nexport class OHIFInstanceMetadata extends InstanceMetadata {\n\n    /**\n     * @param {Object} Instance object.\n     */\n    constructor(data, series, study, uid) {\n        super(data, uid);\n        this.init(series, study);\n    }\n\n    init(series, study) {\n        const instance = this.getData();\n\n        // Initialize Private Properties\n        Object.defineProperties(this, {\n            _sopInstanceUID: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: instance.sopInstanceUid\n            },\n            _study: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: study\n            },\n            _series: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: series\n            },\n            _instance: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: instance\n            },\n            _cache: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: Object.create(null)\n            }\n        });\n    }\n\n    // Override\n    getTagValue(tagOrProperty, defaultValue, bypassCache) {\n\n        // check if this property has been cached...\n        if (tagOrProperty in this._cache && bypassCache !== true) {\n            return this._cache[tagOrProperty];\n        }\n\n        const propertyName = OHIFInstanceMetadata.getPropertyName(tagOrProperty);\n\n        // Search property value in the whole study metadata chain...\n        let rawValue;\n        if (propertyName in this._instance) {\n            rawValue = this._instance[propertyName];\n        } else if (propertyName in this._series) {\n            rawValue = this._series[propertyName];\n        } else if (propertyName in this._study) {\n            rawValue = this._study[propertyName];\n        }\n\n        if (rawValue !== void 0) {\n            // if rawValue value is not undefined, cache result...\n            this._cache[tagOrProperty] = rawValue;\n            return rawValue;\n        }\n\n        return defaultValue;\n    }\n\n    // Override\n    tagExists(tagOrProperty) {\n        const propertyName = OHIFInstanceMetadata.getPropertyName(tagOrProperty);\n\n        return (propertyName in this._instance || propertyName in this._series || propertyName in this._study);\n    }\n\n    // Override\n    getImageId(frame, thumbnail) {\n        // If _imageID is not cached, create it\n        if (this._imageId === null) {\n            this._imageId = Viewerbase.getImageId(this.getData(), frame, thumbnail);\n        }\n\n        return this._imageId;\n    }\n\n    /**\n     * Static methods\n     */\n\n    // @TODO: The current mapping of standard DICOM property names to local property names is not optimal.\n    // The inconsistency in property naming makes this function increasingly complex.\n    // A possible solution to improve this would be adapt retriveMetadata names to use DICOM standard names as in dicomTagDescriptions.js\n    static getPropertyName(tagOrProperty) {\n        let propertyName;\n        const tagInfo = DICOMTagDescriptions.find(tagOrProperty);\n\n        if (tagInfo !== void 0) {\n            // This function tries to translate standard DICOM property names into local naming convention.\n            propertyName = tagInfo.keyword.replace(/^SOP/, 'sop').replace(/UID$/, 'Uid').replace(/ID$/, 'Id');\n            propertyName = propertyName.charAt(0).toLowerCase() + propertyName.substr(1);\n        }\n\n        return propertyName;\n    }\n}\n","import { Viewerbase } from 'meteor/ohif:viewerbase';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\n\nexport class OHIFSeriesMetadata extends Viewerbase.metadata.SeriesMetadata {\n\n    /**\n     * @param {Object} Series object.\n     */\n    constructor(data, study, uid) {\n        super(data, uid);\n        this.init(study);\n    }\n\n    init(study) {\n        const series = this.getData();\n\n        // define \"_seriesInstanceUID\" protected property...\n        Object.defineProperty(this, '_seriesInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: series.seriesInstanceUid\n        });\n\n        // populate internal list of instances...\n        series.instances.forEach(instance => {\n            this.addInstance(new OHIFInstanceMetadata(instance, series, study));\n        });\n    }\n\n}\n\n","import { Viewerbase } from 'meteor/ohif:viewerbase';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\n\nexport class OHIFStudyMetadata extends Viewerbase.metadata.StudyMetadata {\n\n    /**\n     * @param {Object} Study object.\n     */\n    constructor(data, uid) {\n        super(data, uid);\n        this.init();\n    }\n\n    init() {\n        const study = this.getData();\n\n        // define \"_studyInstanceUID\" protected property\n        Object.defineProperty(this, '_studyInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: study.studyInstanceUid\n        });\n\n        // populate internal list of series\n        study.seriesList.forEach(series => {\n            this.addSeries(new OHIFSeriesMetadata(series, study));\n        });\n    }\n\n}\n","import { Metadata } from '../namespace';\n\n// OHIFStudyMetadata, OHIFSeriesMetadata, OHIFInstanceMetadata\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\n\nMetadata.StudyMetadata = OHIFStudyMetadata;\nMetadata.SeriesMetadata = OHIFSeriesMetadata;\nMetadata.InstanceMetadata = OHIFInstanceMetadata;"]}