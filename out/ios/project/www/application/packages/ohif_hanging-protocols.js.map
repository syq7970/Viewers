)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/namespace.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/collections.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/schema.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/hardcodedData.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/testData.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/Protocol.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/Rule.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/Stage.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/Viewport.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/ViewportStructure.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/rules/ImageMatchingRule.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/rules/ProtocolMatchingRule.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/rules/SeriesMatchingRule.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/classes/rules/StudyMatchingRule.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/lib/comparators.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/both/lib/removeFromArray.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/collections.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/protocolEngine.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/helpers/displayConstraint.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/helpers/attributes.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/protocolStore/protocolStore.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/protocolStore/defaultStrategy.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/previousPresentationGroupButton/previousPresentationGroupButton.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/nextPresentationGroupButton/nextPresentationGroupButton.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/matchedProtocols/matchedProtocols.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/protocolEditor/protocolEditor.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/ruleTable/ruleTable.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/ruleEntryDialog/ruleEntryDialog.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/settingEntryDialog/settingEntryDialog.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/textEntryDialog/textEntryDialog.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/settingsTable/settingsTable.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/stageDetails/stageDetails.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/components/stageSortable/stageSortable.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/customAttributes/index.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/customViewportSettings/index.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/lib/sortByScore.js","meteor://ðŸ’»app/packages/ohif:hanging-protocols/client/matcher/HPMatcher.js"],"names":["HP","HangingProtocols","Meteor","Collection","_debugName","allow","insert","update","remove","isDevelopment","isServer","startup","module","watch","require","attributeDefaults","abstractPriorValue","displaySettings","invert","id","text","defaultValue","options","studyAttributes","protocolAttributes","seriesAttributes","instanceAttributes","getDefaultProtocol","protocol","Protocol","locked","oneByOne","ViewportStructure","rows","columns","viewport","Viewport","first","Stage","viewports","push","stages","defaultProtocol","getMRTwoByTwoTest","proto","studyInstanceUid","ProtocolMatchingRule","equals","value","addProtocolMatchingRule","oneByTwo","left","right","firstSeries","SeriesMatchingRule","secondSeries","thirdImage","ImageMatchingRule","seriesMatchingRules","imageMatchingRules","twoByOne","left2","right2","fourthSeries","fifthSeries","second","testProtocol","getDemoProtocols","demoProtocols","v","Random","removeFromArray","name","hasUpdatedPriorsInformation","createdDate","Date","modifiedDate","users","userId","createdBy","modifiedBy","availableTo","Set","editableBy","protocolMatchingRules","numberOfPriorsReferenced","getNumberOfPriorsReferenced","skipCache","forEach","stage","studyMatchingRules","priorsReferenced","rule","updateNumberOfPriorsReferenced","protocolWasModified","fromObject","input","ruleObject","stageObject","createClone","currentProtocol","Object","assign","clonedProtocol","addStage","removeProtocolMatchingRule","wasRemoved","export","Rule","comparators","EQUALS_REGEXP","attribute","constraint","required","weight","undefined","_constraintInfo","_validatorAndValue","getConstraintInfo","constraintInfo","ruleConstraint","keys","find","comparator","isRuleForPrior","ruleValidatorAndValue","getConstraintValidatorAndValue","validator","intValue","parseInt","test","validatorAndValue","currentValidator","constraintValidator","validatorOption","constraintValue","viewportStructure","currentStage","clonedStage","viewportObject","viewportSettings","StudyMatchingRule","removeRule","array","type","properties","getLayoutTemplateName","getNumViewports","description","freeze","_","length","index","isEqual","indexToRemove","splice","MatchedProtocols","Comparators","item","Session","OHIF","HPMatcher","sortByScore","viewerbase","OHIFError","metadata","StudyMetadata","SeriesMetadata","InstanceMetadata","StudySummary","ABSTRACT_PRIOR_VALUE","ProtocolEngine","setEngine","protocolEngine","getEngine","addCustomViewportSetting","create","element","optionValue","findWhere","viewer","wlPresets","applyWLPreset","layoutManager","studies","priorStudies","studyMetadataSource","LayoutManager","StudyMetadataSource","Array","every","study","Map","reset","newStageIds","getBestProtocolMatch","setHangingProtocol","getCurrentStageModel","findMatchByStudy","log","info","matched","studyInstance","getFirstInstance","numberOfAvailablePriors","getNumberOfAvailablePriors","getObjectID","ProtocolStore","getProtocol","rules","slice","matchedDetails","match","score","updateProtocolMatches","matchedDetail","protocolInCollection","findOne","sorted","sort","limit","fetch","bestMatch","studyObjectID","priors","getAvailableStudyPriors","get","matchImages","viewportIndex","instanceMatchingRules","matchingScores","currentStudy","firstInstance","highestStudyMatchingScore","highestSeriesMatchingScore","highestImageMatchingScore","setCustomAttribute","validatorType","priorStudy","studyIndex","Math","max","priorStudyObjectID","loadStudy","then","studyMetadata","updateViewports","warn","error","studyMatchDetails","forEachSeries","seriesMatchDetails","series","forEachInstance","instance","isImage","getTagValue","instanceMatchDetails","matchDetails","passed","failed","concat","details","totalMatchScore","currentSOPInstanceUID","getSOPInstanceUID","imageDetails","getStudyInstanceUID","seriesInstanceUid","getSeriesInstanceUID","sopInstanceUid","currentImageIdIndex","matchingScore","sortingInfo","displaySet","findDisplaySet","images","image","displaySetInstanceUid","getUID","imageId","getImageId","sortingFunction","utils","sortBy","reverse","a","b","getNumProtocolStages","stageModel","layoutTemplateName","layoutProps","viewportData","cornerstoneViewportParams","viewportSettingsKeys","key","currentViewportData","customSettings","setting","CustomViewportSettings","renderedCallback","customSetting","callback","currentMatch","currentPosition","scoresLength","rerenderViewportWithNewDisplaySet","newProtocol","prototype","isPrototypeOf","$set","selected","multi","set","isNextStageAvailable","numberOfStages","isPreviousStageAvailable","setCurrentProtocolStage","stageAction","nextProtocolStage","previousProtocolStage","Blaze","attributeCache","REGEXP","humanize","humanized","replace","str","toUpperCase","getAttributeText","attributeId","attributes","attributeText","registerHelper","constraintText","toLowerCase","viewportSettingsTypes","toolSettingsTypes","strategy","setStrategy","preferredStrategy","onReady","getProtocolInstance","protocolObject","protocolInstance","protocolId","result","addProtocol","updateProtocol","removeProtocol","defaultStrategy","hangingProtocolSubs","addDefaultProtocols","console","getDatabaseIdByProtocolId","filteredProtocol","fields","_id","ready","subscribe","Tracker","autorun","computation","stop","databaseId","Template","previousPresentationGroupButton","helpers","previousNotAvailable","events","event","$","currentTarget","hasClass","tooltip","nextPresentationGroupButton","nextNotAvailable","matchedProtocols","updateProtocolSelect","protocolsSelect2Data","map","protocolSelect","select2","empty","data","val","trigger","protocolEditor","onRendered","timeAgoInterval","setInterval","onDestroyed","clearInterval","activeProtocol","activeStage","difference","absDifference","abs","position","i","activeViewportUndefined","moment","format","selectedProtocol","title","instructions","currentValue","openTextEntryDialog","dropdown","numFiles","files","label","target","reader","FileReader","onload","protocolToImport","JSON","parse","readAsText","params","addClass","siblings","removeClass","protocolJSON","stringify","currentDate","filename","getTime","toString","protocolBlob","Blob","downloadElement","document","getElementById","href","URL","createObjectURL","download","click","dialogUtils","showConfirmDialog","ruleTable","rulePassed","hasPassed","failedRuleData","failedRule","currentData","level","openRuleEntryDialog","getActiveViewportModel","prop","ReactiveVar","Viewerbase","ESC","closeHandler","dialog","css","setFocusToActiveViewport","currentValueInput","ruleEntryDialog","attributeSelect","html","placeholder","allowClear","eventData","render","removableBackdrop","body","one","getActiveViewportImageId","enabledElement","viewportUtils","getEnabledElementForActiveElement","getAbstractPriorValue","Studies","findBy","cornerstone","metaData","studylist","collections","patientId","studyDate","$lt","priorIndex","getCurrentTagOrPropertyValue","tagOrProperty","StudyMetadataList","findInstance","tagOrPropertyValue","onCreated","template","comparatorId","draggable","which","selectedAttribute","attr","parseFloat","openSettingEntryDialog","settingObject","settingEntryDialog","settings","displaySettingsOptions","customSettingsOptions","settingsOptions","settingSelect","settingDetails","valueSelect","viewportSetting","originalSettingObject","settingId","ENTER","doneCallback","textEntryDialog","UI","settingsTable","getSettingText","_globalHelpers","activeViewport","stageDetails","move","oldIndex","newIndex","min","getStageIndex","stageIndex","stageSortable","isActiveStage","stageLabel","lastSavedCopy","newStageNumber","indexOf","dateCreatedFromNow","fromNow","isNextAvailable","isPreviousAvailable","newStage","stageId","random","CustomAttributeRetrievalCallbacks","addCustomAttribute","attributeName","settingName","arr","metadataInstance","requiredFailed","customAttributeExists","hasOwnProperty","customAttribute","testConstraint","attributeValue","getCustomAttribute","attributeMap","errorMessages","validate","e"],"mappings":"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","file":"/packages/ohif_hanging-protocols.js","sourcesContent":["HP = {};\n","HangingProtocols = new Meteor.Collection('hangingprotocols');\nHangingProtocols._debugName = 'HangingProtocols';\n\nHangingProtocols.allow({\n    insert: function() {\n        return true;\n    },\n    update: function() {\n        return true;\n    },\n    remove: function() {\n        return true;\n    }\n});\n\n// @TODO: Remove this after stabilizing ProtocolEngine\nif (Meteor.isDevelopment && Meteor.isServer) {\n    Meteor.startup(() => {\n        HangingProtocols.remove({});\n    });\n}\n","// @TODO start using namespace instead\n\n// Base classes\nimport './classes/Protocol';\nimport './classes/Stage';\nimport './classes/Viewport';\nimport './classes/ViewportStructure';\n\n// Specialized Rule classes\nimport './classes/rules/ProtocolMatchingRule';\nimport './classes/rules/StudyMatchingRule';\nimport './classes/rules/SeriesMatchingRule';\nimport './classes/rules/ImageMatchingRule';\n","HP.attributeDefaults = {\n    abstractPriorValue: 0\n};\n\nHP.displaySettings = {\n    invert: {\n        id: 'invert',\n        text: 'Show Grayscale Inverted',\n        defaultValue: 'NO',\n        options: ['YES', 'NO']\n    }\n};\n\n// @TODO Fix abstractPriorValue comparison\nHP.studyAttributes = [{\n    id: 'x00100020',\n    text: '(x00100020) Patient ID'\n}, {\n    id: 'x0020000d',\n    text: '(x0020000d) Study Instance UID'\n}, {\n    id: 'x00080020',\n    text: '(x00080020) Study Date'\n}, {\n    id: 'x00080030',\n    text: '(x00080030) Study Time'\n}, {\n    id: 'x00081030',\n    text: '(x00081030) Study Description'\n}, {\n    id: 'abstractPriorValue',\n    text: 'Abstract Prior Value'\n}];\n\nHP.protocolAttributes = [{\n    id: 'x00100020',\n    text: '(x00100020) Patient ID'\n}, {\n    id: 'x0020000d',\n    text: '(x0020000d) Study Instance UID'\n}, {\n    id: 'x00080020',\n    text: '(x00080020) Study Date'\n}, {\n    id: 'x00080030',\n    text: '(x00080030) Study Time'\n}, {\n    id: 'x00081030',\n    text: '(x00081030) Study Description'\n}, {\n    id: 'anatomicRegion',\n    text: 'Anatomic Region'\n}];\n\nHP.seriesAttributes = [{\n    id: 'x0020000e',\n    text: '(x0020000e) Series Instance UID'\n}, {\n    id: 'x00080060',\n    text: '(x00080060) Modality'\n}, {\n    id: 'x00200011',\n    text: '(x00200011) Series Number'\n}, {\n    id: 'x0008103e',\n    text: '(x0008103e) Series Description'\n}, {\n    id: 'numImages',\n    text: 'Number of Images'\n}];\n\nHP.instanceAttributes = [{\n    id: 'x00080016',\n    text: '(x00080016) SOP Class UID'\n}, {\n    id: 'x00080018',\n    text: '(x00080018) SOP Instance UID'\n}, {\n    id: 'x00185101',\n    text: '(x00185101) View Position'\n}, {\n    id: 'x00200013',\n    text: '(x00200013) Instance Number'\n}, {\n    id: 'x00080008',\n    text: '(x00080008) Image Type'\n}, {\n    id: 'x00181063',\n    text: '(x00181063) Frame Time'\n}, {\n    id: 'x00200060',\n    text: '(x00200060) Laterality'\n}, {\n    id: 'x00541330',\n    text: '(x00541330) Image Index'\n}, {\n    id: 'x00280004',\n    text: '(x00280004) Photometric Interpretation'\n}, {\n    id: 'x00180050',\n    text: '(x00180050) Slice Thickness'\n}];\n","function getDefaultProtocol() {\n    var protocol = new HP.Protocol('Default');\n    protocol.id = 'defaultProtocol';\n    protocol.locked = true;\n\n    var oneByOne = new HP.ViewportStructure('grid', {\n        rows: 1,\n        columns: 1\n    });\n\n    var viewport = new HP.Viewport();\n    var first = new HP.Stage(oneByOne, 'oneByOne');\n    first.viewports.push(viewport);\n\n    protocol.stages.push(first);\n\n    HP.defaultProtocol = protocol;\n    return HP.defaultProtocol;\n}\n\nfunction getMRTwoByTwoTest() {\n    var proto = new HP.Protocol('MR_TwoByTwo');\n    proto.id = 'MR_TwoByTwo';\n    proto.locked = true;\n    // Use http://localhost:3000/viewer/1.2.840.113619.2.5.1762583153.215519.978957063.78\n\n    var studyInstanceUid = new HP.ProtocolMatchingRule('studyInstanceUid', {\n        equals: {\n            value: '1.2.840.113619.2.5.1762583153.215519.978957063.78'\n        }\n    }, true);\n\n    proto.addProtocolMatchingRule(studyInstanceUid);\n\n    var oneByTwo = new HP.ViewportStructure('grid', {\n        rows: 1,\n        columns: 2\n    });\n\n    // Stage 1\n    var left = new HP.Viewport();\n    var right = new HP.Viewport();\n\n    var firstSeries = new HP.SeriesMatchingRule('seriesNumber', {\n        equals: {\n            value: 1\n        }\n    });\n\n    var secondSeries = new HP.SeriesMatchingRule('seriesNumber', {\n        equals: {\n            value: 2\n        }\n    });\n\n    var thirdImage = new HP.ImageMatchingRule('instanceNumber', {\n        equals: {\n            value: 3\n        }\n    });\n\n    left.seriesMatchingRules.push(firstSeries);\n    left.imageMatchingRules.push(thirdImage);\n\n    right.seriesMatchingRules.push(secondSeries);\n    right.imageMatchingRules.push(thirdImage);\n\n    var first = new HP.Stage(oneByTwo, 'oneByTwo');\n    first.viewports.push(left);\n    first.viewports.push(right);\n\n    proto.stages.push(first);\n\n    // Stage 2\n    var twoByOne = new HP.ViewportStructure('grid', {\n        rows: 2,\n        columns: 1\n    });\n    var left2 = new HP.Viewport();\n    var right2 = new HP.Viewport();\n\n    var fourthSeries = new HP.SeriesMatchingRule('seriesNumber', {\n        equals: {\n            value: 4\n        }\n    });\n\n    var fifthSeries = new HP.SeriesMatchingRule('seriesNumber', {\n        equals: {\n            value: 5\n        }\n    });\n\n    left2.seriesMatchingRules.push(fourthSeries);\n    left2.imageMatchingRules.push(thirdImage);\n    right2.seriesMatchingRules.push(fifthSeries);\n    right2.imageMatchingRules.push(thirdImage);\n\n    var second = new HP.Stage(twoByOne, 'twoByOne');\n    second.viewports.push(left2);\n    second.viewports.push(right2);\n\n    proto.stages.push(second);\n\n    HP.testProtocol = proto;\n    return HP.testProtocol;\n}\n\nfunction getDemoProtocols() {\n\n    HP.demoProtocols = [];\n\n    /**\n     * Demo #1\n     */\n    HP.demoProtocols.push({\n        \"id\": \"demoProtocol1\",\n        \"locked\": false,\n        \"name\": \"DFCI-CT-CHEST-COMPARE\",\n        \"createdDate\": \"2017-02-14T16:07:09.033Z\",\n        \"modifiedDate\": \"2017-02-14T16:18:43.930Z\",\n        \"availableTo\": {},\n        \"editableBy\": {},\n        \"protocolMatchingRules\": [\n            {\n                \"id\": \"7tmuq7KzDMCWFeapc\",\n                \"weight\": 2,\n                \"required\": false,\n                \"attribute\": \"x00081030\",\n                \"constraint\": {\n                    \"contains\": {\n                        \"value\": \"DFCI CT CHEST\"\n                    }\n                }\n            }\n        ],\n        \"stages\": [\n            {\n                \"id\": \"v5PfGt9F6mffZPif5\",\n                \"name\": \"oneByOne\",\n                \"viewportStructure\": {\n                    \"type\": \"grid\",\n                    \"properties\": {\n                        \"rows\": 1,\n                        \"columns\": 2\n                    },\n                    \"layoutTemplateName\": \"gridLayout\"\n                },\n                \"viewports\": [\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"mXnsCcNzZL56z7mTZ\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"2.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": []\n                    },\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"ygz4nb28iJZcJhnYa\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"2.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": [\n                            {\n                                \"id\": \"uDoEgLTvnXTByWnPz\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"abstractPriorValue\",\n                                \"constraint\": {\n                                    \"equals\": {\n                                        \"value\": 1\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                ],\n                \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n            },\n            {\n                \"id\": \"XTzu8HB3feep3HYKs\",\n                \"viewportStructure\": {\n                    \"type\": \"grid\",\n                    \"properties\": {\n                        \"rows\": 1,\n                        \"columns\": 2\n                    },\n                    \"layoutTemplateName\": \"gridLayout\"\n                },\n                \"viewports\": [\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"mXnsCcNzZL56z7mTZ\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": []\n                    },\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"ygz4nb28iJZcJhnYa\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": [\n                            {\n                                \"id\": \"uDoEgLTvnXTByWnPz\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"abstractPriorValue\",\n                                \"constraint\": {\n                                    \"equals\": {\n                                        \"value\": 1\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                ],\n                \"createdDate\": \"2017-02-14T16:07:12.085Z\"\n            },\n            {\n                \"id\": \"3yPYNaeFtr76Qz3jq\",\n                \"viewportStructure\": {\n                    \"type\": \"grid\",\n                    \"properties\": {\n                        \"rows\": 2,\n                        \"columns\": 2\n                    },\n                    \"layoutTemplateName\": \"gridLayout\"\n                },\n                \"viewports\": [\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"mXnsCcNzZL56z7mTZ\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"Body 3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": []\n                    },\n                    {\n                        \"viewportSettings\": {\n                            \"wlPreset\": \"Lung\"\n                        },\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"ygz4nb28iJZcJhnYa\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"Lung 3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": []\n                    },\n                    {\n                        \"viewportSettings\": {},\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"6vdBRZYnqmmosipph\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"Body 3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": [\n                            {\n                                \"id\": \"SxfTyhGcMhr56PtPM\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"abstractPriorValue\",\n                                \"constraint\": {\n                                    \"equals\": {\n                                        \"value\": 1\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"viewportSettings\": {\n                            \"wlPreset\": \"Lung\"\n                        },\n                        \"imageMatchingRules\": [],\n                        \"seriesMatchingRules\": [\n                            {\n                                \"id\": \"FTAyChZCPW68yJjXD\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"x0008103e\",\n                                \"constraint\": {\n                                    \"contains\": {\n                                        \"value\": \"Lung 3.0\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"studyMatchingRules\": [\n                            {\n                                \"id\": \"gMJjfrbsqYNbErPx5\",\n                                \"weight\": 1,\n                                \"required\": false,\n                                \"attribute\": \"abstractPriorValue\",\n                                \"constraint\": {\n                                    \"equals\": {\n                                        \"value\": 1\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                ],\n                \"createdDate\": \"2017-02-14T16:11:40.489Z\"\n            }\n        ],\n        \"numberOfPriorsReferenced\": 4\n    });\n\n    /**\n     * Demo #2\n     */\n\n    HP.demoProtocols.push({\n        \"id\": \"demoProtocol2\",\n        \"locked\": false,\n        \"name\": \"DFCI-CT-CHEST-COMPARE-2\",\n        \"createdDate\": \"2017-02-14T16:07:09.033Z\",\n        \"modifiedDate\": \"2017-02-14T16:18:43.930Z\",\n        \"availableTo\": {},\n        \"editableBy\": {},\n        \"protocolMatchingRules\": [{\n            \"id\": \"7tmuq7KzDMCWFeapc\",\n            \"weight\": 2,\n            \"required\": false,\n            \"attribute\": \"x00081030\",\n            \"constraint\": {\n                \"contains\": {\n                    \"value\": \"DFCI CT CHEST\"\n                }\n            }\n        }],\n        \"stages\": [{\n            \"id\": \"v5PfGt9F6mffZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7mac\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"2.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"ygz4nb28iJZcJhnYc\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"2.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTvnXTByWnPt\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"XTzu8HB3feep3HYKs\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mYnsCcNwZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"ygz4nb28iJZcJhnYa\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"ygz4nb29iJZcJhnYa\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTvnXTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:12.085Z\"\n        }, {\n            \"id\": \"3yPYNaeFtr76Qz3jq\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 2,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7mtr\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"jXnsCcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {\n                    \"wlPreset\": \"Lung\"\n                },\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"ygz4nb28iJZcJhnYb\",\n                    \"weight\": 2,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"ycz4nb28iJZcJhnYa\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"6vdBRZYnqmmosipph\",\n                    \"weight\": 2,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"6vdBRFYnqmmosipph\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"SxfTyhGcMhr56PtPM\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }, {\n                \"viewportSettings\": {\n                    \"wlPreset\": \"Lung\"\n                },\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"FTAyChZCPW68yJjXD\",\n                    \"weight\": 2,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 3.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"DTAyChZCPW68yJjXD\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 5.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"gMJjfrbsqYNbErPx5\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:11:40.489Z\"\n        }],\n        \"numberOfPriorsReferenced\": 1\n    });\n\n    /**\n     * Demo: screenCT\n     */\n\n    HP.demoProtocols.push({\n        \"id\": \"screenCT\",\n        \"locked\": false,\n        \"name\": \"DFCI-CT-CHEST-SCREEN\",\n        \"createdDate\": \"2017-02-14T16:07:09.033Z\",\n        \"modifiedDate\": \"2017-02-14T16:18:43.930Z\",\n        \"availableTo\": {},\n        \"editableBy\": {},\n        \"protocolMatchingRules\": [{\n            \"id\": \"7tmuq7KzDMCWFeapc\",\n            \"weight\": 2,\n            \"required\": false,\n            \"attribute\": \"x00081030\",\n            \"constraint\": {\n                \"contains\": {\n                    \"value\": \"DFCI CT CHEST\"\n                }\n            }\n        }],\n        \"stages\": [{\n            \"id\": \"v5PfGt9F6mffZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 1\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL55z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"2.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        },\n        {\n            \"id\": \"v5PfGt9F4mffZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 2,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7nTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 5.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcNzZL56z7rTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 3.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56r7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 5.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcNzZL56a7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Lung 3.0\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcRzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 4.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcNzTL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Coronal\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcMzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Body 4.0\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcAzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Sagittal\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }],\n        \"numberOfPriorsReferenced\": 0\n    });\n\n    /**\n     * Demo: PETCTSCREEN\n     */\n\n    HP.demoProtocols.push({\n        \"id\": \"PETCTSCREEN\",\n        \"locked\": false,\n        \"name\": \"PETCT-SCREEN\",\n        \"createdDate\": \"2017-02-14T16:07:09.033Z\",\n        \"modifiedDate\": \"2017-02-14T16:18:43.930Z\",\n        \"availableTo\": {},\n        \"editableBy\": {},\n        \"protocolMatchingRules\": [{\n            \"id\": \"7tmuqgKzDMCWFeapc\",\n            \"weight\": 5,\n            \"required\": false,\n            \"attribute\": \"x00081030\",\n            \"constraint\": {\n                \"contains\": {\n                    \"value\": \"PETCT\"\n                }\n            }\n        }],\n        \"stages\": [{\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcAzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZR56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mRnsCcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x00200011\",\n                    \"constraint\": {\n                        \"numericality\": {\n                            \"greaterThanOrEqualTo\": 2\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsGcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Corrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsHcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT WB\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {\n                    \"invert\": \"YES\"\n                },\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXneCcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Uncorrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCuNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT Nk\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }],\n        \"numberOfPriorsReferenced\": 0\n    });\n\n    /**\n     * Demo: PETCTCOMPARE\n     */\n\n    HP.demoProtocols.push({\n        \"id\": \"PETCTCOMPARE\",\n        \"locked\": false,\n        \"name\": \"PETCT-COMPARE\",\n        \"createdDate\": \"2017-02-14T16:07:09.033Z\",\n        \"modifiedDate\": \"2017-02-14T16:18:43.930Z\",\n        \"availableTo\": {},\n        \"editableBy\": {},\n        \"protocolMatchingRules\": [{\n            \"id\": \"7tmuqgKzDMCWFeapc\",\n            \"weight\": 5,\n            \"required\": false,\n            \"attribute\": \"x00081030\",\n            \"constraint\": {\n                \"contains\": {\n                    \"value\": \"PETCT\"\n                }\n            }\n        }],\n        \"stages\": [{\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL59z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7lTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTbnXTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 1,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNjZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcNzZL56z7gTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x00200011\",\n                    \"constraint\": {\n                        \"numericality\": {\n                            \"greaterThanOrEqualTo\": 2\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcCzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"Topogram\"\n                        }\n                    }\n                }, {\n                    \"id\": \"mXnsCcNzZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x00200011\",\n                    \"constraint\": {\n                        \"numericality\": {\n                            \"greaterThanOrEqualTo\": 2\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTvn1TByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 2,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL26z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Corrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL46z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT WB\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL57z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Corrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTvnYTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZQ56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT WB\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgLTvnKTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }, {\n            \"id\": \"v5PfGt9F6mFgZPif5\",\n            \"name\": \"oneByOne\",\n            \"viewportStructure\": {\n                \"type\": \"grid\",\n                \"properties\": {\n                    \"rows\": 2,\n                    \"columns\": 2\n                },\n                \"layoutTemplateName\": \"gridLayout\"\n            },\n            \"viewports\": [{\n                \"viewportSettings\": {\n                    \"invert\": \"YES\"\n                },\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZL56z7nTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Uncorrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNxZL56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT Nk\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": []\n            }, {\n                \"viewportSettings\": {\n                    \"invert\": \"YES\"\n                },\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZA56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"PET WB Uncorrected\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgHTvnXTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }, {\n                \"viewportSettings\": {},\n                \"imageMatchingRules\": [],\n                \"seriesMatchingRules\": [{\n                    \"id\": \"mXnsCcNzZP56z7mTZ\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"x0008103e\",\n                    \"constraint\": {\n                        \"contains\": {\n                            \"value\": \"CT Nk\"\n                        }\n                    }\n                }],\n                \"studyMatchingRules\": [{\n                    \"id\": \"uDoEgITvnXTByWnPz\",\n                    \"weight\": 1,\n                    \"required\": false,\n                    \"attribute\": \"abstractPriorValue\",\n                    \"constraint\": {\n                        \"equals\": {\n                            \"value\": 1\n                        }\n                    }\n                }]\n            }],\n            \"createdDate\": \"2017-02-14T16:07:09.033Z\"\n        }],\n        \"numberOfPriorsReferenced\": 1\n    });\n\n}\n\ngetDefaultProtocol();\n//getMRTwoByTwoTest();\n//getDemoProtocols();\n","import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\n// Local imports\nimport { removeFromArray } from '../lib/removeFromArray';\n\n/**\n * This class represents a Hanging Protocol at the highest level\n *\n * @type {Protocol}\n */\nHP.Protocol = class Protocol {\n    /**\n     * The Constructor for the Class to create a Protocol with the bare\n     * minimum information\n     *\n     * @param name The desired name for the Protocol\n     */\n    constructor(name) {\n        // Create a new UUID for this Protocol\n        this.id = Random.id();\n\n        // Store a value which determines whether or not a Protocol is locked\n        // This is probably temporary, since we will eventually have role / user\n        // checks for editing. For now we just need it to prevent changes to the\n        // default protocols.\n        this.locked = false;\n\n        // Boolean value to indicate if the protocol has updated priors information\n        // it's set in \"updateNumberOfPriorsReferenced\" function\n        this.hasUpdatedPriorsInformation = false;\n\n        // Apply the desired name\n        this.name = name;\n\n        // Set the created and modified dates to Now\n        this.createdDate = new Date();\n        this.modifiedDate = new Date();\n\n        // If we are logged in while creating this Protocol,\n        // store this information as well\n        if (Meteor.users && Meteor.userId) {\n            this.createdBy = Meteor.userId;\n            this.modifiedBy = Meteor.userId;\n        }\n\n        // Create two empty Sets specifying which roles\n        // have read and write access to this Protocol\n        this.availableTo = new Set();\n        this.editableBy = new Set();\n\n        // Define empty arrays for the Protocol matching rules\n        // and Stages\n        this.protocolMatchingRules = [];\n        this.stages = [];\n\n        // Define auxiliary values for priors\n        this.numberOfPriorsReferenced = -1;\n    }\n\n    getNumberOfPriorsReferenced(skipCache = false) {\n        let numberOfPriorsReferenced = skipCache !== true ? this.numberOfPriorsReferenced : -1;\n\n        // Check if information is cached already\n        if (numberOfPriorsReferenced > -1) {\n            return numberOfPriorsReferenced;\n        }\n\n        numberOfPriorsReferenced = 0;\n\n        // Search each study matching rule for prior rules\n        // Each stage can have many viewports that can have\n        // multiple study matching rules.\n        this.stages.forEach(stage => {\n            if (!stage.viewports) {\n                return;\n            }\n\n            stage.viewports.forEach(viewport => {\n                if (!viewport.studyMatchingRules) {\n                    return;\n                }\n\n                viewport.studyMatchingRules.forEach(rule => {\n                    // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0\n                    const priorsReferenced = rule.getNumberOfPriorsReferenced();\n                    if (priorsReferenced > numberOfPriorsReferenced) {\n                        numberOfPriorsReferenced = priorsReferenced;\n                    }\n                });\n            });\n        });\n\n        this.numberOfPriorsReferenced = numberOfPriorsReferenced;\n\n        return numberOfPriorsReferenced\n    }\n\n    updateNumberOfPriorsReferenced() {\n        this.getNumberOfPriorsReferenced(true);\n    }\n\n    /**\n     * Method to update the modifiedDate when the Protocol\n     * has been changed\n     */\n    protocolWasModified() {\n        // If we are logged in while modifying this Protocol,\n        // store this information as well\n        if (Meteor.users && Meteor.userId) {\n            this.modifiedBy = Meteor.userId;\n        }\n\n        // Protocol has been modified, so mark priors information\n        // as \"outdated\"\n        this.hasUpdatedPriorsInformation = false;\n\n        // Update number of priors referenced info\n        this.updateNumberOfPriorsReferenced();\n\n        // Update the modifiedDate with the current Date/Time\n        this.modifiedDate = new Date();\n    }\n\n    /**\n     * Occasionally the Protocol class needs to be instantiated from a JavaScript Object\n     * containing the Protocol data. This function fills in a Protocol with the Object\n     * data.\n     *\n     * @param input A Protocol as a JavaScript Object, e.g. retrieved from MongoDB or JSON\n     */\n    fromObject(input) {\n        // Check if the input already has an ID\n        // If so, keep it. It not, create a new UUID\n        this.id = input.id || Random.id();\n\n        // Assign the input name to the Protocol\n        this.name = input.name;\n\n        // Retrieve locked status, use !! to make it truthy\n        // so that undefined values will be set to false\n        this.locked = !!input.locked;\n\n        // TODO: Check how to regenerate Set from Object\n        //this.availableTo = new Set(input.availableTo);\n        //this.editableBy = new Set(input.editableBy);\n\n        // If the input contains Protocol matching rules\n        if (input.protocolMatchingRules) {\n            input.protocolMatchingRules.forEach(ruleObject => {\n                // Create new Rules from the stored data\n                var rule = new HP.ProtocolMatchingRule();\n                rule.fromObject(ruleObject);\n\n                // Add them to the Protocol\n                this.protocolMatchingRules.push(rule);\n            });\n        }\n\n        // If the input contains data for various Stages in the\n        // display set sequence\n        if (input.stages) {\n            input.stages.forEach(stageObject => {\n                // Create Stages from the stored data\n                var stage = new HP.Stage();\n                stage.fromObject(stageObject);\n\n                // Add them to the Protocol\n                this.stages.push(stage);\n            });\n        }\n    }\n\n    /**\n     * Creates a clone of the current Protocol with a new name\n     *\n     * @param name\n     * @returns {Protocol|*}\n     */\n    createClone(name) {\n        // Create a new JavaScript independent of the current Protocol\n        var currentProtocol = Object.assign({}, this);\n\n        // Create a new Protocol to return\n        var clonedProtocol = new HP.Protocol();\n\n        // Apply the desired properties\n        currentProtocol.id = clonedProtocol.id;\n        clonedProtocol.fromObject(currentProtocol);\n\n        // If we have specified a name, assign it\n        if (name) {\n            clonedProtocol.name = name;\n        }\n\n        // Unlock the clone\n        clonedProtocol.locked = false;\n\n        // Return the cloned Protocol\n        return clonedProtocol;\n    }\n\n    /**\n     * Adds a Stage to this Protocol's display set sequence\n     *\n     * @param stage\n     */\n    addStage(stage) {\n        this.stages.push(stage);\n\n        // Update the modifiedDate and User that last\n        // modified this Protocol\n        this.protocolWasModified();\n    }\n\n    /**\n     * Adds a Rule to this Protocol's array of matching rules\n     *\n     * @param rule\n     */\n    addProtocolMatchingRule(rule) {\n        this.protocolMatchingRules.push(rule);\n\n        // Update the modifiedDate and User that last\n        // modified this Protocol\n        this.protocolWasModified();\n    }\n\n    /**\n     * Removes a Rule from this Protocol's array of matching rules\n     *\n     * @param rule\n     */\n    removeProtocolMatchingRule(rule) {\n        var wasRemoved = removeFromArray(this.protocolMatchingRules, rule);\n\n        // Update the modifiedDate and User that last\n        // modified this Protocol\n        if (wasRemoved) {\n            this.protocolWasModified();\n        }\n    }\n};","import { Random } from 'meteor/random';\n\nimport { comparators } from '../lib/comparators';\n\nconst EQUALS_REGEXP = /^equals$/;\n\n/**\n * This Class represents a Rule to be evaluated given a set of attributes\n * Rules have:\n * - An attribute (e.g. 'seriesDescription')\n * - A constraint Object, in the form required by Validate.js:\n *\n * rule.constraint = {\n *   contains: {\n *      value: 'T-1'\n *      }\n *   };\n *\n *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase\n *\n * - A value for whether or not they are Required to be matched (default: False)\n * - A value for their relative weighting during Protocol or Image matching (default: 1)\n */\nexport class Rule {\n    /**\n     * The Constructor for the Class to create a Rule with the bare\n     * minimum information\n     *\n     * @param name The desired name for the Rule\n     */\n    constructor(attribute, constraint, required, weight) {\n        // Create a new UUID for this Rule\n        this.id = Random.id();\n\n        // Set the Rule's weight (defaults to 1)\n        this.weight = weight || 1;\n\n        // If an attribute is specified, assign it\n        if (attribute) {\n            this.attribute = attribute;\n        }\n\n        // If a constraint is specified, assign it\n        if (constraint) {\n            this.constraint = constraint;\n        }\n\n        // If a value for 'required' is specified, assign it\n        if (required === undefined) {\n            // If no value was specified, default to False\n            this.required = false;\n        } else {\n            this.required = required;\n        }\n\n        // Cache for constraint info object\n        this._constraintInfo = void 0;\n\n        // Cache for validator and value object\n        this._validatorAndValue = void 0;\n    }\n\n    /**\n     * Occasionally the Rule class needs to be instantiated from a JavaScript Object.\n     * This function fills in a Protocol with the Object data.\n     *\n     * @param input A Rule as a JavaScript Object, e.g. retrieved from MongoDB or JSON\n     */\n    fromObject(input) {\n        // Check if the input already has an ID\n        // If so, keep it. It not, create a new UUID\n        this.id = input.id || Random.id();\n\n        // Assign the specified input data to the Rule\n        this.required = input.required;\n        this.weight = input.weight;\n        this.attribute = input.attribute;\n        this.constraint = input.constraint;\n    }\n\n    /**\n     * Get the constraint info object for the current constraint\n     * @return {Object\\undefined} Constraint object or undefined if current constraint \n     *                            is not valid or not found in comparators list\n     */\n    getConstraintInfo() {\n        let constraintInfo = this._constraintInfo;\n        // Check if info is cached already\n        if (constraintInfo !== void 0) {\n            return constraintInfo;\n        }\n\n        const ruleConstraint = Object.keys(this.constraint)[0];\n\n        if (ruleConstraint !== void 0) {\n            constraintInfo = comparators.find(comparator => ruleConstraint === comparator.id)\n        }\n\n        // Cache this information for later use\n        this._constraintInfo = constraintInfo;\n\n        return constraintInfo;\n    }\n\n     /**\n     * Check if current rule is related to priors\n     * @return {Boolean} True if a rule is related to priors or false otherwise\n     */\n    isRuleForPrior() {\n        // @TODO: Should we check this too? this.attribute === 'relativeTime'\n        return this.attribute === 'abstractPriorValue';\n    }\n\n    /**\n     * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.\n     * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.\n     */\n    getNumberOfPriorsReferenced() {\n        if (!this.isRuleForPrior()) {\n            return -1;\n        }\n\n        // Get rule's validator and value\n        const ruleValidatorAndValue = this.getConstraintValidatorAndValue();\n        const { value, validator } = ruleValidatorAndValue;\n        const intValue = parseInt(value, 10) || 0; // avoid possible NaN\n\n        // \"Equal to\" validators\n        if (EQUALS_REGEXP.test(validator)) {\n            // In this case, -1 (the oldest prior) indicates that at least one study is used\n            return intValue < 0 ? 1 : intValue;\n        }\n\n        // Default cases return value\n        return 0;\n    }\n\n    /**\n     * Get the constraint validator and value\n     * @return {Object|undefined} Returns an object containing the validator and it's value or undefined\n     */\n    getConstraintValidatorAndValue() {\n        let validatorAndValue = this._validatorAndValue;\n        \n        // Check if validator and value are cached already\n        if (validatorAndValue !== void 0) {\n            return validatorAndValue;\n        }\n\n        // Get the constraint info object\n        const constraintInfo = this.getConstraintInfo();\n\n        // Constraint info object exists and is valid\n        if (constraintInfo !== void 0) {\n            const validator = constraintInfo.validator;\n            const currentValidator = this.constraint[validator];\n\n            if (currentValidator) {\n                const constraintValidator = constraintInfo.validatorOption;\n                const constraintValue = currentValidator[constraintValidator];\n\n                validatorAndValue = {\n                    value: constraintValue,\n                    validator: constraintInfo.id\n                };\n\n                this._validatorAndValue = validatorAndValue;\n            }\n        }\n\n        return validatorAndValue;\n    }\n}\n","import { Random } from 'meteor/random';\n\n/**\n * A Stage is one step in the Display Set Sequence for a Hanging Protocol\n *\n * Stages are defined as a ViewportStructure and an array of Viewports\n *\n * @type {Stage}\n */\nHP.Stage = class Stage {\n    constructor(ViewportStructure, name) {\n        // Create a new UUID for this Stage\n        this.id = Random.id();\n\n        // Assign the name and ViewportStructure provided\n        this.name = name;\n        this.viewportStructure = ViewportStructure;\n\n        // Create an empty array for the Viewports\n        this.viewports = [];\n\n        // Set the created date to Now\n        this.createdDate = new Date();\n    }\n\n    /**\n     * Creates a clone of the current Stage with a new name\n     *\n     * Note! This method absolutely cannot be renamed 'clone', because\n     * Minimongo's insert method uses 'clone' internally and this\n     * somehow causes very bizarre behaviour\n     *\n     * @param name\n     * @returns {Stage|*}\n     */\n    createClone(name) {\n        // Create a new JavaScript independent of the current Protocol\n        var currentStage = Object.assign({}, this);\n\n        // Create a new Stage to return\n        var clonedStage = new HP.Stage();\n\n        // Assign the desired properties\n        currentStage.id = clonedStage.id;\n        clonedStage.fromObject(currentStage);\n\n        // If we have specified a name, assign it\n        if (name) {\n            clonedStage.name = name;\n        }\n\n        // Return the cloned Stage\n        return clonedStage;\n    }\n\n    /**\n     * Occasionally the Stage class needs to be instantiated from a JavaScript Object.\n     * This function fills in a Protocol with the Object data.\n     *\n     * @param input A Stage as a JavaScript Object, e.g. retrieved from MongoDB or JSON\n     */\n    fromObject(input) {\n        // Check if the input already has an ID\n        // If so, keep it. It not, create a new UUID\n        this.id = input.id || Random.id();\n\n        // Assign the input name to the Stage\n        this.name = input.name;\n\n        // If a ViewportStructure is present in the input, add it from the\n        // input data\n        this.viewportStructure = new HP.ViewportStructure();\n        this.viewportStructure.fromObject(input.viewportStructure);\n\n        // If any viewports are present in the input object\n        if (input.viewports) {\n            input.viewports.forEach(viewportObject => {\n                // Create a new Viewport with their data\n                var viewport = new HP.Viewport();\n                viewport.fromObject(viewportObject);\n\n                // Add it to the viewports array\n                this.viewports.push(viewport);\n            });\n        }\n    }\n};","// Local imports\nimport { removeFromArray } from '../lib/removeFromArray';\n\n/**\n * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains\n * arrays of Rules that are matched in the ProtocolEngine in order to determine which\n * images should be hung.\n *\n * @type {Viewport}\n */\nHP.Viewport = class Viewport {\n    constructor() {\n        this.viewportSettings = {};\n        this.imageMatchingRules = [];\n        this.seriesMatchingRules = [];\n        this.studyMatchingRules = [];\n    }\n\n    /**\n     * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.\n     * This function fills in a Viewport with the Object data.\n     *\n     * @param input The Viewport as a JavaScript Object, e.g. retrieved from MongoDB or JSON\n     */\n    fromObject(input) {\n        // If ImageMatchingRules exist, create them from the Object data\n        // and add them to the Viewport's imageMatchingRules array\n        if (input.imageMatchingRules) {\n            input.imageMatchingRules.forEach(ruleObject => {\n                var rule = new HP.ImageMatchingRule();\n                rule.fromObject(ruleObject);\n                this.imageMatchingRules.push(rule);\n            });\n        }\n\n        // If SeriesMatchingRules exist, create them from the Object data\n        // and add them to the Viewport's seriesMatchingRules array\n        if (input.seriesMatchingRules) {\n            input.seriesMatchingRules.forEach(ruleObject => {\n                var rule = new HP.SeriesMatchingRule();\n                rule.fromObject(ruleObject);\n                this.seriesMatchingRules.push(rule);\n            });\n        }\n\n        // If StudyMatchingRules exist, create them from the Object data\n        // and add them to the Viewport's studyMatchingRules array\n        if (input.studyMatchingRules) {\n            input.studyMatchingRules.forEach(ruleObject => {\n                var rule = new HP.StudyMatchingRule();\n                rule.fromObject(ruleObject);\n                this.studyMatchingRules.push(rule);\n            });\n        }\n\n        // If ViewportSettings exist, add them to the current protocol\n        if (input.viewportSettings) {\n            this.viewportSettings = input.viewportSettings;\n        }\n    }\n\n    /**\n     * Finds and removes a rule from whichever array it exists in.\n     * It is not required to specify if it exists in studyMatchingRules,\n     * seriesMatchingRules, or imageMatchingRules\n     *\n     * @param rule\n     */\n    removeRule(rule) {\n        var array;\n        if (rule instanceof HP.StudyMatchingRule) {\n            array = this.studyMatchingRules;\n        } else if (rule instanceof HP.SeriesMatchingRule) {\n            array = this.seriesMatchingRules;\n        } else if (rule instanceof HP.ImageMatchingRule) {\n            array = this.imageMatchingRules;\n        }\n\n        removeFromArray(array, rule);\n    }\n};","/**\n * The ViewportStructure class represents the layout and layout properties that\n * Viewports are displayed in. ViewportStructure has a type, which corresponds to\n * a layout template, and a set of properties, which depend on the type.\n *\n * @type {ViewportStructure}\n */\nHP.ViewportStructure = class ViewportStructure {\n    constructor(type, properties) {\n        this.type = type;\n        this.properties = properties;\n    }\n\n    /**\n     * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.\n     * This function fills in a ViewportStructure with the Object data.\n     *\n     * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from MongoDB or JSON\n     */\n    fromObject(input) {\n        this.type = input.type;\n        this.properties = input.properties;\n    }\n\n    /**\n     * Retrieve the layout template name based on the layout type\n     *\n     * @returns {string}\n     */\n    getLayoutTemplateName() {\n        // Viewport structure can be updated later when we build more complex display layouts\n        switch (this.type) {\n            case 'grid':\n                return 'gridLayout';\n        }\n    }\n\n    /**\n     * Retrieve the number of Viewports required for this layout\n     * given the layout type and properties\n     *\n     * @returns {string}\n     */\n    getNumViewports() {\n        // Viewport structure can be updated later when we build more complex display layouts\n        switch (this.type) {\n            case 'grid':\n                // For the typical grid layout, we only need to multiply rows by columns to\n                // obtain the number of viewports\n                return this.properties.rows * this.properties.columns;\n        }   \n    }\n};","import { Rule } from '../Rule';\n\n/**\n * The ImageMatchingRule class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ImageMatchingRule}\n */\nHP.ImageMatchingRule = class ImageMatchingRule extends Rule {};","import { Rule } from '../Rule';\n\n/**\n * The ProtocolMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ProtocolMatchingRule}\n */\nHP.ProtocolMatchingRule = class ProtocolMatchingRule extends Rule {};","import { Rule } from '../Rule';\n\n/**\n * The SeriesMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {SeriesMatchingRule}\n */\nHP.SeriesMatchingRule = class SeriesMatchingRule extends Rule {};","import { Rule } from '../Rule';\n\n/**\n * The StudyMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {StudyMatchingRule}\n */\nHP.StudyMatchingRule = class StudyMatchingRule extends Rule {};\n","const comparators = [{\n    id: 'equals',\n    name: '= (Equals)',\n    validator: 'equals',\n    validatorOption: 'value',\n    description: 'The attribute must equal this value.'\n}, {\n    id: 'doesNotEqual',\n    name: '!= (Does not equal)',\n    validator: 'doesNotEqual',\n    validatorOption: 'value',\n    description: 'The attribute must not equal this value.'\n}, {\n    id: 'contains',\n    name: 'Contains',\n    validator: 'contains',\n    validatorOption: 'value',\n    description: 'The attribute must contain this value.'\n}, {\n    id: 'doesNotContain',\n    name: 'Does not contain',\n    validator: 'doesNotContain',\n    validatorOption: 'value',\n    description: 'The attribute must not contain this value.'\n}, {\n    id: 'startsWith',\n    name: 'Starts with',\n    validator: 'startsWith',\n    validatorOption: 'value',\n    description: 'The attribute must start with this value.'\n}, {\n    id: 'endsWith',\n    name: 'Ends with',\n    validator: 'endsWith',\n    validatorOption: 'value',\n    description: 'The attribute must end with this value.'\n}, {\n    id: 'onlyInteger',\n    name: 'Only Integers',\n    validator: 'numericality',\n    validatorOption: 'onlyInteger',\n    description: \"Real numbers won't be allowed.\"\n}, {\n    id: 'greaterThan',\n    name: '> (Greater than)',\n    validator: 'numericality',\n    validatorOption: 'greaterThan',\n    description: 'The attribute has to be greater than this value.'\n}, {\n    id: 'greaterThanOrEqualTo',\n    name: '>= (Greater than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'greaterThanOrEqualTo',\n    description: 'The attribute has to be at least this value.'\n}, {\n    id: 'lessThanOrEqualTo',\n    name: '<= (Less than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'lessThanOrEqualTo',\n    description: 'The attribute can be this value at the most.'\n}, {\n    id: 'lessThan',\n    name: '< (Less than)',\n    validator: 'numericality',\n    validatorOption: 'lessThan',\n    description: 'The attribute has to be less than this value.'\n}, {\n    id: 'odd',\n    name: 'Odd',\n    validator: 'numericality',\n    validatorOption: 'odd',\n    description: 'The attribute has to be odd.'\n}, {\n    id: 'even',\n    name: 'Even',\n    validator: 'numericality',\n    validatorOption: 'even',\n    description: 'The attribute has to be even.'\n}];\n\n// Immutable object\nObject.freeze(comparators);\n\nexport { comparators }","import { _ } from 'meteor/underscore';\n\n/**\n * Removes the first instance of an element from an array, if an equal value exists\n *\n * @param array\n * @param input\n *\n * @returns {boolean} Whether or not the element was found and removed\n */\nconst removeFromArray = (array, input) => {\n    // If the array is empty, stop here\n    if (!array ||\n        !array.length) {\n        return false;\n    }\n\n    array.forEach((value, index) => {\n        if (_.isEqual(value, input)) {\n            indexToRemove = index;\n            return false;\n        }\n    });\n\n    if (indexToRemove === void 0) {\n        return false;\n    }\n\n    array.splice(indexToRemove, 1);\n    return true;\n};\n\nexport { removeFromArray };","import { Meteor } from 'meteor/meteor';\nimport { comparators } from '../both/lib/comparators';\n\nMatchedProtocols = new Meteor.Collection(null);\nMatchedProtocols._debugName = 'MatchedProtocols';\n\nComparators = new Meteor.Collection(null);\nComparators._debugName = 'Comparators';\n\ncomparators.forEach(item => {\n    Comparators.insert(item);\n});\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport { Session } from 'meteor/session';\n\n// OHIF Modules\nimport { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n\n// Hanging Protocol local imports\nimport { HPMatcher } from './matcher/HPMatcher';\nimport { sortByScore } from './lib/sortByScore';\nimport './customViewportSettings';\n\n/**\n * Import Constants\n */\n\nconst { OHIFError, metadata: { StudyMetadata, SeriesMetadata, InstanceMetadata, StudySummary } } = OHIF.viewerbase;\n\n// Useful constants\nconst ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';\n\n// Define a global variable that will be used to refer to the Protocol Engine\n// It must be populated by HP.setEngine when the Viewer is initialized and a ProtocolEngine\n// is instantiated on top of the LayoutManager. If the global ProtocolEngine variable remains\n// undefined, none of the HangingProtocol functions will operate.\nProtocolEngine = undefined;\n\n/**\n * Sets the ProtocolEngine global given an instantiated ProtocolEngine. This is done so that\n * The functions in the package can depend on a ProtocolEngine variable, but this variable does\n * not have to be exported from the application level.\n *\n * (There may be a better way to do this, but for now this works with no real downside)\n *\n * @param protocolEngine An instantiated ProtocolEngine linked to a LayoutManager from the\n *                       Viewerbase package\n */\nHP.setEngine = protocolEngine => {\n    ProtocolEngine = protocolEngine;\n};\n\n/**\n * Gets the instantiated ProtocolEngine global object\n *\n * @returns protocolEngine An instantiated ProtocolEngine linked to a LayoutManager from the\n *                       Viewerbase package\n */\nHP.getEngine = () => {\n    return ProtocolEngine;\n};\n\nMeteor.startup(() => {\n    HP.addCustomViewportSetting('wlPreset', 'Window/Level Preset', Object.create(null), (element, optionValue) => {\n        if (_.findWhere(OHIF.viewer.wlPresets, { id: optionValue })) {\n            OHIF.viewerbase.wlPresets.applyWLPreset(optionValue, element);\n        }\n    });\n});\n\nHP.ProtocolEngine = class ProtocolEngine {\n    /**\n     * Constructor\n     * @param  {Object} layoutManager  Layout Manager Object\n     * @param  {Array} studies        Array of study metadata\n     * @param  {Map} priorStudies Map of prior studies\n     * @param  {Object} studyMedadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata\n     */\n    constructor(layoutManager, studies, priorStudies, studyMetadataSource) {\n\n        const { LayoutManager, StudyMetadataSource } = OHIF.viewerbase;\n        // -----------\n        // Type Validations\n\n        if (!(layoutManager instanceof LayoutManager)) {\n            throw new OHIFError('ProtocolEngine::constructor layoutManager is not an instance of LayoutManager');\n        }\n\n        if (!(studyMetadataSource instanceof StudyMetadataSource)) {\n            throw new OHIFError('ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource');\n        }\n\n        if (!(studies instanceof Array) && !studies.every(study => study instanceof StudyMetadata)) {\n            throw new OHIFError('ProtocolEngine::constructor studies is not an array or it\\'s items are not instances of StudyMetadata');\n        }\n\n        // --------------\n        // Initialization\n\n        this.LayoutManager = layoutManager;\n        this.studies = studies;\n        this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();\n        this.studyMetadataSource = studyMetadataSource;\n\n        // Put protocol engine in a known states\n        this.reset();\n\n        // Create an array for new stage ids to be stored\n        // while editing a stage\n        this.newStageIds = [];\n    }\n\n    /**\n     * Resets the ProtocolEngine to the best match\n     */\n    reset() {\n        const protocol = this.getBestProtocolMatch();\n\n        this.setHangingProtocol(protocol);\n    }\n\n    /**\n     * Retrieves the current Stage from the current Protocol and stage index\n     *\n     * @returns {*} The Stage model for the currently displayed Stage\n     */\n    getCurrentStageModel() {\n        return this.protocol.stages[this.stage];\n    }\n\n    /**\n     * Finds the best protocols from Protocol Store, matching each protocol matching rules\n     * with the given study. The best protocol are orded by score and returned in an array\n     * @param  {Object} study StudyMetadata instance object\n     * @return {Array}       Array of match objects or an empty array if no match was found\n     *                       Each match object has the score of the matching and the matched\n     *                       protocol\n     */\n    findMatchByStudy(study) {\n        OHIF.log.info('ProtocolEngine::findMatchByStudy');\n\n        const matched = [];\n        const studyInstance = study.getFirstInstance();\n\n        // Set custom attribute for study metadata\n        const numberOfAvailablePriors = this.getNumberOfAvailablePriors(study.getObjectID());\n\n        HP.ProtocolStore.getProtocol().forEach(protocol => {\n            // Clone the protocol's protocolMatchingRules array\n            // We clone it so that we don't accidentally add the\n            // numberOfPriorsReferenced rule to the Protocol itself.\n            let rules = protocol.protocolMatchingRules.slice();\n            if (!rules) {\n                return;\n            }\n\n            // Check if the study has the minimun number of priors used by the protocol.\n            const numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();\n            if (numberOfPriorsReferenced > numberOfAvailablePriors) {\n                return;\n            }\n\n            // Run the matcher and get matching details\n            const matchedDetails = HPMatcher.match(studyInstance, rules);\n            const score = matchedDetails.score;\n\n            // The protocol matched some rule, add it to the matched list\n            if (score > 0) {\n                matched.push({\n                    score,\n                    protocol\n                });\n            }\n        });\n\n        // If no matches were found, select the default protocol\n        if (!matched.length) {\n            const defaultProtocol = HP.ProtocolStore.getProtocol('defaultProtocol');\n\n            return [{\n                score: 1,\n                protocol: defaultProtocol\n            }];\n        }\n\n        // Sort the matched list by score\n        sortByScore(matched);\n\n        OHIF.log.info('ProtocolEngine::findMatchByStudy matched', matched);\n\n        return matched;\n    }\n\n    /**\n     * Populates the MatchedProtocols Collection by running the matching procedure\n     */\n    updateProtocolMatches() {\n        OHIF.log.info('ProtocolEngine::updateProtocolMatches');\n\n        // Clear all data from the MatchedProtocols Collection\n        MatchedProtocols.remove({});\n\n        // For each study, find the matching protocols\n        this.studies.forEach(study => {\n            const matched = this.findMatchByStudy(study);\n\n            // For each matched protocol, check if it is already in MatchedProtocols\n            matched.forEach(matchedDetail => {\n                const protocol = matchedDetail.protocol;\n                if (!protocol) {\n                    return;\n                }\n\n                const protocolInCollection = MatchedProtocols.findOne({\n                    id: protocol.id\n                });\n\n                // If it is not already in the MatchedProtocols Collection, insert it with its score\n                if (!protocolInCollection) {\n                    OHIF.log.info('ProtocolEngine::updateProtocolMatches inserting protocol match', matchedDetail);\n                    MatchedProtocols.insert(matchedDetail);\n                }\n            });\n        });\n    }\n\n    /**\n     * Return the best matched Protocol to the current study or set of studies\n     * @returns {*}\n     */\n    getBestProtocolMatch() {\n        // Run the matching to populate the MatchedProtocols Collection\n        this.updateProtocolMatches();\n\n        // Retrieve the highest scoring Protocol\n        const sorted = MatchedProtocols.find({}, {\n            sort: {\n                score: -1\n            },\n            limit: 1\n        }).fetch();\n\n        // Highest scoring Protocol\n        const bestMatch = sorted[0].protocol;\n\n        OHIF.log.info('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);\n\n        return bestMatch;\n    }\n\n    /**\n     * Get the number of prior studies supplied in the priorStudies map property.\n     *\n     * @param {String} studyObjectID The study object ID of the study whose priors are needed\n     * @returns {number} The number of available prior studies with the same PatientID\n     */\n    getNumberOfAvailablePriors(studyObjectID) {\n        const priors = this.getAvailableStudyPriors(studyObjectID);\n\n        return priors.length;\n    }\n\n    /**\n     * Get the array of prior studies from a specific study.\n     *\n     * @param {String} studyObjectID The study object ID of the study whose priors are needed\n     * @returns {Array} The array of available priors or an empty array\n     */\n    getAvailableStudyPriors(studyObjectID) {\n        const priors = this.priorStudies.get(studyObjectID);\n\n        return priors instanceof Array ? priors : [];\n    }\n\n    // Match images given a list of Studies and a Viewport's image matching reqs\n    matchImages(viewport, viewportIndex) {\n        OHIF.log.info('ProtocolEngine::matchImages');\n\n        const { studyMatchingRules, seriesMatchingRules, imageMatchingRules: instanceMatchingRules } = viewport;\n\n        const matchingScores = [];\n        const currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???\n        const firstInstance = currentStudy.getFirstInstance();\n\n        let highestStudyMatchingScore = 0;\n        let highestSeriesMatchingScore = 0;\n        let highestImageMatchingScore = 0;\n        let bestMatch;\n\n        // Set custom attribute for study metadata and it's first instance\n        currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n        if (firstInstance instanceof InstanceMetadata) {\n            firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n        }\n\n        // Only used if study matching rules has abstract prior values defined...\n        let priorStudies;\n\n        studyMatchingRules.forEach(rule => {\n            if (rule.attribute === ABSTRACT_PRIOR_VALUE) {\n                const validatorType = Object.keys(rule.constraint)[0];\n                const validator = Object.keys(rule.constraint[validatorType])[0];\n\n                let abstractPriorValue = rule.constraint[validatorType][validator];\n                abstractPriorValue = parseInt(abstractPriorValue, 10);\n                // TODO: Restrict or clarify validators for abstractPriorValue?\n\n                // No need to call it more than once...\n                if (!priorStudies) {\n                    priorStudies = this.getAvailableStudyPriors(currentStudy.getObjectID());\n                }\n\n                // TODO: Revisit this later: What about two studies with the same\n                // study date?\n\n                let priorStudy;\n                if (abstractPriorValue === -1) {\n                    priorStudy = priorStudies[priorStudies.length - 1];\n                } else {\n                    const studyIndex = Math.max(abstractPriorValue - 1, 0);\n                    priorStudy = priorStudies[studyIndex];\n                }\n\n                // Invalid data\n                if (!(priorStudy instanceof StudyMetadata) && !(priorStudy instanceof StudySummary)) {\n                    return;\n                }\n\n                const priorStudyObjectID = priorStudy.getObjectID();\n\n                // Check if study metadata is already in studies list\n                if (this.studies.find(study => study.getObjectID() === priorStudyObjectID)) {\n                    return;\n                }\n\n                // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)\n                this.studyMetadataSource.loadStudy(priorStudy).then(studyMetadata => {\n                    // Set the custom attribute abstractPriorValue for the study metadata\n                    studyMetadata.setCustomAttribute(ABSTRACT_PRIOR_VALUE, abstractPriorValue);\n\n                    // Also add custom attribute\n                    const firstInstance = studyMetadata.getFirstInstance();\n                    if (firstInstance instanceof InstanceMetadata) {\n                        firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, abstractPriorValue);\n                    }\n\n                    // Insert the new study metadata\n                    this.studies.push(studyMetadata);\n\n                    // Update the viewport to refresh layout manager with new study\n                    this.updateViewports(viewportIndex);\n                }, error => {\n                    OHIF.log.warn(error);\n                    throw new OHIFError(`ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ${priorStudyObjectID}`);\n                });\n            }\n            // TODO: Add relative Date / time\n        });\n\n        this.studies.forEach(study => {\n            const studyMatchDetails = HPMatcher.match(study.getFirstInstance(), studyMatchingRules);\n            if ((studyMatchingRules.length && !studyMatchDetails.score) ||\n                studyMatchDetails.score < highestStudyMatchingScore) {\n                return;\n            }\n\n            highestStudyMatchingScore = studyMatchDetails.score;\n\n            study.forEachSeries(series => {\n                const seriesMatchDetails = HPMatcher.match(series.getFirstInstance(), seriesMatchingRules);\n                if ((seriesMatchingRules.length && !seriesMatchDetails.score) ||\n                    seriesMatchDetails.score < highestSeriesMatchingScore) {\n                    return;\n                }\n\n                highestSeriesMatchingScore = seriesMatchDetails.score;\n\n                series.forEachInstance((instance, index) => {\n                    // This tests to make sure there is actually image data in this instance\n                    // TODO: Change this when we add PDF and MPEG support\n                    // See https://ohiforg.atlassian.net/browse/LT-227\n                    // sopClassUid = x00080016\n                    // rows = x00280010\n                    if (!OHIF.viewerbase.isImage(instance.getTagValue('x00080016')) && !instance.getTagValue('x00280010')) {\n                        return;\n                    }\n\n                    const instanceMatchDetails = HPMatcher.match(instance, instanceMatchingRules);\n\n                    const matchDetails = {\n                        passed: [],\n                        failed: []\n                    };\n\n                    matchDetails.passed = matchDetails.passed.concat(instanceMatchDetails.details.passed);\n                    matchDetails.passed = matchDetails.passed.concat(seriesMatchDetails.details.passed);\n                    matchDetails.passed = matchDetails.passed.concat(studyMatchDetails.details.passed);\n\n                    matchDetails.failed = matchDetails.failed.concat(instanceMatchDetails.details.failed);\n                    matchDetails.failed = matchDetails.failed.concat(seriesMatchDetails.details.failed);\n                    matchDetails.failed = matchDetails.failed.concat(studyMatchDetails.details.failed);\n\n                    const totalMatchScore = instanceMatchDetails.score + seriesMatchDetails.score + studyMatchDetails.score;\n                    const currentSOPInstanceUID = instance.getSOPInstanceUID();\n\n                    const imageDetails = {\n                        studyInstanceUid: study.getStudyInstanceUID(),\n                        seriesInstanceUid: series.getSeriesInstanceUID(),\n                        sopInstanceUid: currentSOPInstanceUID,\n                        currentImageIdIndex: index,\n                        matchingScore: totalMatchScore,\n                        matchDetails: matchDetails,\n                        sortingInfo: {\n                            score: totalMatchScore,\n                            study: instance.getTagValue('x00080020') + instance.getTagValue('x00080030'), // StudyDate = x00080020 StudyTime = x00080030\n                            series: parseInt(instance.getTagValue('x00200011')), // TODO: change for seriesDateTime SeriesNumber = x00200011\n                            instance: parseInt(instance.getTagValue('x00200013')) // TODO: change for acquisitionTime InstanceNumber = x00200013\n                        }\n                    };\n\n                    // Find the displaySet\n                    const displaySet = study.findDisplaySet(displaySet => displaySet.images.find(image => image.getSOPInstanceUID() === currentSOPInstanceUID));\n\n                    // If the instance was found, set the displaySet ID\n                    if (displaySet) {\n                        imageDetails.displaySetInstanceUid = displaySet.getUID();\n                        imageDetails.imageId = instance.getImageId();\n                    }\n\n                    if ((totalMatchScore > highestImageMatchingScore) || !bestMatch) {\n                        highestImageMatchingScore = totalMatchScore;\n                        bestMatch = imageDetails;\n                    }\n\n                    matchingScores.push(imageDetails);\n                });\n            });\n        });\n\n        // Sort the matchingScores\n        const sortingFunction = OHIF.utils.sortBy({\n            name: 'score',\n            reverse: true\n        }, {\n            name: 'study',\n            reverse: true\n        }, {\n            name: 'instance'\n        }, {\n            name: 'series'\n        });\n        matchingScores.sort((a, b) => sortingFunction(a.sortingInfo, b.sortingInfo));\n\n        OHIF.log.info('ProtocolEngine::matchImages bestMatch', bestMatch);\n\n        return {\n            bestMatch,\n            matchingScores\n        };\n    }\n\n    /**\n     * Rerenders viewports that are part of the current ProtocolEngine's LayoutManager\n     * using the matching rules internal to each viewport.\n     *\n     * If this function is provided the index of a viewport, only the specified viewport\n     * is rerendered.\n     *\n     * @param viewportIndex\n     */\n    updateViewports(viewportIndex) {\n        OHIF.log.info(`ProtocolEngine::updateViewports viewportIndex: ${viewportIndex}`);\n\n        // Make sure we have an active protocol with a non-empty array of display sets\n        if (!this.getNumProtocolStages()) {\n            return;\n        }\n\n        // Retrieve the current display set in the display set sequence\n        const stageModel = this.getCurrentStageModel();\n\n        // If the current display set does not fulfill the requirements to be displayed,\n        // stop here.\n        if (!stageModel ||\n            !stageModel.viewportStructure ||\n            !stageModel.viewports ||\n            !stageModel.viewports.length) {\n            return;\n        }\n\n        // Retrieve the layoutTemplate associated with the current display set's viewport structure\n        // If no such template name exists, stop here.\n        const layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();\n        if (!layoutTemplateName) {\n            return;\n        }\n\n        // Retrieve the properties associated with the current display set's viewport structure template\n        // If no such layout properties exist, stop here.\n        const layoutProps = stageModel.viewportStructure.properties;\n        if (!layoutProps) {\n            return;\n        }\n\n        // Create an empty array to store the output viewportData\n        const viewportData = [];\n\n        // Empty the matchDetails associated with the ProtocolEngine.\n        // This will be used to store the pass/fail details and score\n        // for each of the viewport matching procedures\n        this.matchDetails = [];\n\n        // Loop through each viewport\n        stageModel.viewports.forEach((viewport, viewportIndex) => {\n            const details = this.matchImages(viewport, viewportIndex);\n\n            this.matchDetails[viewportIndex] = details;\n\n            // Convert any YES/NO values into true/false for Cornerstone\n            const cornerstoneViewportParams = {};\n\n            // Cache viewportSettings keys\n            const viewportSettingsKeys = Object.keys(viewport.viewportSettings);\n\n            viewportSettingsKeys.forEach(key => {\n                let value = viewport.viewportSettings[key];\n                if (value === 'YES') {\n                    value = true;\n                } else if (value === 'NO') {\n                    value = false;\n                }\n\n                cornerstoneViewportParams[key] = value;\n            });\n\n            // imageViewerViewports occasionally needs relevant layout data in order to set\n            // the element style of the viewport in question\n            const currentViewportData = {\n                viewportIndex,\n                viewport: cornerstoneViewportParams,\n                ...layoutProps\n            };\n\n            const customSettings = [];\n            viewportSettingsKeys.forEach(id => {\n                const setting = HP.CustomViewportSettings[id];\n                if (!setting) {\n                    return;\n                }\n\n                customSettings.push({\n                    id: id,\n                    value: viewport.viewportSettings[id]\n                });\n            });\n\n            currentViewportData.renderedCallback = element => {\n                //console.log('renderedCallback for ' + element.id);\n                customSettings.forEach(customSetting => {\n                    OHIF.log.info(`ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ${customSetting.id}`);\n                    OHIF.log.info(`ProtocolEngine::currentViewportData.renderedCallback with value: ${customSetting.value}`);\n\n                    const setting = HP.CustomViewportSettings[customSetting.id];\n                    setting.callback(element, customSetting.value);\n                });\n            };\n\n            let currentMatch = details.bestMatch;\n            let currentPosition = 1;\n            const scoresLength = details.matchingScores.length;\n            while (currentPosition < scoresLength && _.findWhere(viewportData, {\n                imageId: currentMatch.imageId\n            })) {\n                currentMatch = details.matchingScores[currentPosition];\n                currentPosition++;\n            }\n\n            if (currentMatch && currentMatch.imageId) {\n                currentViewportData.studyInstanceUid = currentMatch.studyInstanceUid;\n                currentViewportData.seriesInstanceUid = currentMatch.seriesInstanceUid;\n                currentViewportData.sopInstanceUid = currentMatch.sopInstanceUid;\n                currentViewportData.currentImageIdIndex = currentMatch.currentImageIdIndex;\n                currentViewportData.displaySetInstanceUid = currentMatch.displaySetInstanceUid;\n                currentViewportData.imageId = currentMatch.imageId;\n            }\n\n            // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.\n            // if (!currentViewportData.displaySetInstanceUid) {\n            //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');\n            // }\n\n            viewportData.push(currentViewportData);\n        });\n\n        this.LayoutManager.layoutTemplateName = layoutTemplateName;\n        this.LayoutManager.layoutProps = layoutProps;\n        this.LayoutManager.viewportData = viewportData;\n\n        if (viewportIndex !== undefined && viewportData[viewportIndex]) {\n            this.LayoutManager.rerenderViewportWithNewDisplaySet(viewportIndex, viewportData[viewportIndex]);\n        } else {\n            this.LayoutManager.updateViewports();\n        }\n    }\n\n    /**\n     * Sets the current Hanging Protocol to the specified Protocol\n     * An optional argument can also be used to prevent the updating of the Viewports\n     *\n     * @param newProtocol\n     * @param updateViewports\n     */\n    setHangingProtocol(newProtocol, updateViewports = true) {\n        OHIF.log.info('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);\n        OHIF.log.info(`ProtocolEngine::setHangingProtocol updateViewports = ${updateViewports}`);\n\n        // Reset the array of newStageIds\n        this.newStageIds = [];\n\n        if (HP.Protocol.prototype.isPrototypeOf(newProtocol)) {\n            this.protocol = newProtocol;\n        } else {\n            this.protocol = new HP.Protocol();\n            this.protocol.fromObject(newProtocol);\n        }\n\n        this.stage = 0;\n\n        // Update viewports by default\n        if (updateViewports) {\n            this.updateViewports();\n        }\n\n        MatchedProtocols.update({}, {\n            $set: {\n                selected: false\n            }\n        }, {\n            multi: true\n        });\n\n        MatchedProtocols.update({\n            id: this.protocol.id\n        }, {\n            $set: {\n                selected: true\n            }\n        });\n\n        Session.set('HangingProtocolName', this.protocol.name);\n        Session.set('HangingProtocolStage', this.stage);\n    }\n\n     /**\n     * Check if the next stage is available\n     * @return {Boolean} True if next stage is available or false otherwise\n     */\n    isNextStageAvailable() {\n        const numberOfStages = this.getNumProtocolStages();\n\n        return this.stage + 1 < numberOfStages;\n    }\n\n     /**\n     * Check if the previous stage is available\n     * @return {Boolean} True if previous stage is available or false otherwise\n     */\n    isPreviousStageAvailable() {\n        return this.stage - 1 >= 0;\n    }\n\n    /**\n     * Changes the current stage to a new stage index in the display set sequence.\n     * It checks if the next stage exists.\n     *\n     * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage\n     * @return {Boolean} True if new stage has set or false, otherwise\n     */\n    setCurrentProtocolStage(stageAction) {\n        // Check if previous or next stage is available\n        if (stageAction === -1 && !this.isPreviousStageAvailable()) {\n            return false;\n        } else if (stageAction === 1 && !this.isNextStageAvailable()) {\n            return false;\n        }\n\n        // Sets the new stage\n        this.stage += stageAction;\n\n        // Log the new stage\n        OHIF.log.info(`ProtocolEngine::setCurrentProtocolStage stage = ${this.stage}`);\n\n        // Set stage Session variable for reactivity\n        Session.set('HangingProtocolStage', this.stage);\n\n        // Since stage has changed, we need to update the viewports\n        // and redo matchings\n        this.updateViewports();\n\n        // Everything went well\n        return true;\n    }\n\n    /**\n     * Retrieves the number of Stages in the current Protocol or\n     * undefined if no protocol or stages are set\n     */\n    getNumProtocolStages() {\n        if (!this.protocol || !this.protocol.stages || !this.protocol.stages.length) {\n            return;\n        }\n\n        return this.protocol.stages.length;\n    }\n\n    /**\n     * Switches to the next protocol stage in the display set sequence\n     */\n    nextProtocolStage() {\n        OHIF.log.info('ProtocolEngine::nextProtocolStage');\n\n        if (!this.setCurrentProtocolStage(1)) {\n            // Just for logging purpose\n            OHIF.log.info('ProtocolEngine::nextProtocolStage failed');\n        }\n    }\n\n    /**\n     * Switches to the previous protocol stage in the display set sequence\n     */\n    previousProtocolStage() {\n        OHIF.log.info('ProtocolEngine::previousProtocolStage');\n\n        if (!this.setCurrentProtocolStage(-1)) {\n            // Just for logging purpose\n            OHIF.log.info('ProtocolEngine::previousProtocolStage failed');\n        }\n    }\n};\n","import { Blaze } from 'meteor/blaze';\n\nconst attributeCache = Object.create(null);\nconst REGEXP = /^\\([x0-9a-f]+\\)/;\n\nconst humanize = text => {\n    let humanized = text.replace(/([A-Z])/g, ' $1'); // insert a space before all caps\n\n    humanized = humanized.replace(/^./, str => { // uppercase the first character\n        return str.toUpperCase();\n    });\n\n    return humanized;\n};\n\n/**\n * Get the text of an attribute for a given attribute\n * @param  {String} attributeId The attribute ID\n * @param  {Array} attributes   Array of attributes objects with id and text properties\n * @return {String}             If found return the attribute text or an empty string otherwise\n */\nconst getAttributeText = (attributeId, attributes) => {\n    // If the attribute is already in the cache, return it\n    if (attributeId in attributeCache) {\n        return attributeCache[attributeId];\n    }\n\n    // Find the attribute with given attributeId\n    const attribute = attributes.find(attribute => attribute.id === attributeId);\n\n    let attributeText;\n\n    // If attribute was found get its text and save it on the cache\n    if (attribute) {\n        attributeText = attribute.text.replace(REGEXP, '');\n        attributeCache[attributeId] = attributeText;\n    }\n\n    return attributeText || '';\n};\n\nBlaze.registerHelper('displayConstraint', (attributeId, constraint, attributes) => {\n    if (!constraint || !attributeId) {\n        return;\n    }\n\n    const validatorType = Object.keys(constraint)[0];\n    if (!validatorType) {\n        return;\n    }\n\n    const validator = Object.keys(constraint[validatorType])[0];\n    if (!validator) {\n        return;\n    }\n\n    const value = constraint[validatorType][validator];\n    if (value === void 0) {\n        return;\n    }\n\n    let comparator = validator;\n    if (validator === 'value') {\n        comparator = validatorType;\n    }\n\n    const attributeText = getAttributeText(attributeId, attributes);\n    const constraintText = attributeText + ' ' + humanize(comparator).toLowerCase() + ' ' + value;\n\n    return constraintText;\n});","import { Blaze } from 'meteor/blaze';\n\n\nBlaze.registerHelper('viewportSettingsTypes', function() {\n    return HP.viewportSettingsTypes;\n});\n\nBlaze.registerHelper('toolSettingsTypes', function() {\n    return HP.toolSettingsTypes;\n});\n\nBlaze.registerHelper('studyAttributes', function() {\n    return HP.studyAttributes;\n});\n\nBlaze.registerHelper('seriesAttributes', function() {\n    return HP.seriesAttributes;\n});\n\nBlaze.registerHelper('instanceAttributes', function() {\n    return HP.instanceAttributes;\n});\n","// The ProtocolStore module allows persisting hanging protocols using different strategies.\n// For example, one strategy stores hanging protocols in the application server while\n// another strategy stores them in a remote machine, but only one strategy can be used at a time.\n\nHP.ProtocolStore = (function () {\n\n    var strategy;\n\n    /**\n     * Sets the strategy used to persist hanging protocols\n     *\n     * @param preferredStrategy A preferred strategy will be using to persist hanging protocols\n     */\n    function setStrategy(preferredStrategy) {\n        strategy = preferredStrategy;\n    }\n\n    /**\n     * Registers a function to be called when the protocol store is ready to persist hanging protocols\n     *\n     * NOTE: Strategies should implement this function\n     *\n     * @param callback The function to be called as a callback\n     */\n    function onReady(callback) {\n        strategy.onReady(callback);\n    }\n\n    /**\n     * Get a HP.Protocol instance for the given protocol object\n     * @param  {Object} protocolObject Protocol plain object\n     * @return {HP.Protocol}           HP.Protocol instance for the given protocol object\n     */\n    function getProtocolInstance(protocolObject) {\n        const protocolInstance = new HP.Protocol();\n        protocolInstance.fromObject(protocolObject);\n\n        return protocolInstance;\n    }\n\n    /**\n     * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n     *\n     * NOTE: Strategies should implement this function\n     *\n     * @param protocolId The protocol ID used to find the hanging protocol\n     * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n     */\n    function getProtocol(protocolId) {\n        let result = strategy.getProtocol(protocolId);\n\n        // If result is an array of protocols objects\n        if (result instanceof Array) {\n            result.forEach( (protocol, index) => {\n                // Check if protocol is an instance of HP.Protocol\n                if (!(protocol instanceof HP.Protocol)) {\n                    result[index] = getProtocolInstance(protocol);\n                }\n            });\n        } else if (result !== void 0 && !(result instanceof HP.Protocol)) {\n            // Check if result exists and is not an instance of HP.Protocol\n            result = getProtocolInstance(result);\n        }\n\n\n        return result;\n    }\n\n    /**\n     * Stores the hanging protocol\n     *\n     * NOTE: Strategies should implement this function\n     *\n     * @param protocol The hanging protocol to be stored\n     */\n    function addProtocol(protocol) {\n        strategy.addProtocol(protocol);\n    }\n\n    /**\n     * Updates the hanging protocol by protocolId\n     *\n     * NOTE: Strategies should implement this function\n     *\n     * @param protocolId The protocol ID used to find the hanging protocol to update\n     * @param protocol The updated hanging protocol\n     */\n    function updateProtocol(protocolId, protocol) {\n        strategy.updateProtocol(protocolId, protocol);\n    }\n\n    /**\n     * Removes the hanging protocol\n     *\n     * NOTE: Strategies should implement this function\n     *\n     * @param protocolId The protocol ID used to remove the hanging protocol\n     */\n    function removeProtocol(protocolId) {\n        strategy.removeProtocol(protocolId);\n    }\n\n    // Module Exports\n    return {\n        setStrategy: setStrategy,\n        onReady: onReady,\n        getProtocol: getProtocol,\n        addProtocol: addProtocol,\n        updateProtocol: updateProtocol,\n        removeProtocol: removeProtocol\n    };\n\n})();\n","// The ProtocolStore default strategy is used to persist hanging protocols in\n// the MongoDB collection 'HangingProtocols' in the application server.\n\nvar defaultStrategy = (function () {\n\n    var hangingProtocolSubs;\n\n    function addDefaultProtocols() {\n        console.log('Inserting default protocols');\n\n        addProtocol(HP.defaultProtocol);\n\n        //addProtocol(HP.testProtocol);\n        /* HP.demoProtocols.forEach(protocol => {\n            addProtocol(protocol);\n        });*/\n    }\n\n    function getDatabaseIdByProtocolId(protocolId) {\n        const filteredProtocol = HangingProtocols.findOne({\n            id: protocolId\n        }, {\n            fields: {\n                _id: true\n            }\n        });\n\n        if (!filteredProtocol) {\n            return;\n        }\n\n        return filteredProtocol._id;\n    }\n\n    /**\n     * Registers a function to be called when the hangingprotocols collection is subscribed\n     * The callback is called only one time when the subscription is ready\n     *\n     * @param callback The function to be called as a callback\n     */\n    function onReady(callback) {\n        if (hangingProtocolSubs && hangingProtocolSubs.ready()) {\n            // It is already ready\n            callback();\n        } else {\n            // Subscribe the hangingprotocols collection\n            hangingProtocolSubs = Meteor.subscribe('hangingprotocols');\n\n            // Wait for the subscription to be ready\n            Tracker.autorun((computation) => {\n                if (hangingProtocolSubs.ready()) {\n                    computation.stop();\n                    addDefaultProtocols();\n                    callback();\n                }\n            });\n        }\n    }\n\n    /**\n     * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n     *\n     * @param protocolId The protocol ID used to find the hanging protocol\n     * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n     */\n    function getProtocol(protocolId) {\n        // Return the hanging protocol by protocolId if defined\n        if (protocolId) {\n            return HangingProtocols.findOne({\n                id: protocolId\n            });\n        }\n\n        // Otherwise, return all protocols\n        return HangingProtocols.find().fetch();\n    }\n\n    /**\n     * Stores the hanging protocol\n     *\n     * @param protocol The hanging protocol to be stored\n     */\n    function addProtocol(protocol) {\n        // Collections can only be updated by database ID (_id) on client, so\n        // get the database ID (_id) by the hanging protocol ID firstly\n        const databaseId = getDatabaseIdByProtocolId(protocol.id);\n\n        // Remove any MongoDB ID the protocol may have had\n        delete protocol._id;\n\n        // Update the protocol with the same id if exists instead of inserting this protocol\n        if (databaseId) {\n            // Update the hanging protocol by the database ID\n            HangingProtocols.update(databaseId, {\n                $set: protocol\n            });\n\n            return;\n        }\n\n        // Insert the protocol\n        HangingProtocols.insert(protocol);\n    }\n\n    /**\n     * Updates the hanging protocol by protocolId\n     *\n     * @param protocolId The protocol ID used to find the hanging protocol to update\n     * @param protocol The updated hanging protocol\n     */\n    function updateProtocol(protocolId, protocol) {\n        // Collections can only be updated by database ID (_id) on client, so\n        // get the database ID (_id) by the hanging protocol ID firstly\n        const databaseId = getDatabaseIdByProtocolId(protocolId);\n\n        // Skip if it does not exist in database\n        if (!databaseId) {\n            return;\n        }\n\n        // Remove any MongoDB ID the protocol may have had\n        delete protocol._id;\n\n        // Update the hanging protocol by the database ID\n        HangingProtocols.update(databaseId, {\n            $set: protocol\n        });\n    }\n\n    /**\n     * Removes the hanging protocol\n     *\n     * @param protocolId The protocol ID used to remove the hanging protocol\n     */\n    function removeProtocol(protocolId) {\n        // Collections can only be removed by database ID (_id) on client, so\n        // get the database ID (_id) by the hanging protocol ID firstly\n        const databaseId = getDatabaseIdByProtocolId(protocolId);\n\n        // Skip if it does not exist in database\n        if (!databaseId) {\n            return;\n        }\n\n        // Remove the hanging protocol by the database ID\n        HangingProtocols.remove(databaseId);\n    }\n\n    // Module Exports\n    return {\n        onReady: onReady,\n        getProtocol: getProtocol,\n        addProtocol: addProtocol,\n        updateProtocol: updateProtocol,\n        removeProtocol: removeProtocol\n    };\n\n})();\n\nHP.ProtocolStore.setStrategy(defaultStrategy);\n","Template.previousPresentationGroupButton.helpers({\n    /**\n     * Check if an earlier stage exists for the user to switch to\n     *\n     * @returns {boolean} Whether or not an earlier stage exists\n     */\n    previousNotAvailable() {\n        // Run this helper whenever the ProtocolEngine / LayoutManager has changed\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine has been defined yet, stop here\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Return whether or not the current stage is the first stage\n        return ProtocolEngine.stage === 0;\n    }\n});\n\nTemplate.previousPresentationGroupButton.events({\n    /**\n     * Switch to the previous Presentation group\n     *\n     * @param event The click event on the button\n     */\n    'click #previousPresentationGroup'(event) {\n        // If no ProtocolEngine has been defined yet, do nothing\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Stop here if the tool is disabled\n        if ($(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        // Hide the button's Bootstrap tooltip in case it was shown\n        $(event.currentTarget).tooltip('hide');\n\n        // Instruct the ProtocolEngine to switch to the next stage\n        ProtocolEngine.previousProtocolStage();\n    }\n});\n","Template.nextPresentationGroupButton.helpers({\n    /**\n     * Check if a later stage exists for the user to switch to\n     *\n     * @returns {boolean} Whether or not a later stage exists\n     */\n    nextNotAvailable() {\n        // Run this helper whenever the ProtocolEngine / LayoutManager has changed\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine has been defined yet, stop here\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Return whether or not the current stage is the last stage\n        return ProtocolEngine.stage === ProtocolEngine.getNumProtocolStages() - 1;\n    }\n});\n\nTemplate.nextPresentationGroupButton.events({\n    /**\n     * Switch to the next Presentation group\n     *\n     * @param event The click event on the button\n     */\n    'click #nextPresentationGroup'(event) {\n        // If no ProtocolEngine has been defined yet, do nothing\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Stop here if the tool is disabled\n        if ($(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        // Hide the button's Bootstrap tooltip in case it was shown\n        $(event.currentTarget).tooltip('hide');\n\n        // Instruct the ProtocolEngine to switch to the next stage\n        ProtocolEngine.nextProtocolStage();\n    }\n});\n","import { OHIF } from 'meteor/ohif:core';\n\nTemplate.matchedProtocols.helpers({\n    /**\n     * Reactively re-render the MatchedProtocols Collection contents\n     */\n    matchedProtocols() {\n        return MatchedProtocols.find();\n    }\n});\n\nTemplate.matchedProtocols.events({\n    /**\n     * Instruct the ProtocolEngine to apply the specified Hanging Protocol\n     */\n    'click .matchedProtocol': function() {\n        var protocol = this;\n        ProtocolEngine.setHangingProtocol(protocol);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { Random } from 'meteor/random';\nimport { $ } from 'meteor/jquery';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n\n/**\n * Updates the Hanging Protocol Select2 Input\n */\nfunction updateProtocolSelect() {\n    if (!ProtocolEngine) {\n        return;\n    }\n    \n    // Loop through the available hanging protocols\n    // to create an array with the protocols that includes\n    // a property labelled 'text', so that Select2 has something\n    // to display\n    var protocolsSelect2Data = HP.ProtocolStore.getProtocol().map(function(protocol) {\n        return {\n            id: protocol.id,\n            text: protocol.name\n        };\n    });\n\n    // Select the Protocol select DOM element\n    var protocolSelect = $('#protocolSelect');\n\n    // Empty the element using Select2 for rerendering\n    protocolSelect.select2().empty();\n\n    // Initialize the select element with Select2 using the\n    // array of protocols\n    protocolSelect.select2({\n        data: protocolsSelect2Data\n    });\n\n    // Update the ProtocolSelector to display the current active Protocol\n    protocolSelect.select2().val(ProtocolEngine.protocol.id).trigger('change');\n}\n\nTemplate.protocolEditor.onRendered(() => {\n    const instance = Template.instance();\n\n    instance.timeAgoInterval = Meteor.setInterval(() => {\n        // Run this every minute\n        Session.set('timeAgoVariable', new Date());\n    }, 60000);\n\n    // Update the Protocol select box when the hanging protocol store is ready\n    HP.ProtocolStore.onReady(() => {\n        updateProtocolSelect();\n    });\n});\n\nTemplate.protocolEditor.onDestroyed(() => {\n    const instance = Template.instance();\n\n    Meteor.clearInterval(instance.timeAgoInterval);\n});\n\nTemplate.protocolEditor.helpers({\n    /**\n     * Reactively updates the active Protocol\n     *\n     * @returns {*} The currently active Protocol Model\n     */\n    activeProtocol() {\n        // Whenever the Layout Manager is updated, trigger this helper\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine, protocol, or stage is defined, stop here\n        if (!ProtocolEngine ||\n            !ProtocolEngine.protocol ||\n            !ProtocolEngine.LayoutManager ||\n            ProtocolEngine.stage === undefined) {\n            return;\n        }\n\n        // Update the Protocol Select box\n        updateProtocolSelect();\n\n        // Make sure that the number of referenced priors is correct\n        ProtocolEngine.protocol.updateNumberOfPriorsReferenced();\n        \n        // Otherwise, return the active Hanging Protocol\n        return ProtocolEngine.protocol;\n    },\n    /**\n     * Reactively updates the active Protocol Stage\n     *\n     * @returns {*} The current Protocol's active Stage model\n     */\n    activeStage() {\n        // Whenever the Layout Manager is updated, trigger this helper\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine, protocol, or stage is defined, stop here\n        if (!ProtocolEngine ||\n            !ProtocolEngine.protocol ||\n            !ProtocolEngine.LayoutManager ||\n            ProtocolEngine.stage === undefined) {\n            return;\n        }\n\n        // Retrieve the Stage Model for the current Protocol's active Stage\n        var stage = ProtocolEngine.getCurrentStageModel();\n        if (!stage) {\n            return;\n        }\n\n        // Update active Stage's layout template and properties based on the displayed\n        // layout properties. This is used to update the Stage Model when the user modifies\n        // the layout in the viewer\n        stage.viewportStructure.layoutTemplateName = ProtocolEngine.LayoutManager.layoutTemplateName;\n        stage.viewportStructure.properties = ProtocolEngine.LayoutManager.layoutProps;\n\n        // If there is a discrepancy between the Stage's number of viewports and the\n        // the number of required viewports given the properties above, rectify it\n        // by removing or adding Viewports to the stage\n        //\n        // First, calculate the difference, if any exists\n        var difference = stage.viewportStructure.getNumViewports() - stage.viewports.length;\n\n        if (difference < 0) {\n            // Make the viewport difference into a positive value\n            var absDifference = Math.abs(difference);\n\n            // If there are more Viewports defined than necessary, remove the extraneous Viewports\n            var position = stage.viewports.length - absDifference;\n\n            // Splice extra viewports from the Stage's viewports array\n            stage.viewports.splice(position, absDifference);\n        } else if (difference > 0) {\n            // If there are less Viewports defined than necessary, add viewports until we reach the\n            // required amount\n\n            // Count up until the difference in number of Viewports\n            for (var i = 0; i < difference; i++) {\n                // Instantiate a new Viewport Model\n                var viewport = new HP.Viewport();\n\n                // Add new Viewports to the Stage's viewports array\n                stage.viewports.push(viewport);\n            }\n        }\n        \n        // Return the current Stage model for the active Protocol\n        return ProtocolEngine.getCurrentStageModel();\n    },\n    activeViewportUndefined() {\n        const viewportIndex = Session.get('activeViewport');\n        return (viewportIndex === undefined);\n    }\n});\n\nTemplate.protocolEditor.events({\n    /**\n     * Creates a new Hanging Protocol and displays it in the Viewer\n     */\n    'click #newProtocol'() {\n        // Clone the default Protocol\n        var protocol = HP.defaultProtocol.createClone();\n\n        // Change the Protocol name to state that it is New, and give it a timestamp\n        protocol.name = 'New (created ' + moment().format('h:mm:ss a') + ')';\n\n        // Change the Protocol ID from the default value\n        protocol.id = Random.id();\n\n        // Insert the protocol\n        HP.ProtocolStore.addProtocol(protocol);\n\n        // Activate the new Protocol using the ProtocolEngine\n        ProtocolEngine.setHangingProtocol(protocol);\n\n        // Update the protocol selector to display the new Protocols\n        updateProtocolSelect();\n    },\n    /**\n     * Rename the current Protocol\n     */\n    'click #renameProtocol'() {\n        var selectedProtocol = this;\n        if (selectedProtocol.locked) {\n            return;\n        }\n\n        // Define some details for the text entry dialog\n        var title = 'Rename Protocol';\n        var instructions = 'Enter a new name';\n        var currentValue = selectedProtocol.name;\n\n        // Open the text entry dialog with the details above\n        // and fire the callback function when finished.\n        openTextEntryDialog(title, instructions, currentValue, function(value) {\n            // Update the name with the entered text\n            selectedProtocol.name = value;\n\n            // Update the protocol\n            HP.ProtocolStore.updateProtocol(selectedProtocol.id, selectedProtocol);\n\n            // Update the protocol selector\n            updateProtocolSelect();\n        });\n    },\n    /**\n     * Import a Protocol\n     */\n    'click #importProtocol'() {\n        // Hide the protocol dropdown manually, because it is not hidden automatically\n        // when it has input as a child\n        $(\"#protocolDropdown\").dropdown('toggle');\n    },\n    /**\n     * Triggers a custom event when for the HTML5 File input when files are selected\n     *\n     * @param event The Change event for the input\n     */\n    'change .btn-file :file': function(event) {\n        // http://www.abeautifulsite.net/whipping-file-inputs-into-shape-with-bootstrap-3/\n\n        // Find the Input in the DOM\n        var input = $(event.currentTarget);\n\n        // Get the number of selected files\n        var numFiles = input.get(0).files ? input.get(0).files.length : 1;\n\n        // Get the label of the file\n        var label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\n\n        // Trigger our custom event with the number of files and label\n        input.trigger('fileselect', [numFiles, label]);\n    },\n    /**\n     * Imports files selected by the user into the Hanging Protocols Collection\n     *\n     * @param event The custom fileselect event\n     */\n    'fileselect .btn-file :file': function(event) {\n        // Retreieve the FileList\n        var files = event.target.files;\n\n        // Create an HTML5 File Reader\n        var reader = new FileReader();\n\n        reader.onload = () => {\n            var protocolToImport = JSON.parse(reader.result);\n\n            // Insert the protocol\n            HP.ProtocolStore.addProtocol(protocolToImport);\n\n            // Update the protocol selector to display the imported Protocol\n            updateProtocolSelect();\n        };\n\n        // Instruct the FileReader to read the (first) selected file\n        // TODO: Update to allow batch uploads?\n        reader.readAsText(files[0], 'utf-8');\n    },\n    /**\n     * Set the Hanging Protocol when the select box is changed\n     *\n     * @param event The select2:select event\n     */\n    'select2:select #protocolSelect': function(event) {\n        // Retrieve the protocolId\n        var protocolId = event.params.data.id;\n\n        // Retrieve the protocol from the protocol store\n        var selectedProtocol = HP.ProtocolStore.getProtocol(protocolId);\n\n        // If it doesn't exist, stop here\n        if (!selectedProtocol) {\n            return;\n        }\n\n        // Set the current Hanging Protocol to the user-specified Protocol\n        ProtocolEngine.setHangingProtocol(selectedProtocol);\n    },\n    /**\n     * Allow the Protocols / Stage navigation tabs to toggle the\n     * 'active' class when clicked\n     */\n    'click .navigationButtons a'() {\n        $(this).addClass('active').siblings().removeClass('active');\n    },\n    /**\n     * Update the protocol with the latest changes to the current Protocol\n     */\n    'click #saveProtocol'() {\n        var selectedProtocol = this;\n        if (selectedProtocol.locked) {\n            return;\n        }\n\n        // Update the Protocol's modifiedDate and modifiedBy User details\n        selectedProtocol.protocolWasModified();\n\n        // Update the current Protocol in the database with the latest changes\n        HP.ProtocolStore.updateProtocol(selectedProtocol.id, selectedProtocol);\n    },\n    /**\n     * Save the current Protocol as a new document\n     */\n    'click #saveAsProtocol'() {\n        var selectedProtocol = this;\n\n        // Clone the selected Protocol\n        var protocol = selectedProtocol.createClone();\n\n        // Define some details for the text entry dialog\n        var title = 'Save Protocol As';\n        var instructions = 'Enter a new name';\n        var currentValue = protocol.name;\n\n        // Open the text entry dialog with the details above\n        // and fire the callback function when finished.\n        openTextEntryDialog(title, instructions, currentValue, function(value) {\n            // Create a new ID for the protocol\n            protocol.id = Random.id();\n\n            // Update the name with the entered text\n            protocol.name = value;\n\n            // Unlock the protocol\n            protocol.locked = false;\n\n            // Update the Protocol's modifiedDate and modifiedBy User details\n            protocol.protocolWasModified();\n\n            // Insert the new Protocol\n            HP.ProtocolStore.addProtocol(protocol);\n\n            // Activate the new Protocol using the ProtocolEngine\n            ProtocolEngine.setHangingProtocol(protocol);\n\n            // Update the protocol selector to display the new Protocols\n            updateProtocolSelect();\n        });\n    },\n    /**\n     * Export the currently selected Protocol as a JSON file\n     */\n    'click #exportJSON'() {\n        var selectedProtocol = this;\n\n        var protocolJSON = JSON.stringify(selectedProtocol, null, 2),\n            currentDate = new Date(),\n            filename = selectedProtocol.name + '-' + (currentDate.getTime().toString()) + '.json',\n            protocolBlob = new Blob([protocolJSON], { type: 'application/json' });\n\n        var downloadElement = document.getElementById('downloadElement');\n        downloadElement.href = URL.createObjectURL(protocolBlob);\n        downloadElement.download = filename;\n        downloadElement.click();\n    },\n    /**\n     * Delete the currently selected Protocol\n     */\n    'click #deleteProtocol'() {\n        var selectedProtocol = this;\n        if (selectedProtocol.locked) {\n            return;\n        }\n\n        var options = {\n            title: 'Delete Protocol',\n            text: 'Are you sure you would like to remove this Protocol? This cannot be reversed.'\n        };\n\n        OHIF.viewerbase.dialogUtils.showConfirmDialog(() => {\n            // Remove the Protocol\n            HP.ProtocolStore.removeProtocol(selectedProtocol.id);\n\n            // Reset the ProtocolEngine to the next best match\n            ProtocolEngine.reset();\n\n            // Update the protocol selector\n            updateProtocolSelect();\n        }, options);\n    }\n});\n","Template.ruleTable.helpers({\n    /**\n     * Retrieve validation data on each rule for the active viewport\n     *\n     * @returns {boolean} Whether or not the current rule passed for the active viewport\n     */\n    rulePassed: function() {\n        // Retrieve the latest match details given the active viewport index\n        var viewportIndex = Session.get('activeViewport');\n        var details = ProtocolEngine.matchDetails[viewportIndex];\n\n        // If no match was found, stop here\n        if (!details || !details.bestMatch) {\n            return;\n        }\n\n        // Retrieve the list of failed rules for this Viewport\n        var failed = details.bestMatch.matchDetails.failed;\n\n        // Check if the current rule failed or not\n        var rule = this;\n        var hasPassed = true;\n        failed.forEach(function(failedRuleData) {\n            var failedRule = failedRuleData.rule;\n            if (failedRule.id === rule.id) {\n                hasPassed = false;\n                return false;\n            }\n        });\n\n        // Return a boolean representing whether or not the rule passed\n        return hasPassed;\n    }\n});\n\nTemplate.ruleTable.events({\n    /**\n     * Opens the Rule Entry dialog to allow the user to create a new rule\n     * Specifies attributes and rule level for the Rule Entry dialog\n     * based on the data given to this template.\n     */\n    'click .addRule': function() {\n        // Get the current template data\n        var data = Template.currentData();\n\n        // Retrieve the rule attributes and level (e.g. study / series / instance)\n        var attributes = data.attributes;\n        var level = data.level;\n\n        // Open the Rule Entry Dialog with the attributes, level, and rule\n        openRuleEntryDialog(attributes, level);\n    },\n    /**\n     * Opens the Rule Entry dialog to allow the user to edit an existing\n     * rule. Passes rule details to the dialog so its current properties\n     * can be displayed.\n     *\n     * Specifies attributes and rule level for the Rule Entry dialog\n     * based on the data given to this template.\n     */\n    'click .editRule': function() {\n        // Get the current template data\n        var data = Template.currentData();\n\n        // Retrieve the rule attribtes and level (e.g. study / series / instance)\n        var attributes = data.attributes;\n        var level = data.level;\n\n        // Get the properties of the current rule\n        var rule = this;\n\n        // Open the Rule Entry Dialog with the attributes, level, and rule\n        openRuleEntryDialog(attributes, level, rule);\n    },\n    /**\n     * Removes a rule from the current Viewport or Protocol depending on\n     * the type of rule\n     */\n    'click .deleteRule': function() {\n        // Get the properties of the current rule\n        var rule = this;\n\n        if (rule instanceof HP.ProtocolMatchingRule) {\n            // If this Rule is evaluated at the protocol level,\n            // remove it from the current Protocol\n            ProtocolEngine.protocol.removeProtocolMatchingRule(rule);\n        } else {\n            // If this Rule is evaluated at the Viewport level,\n            // remove it from the active viewport model\n            var viewport = getActiveViewportModel();\n            viewport.removeRule(rule);\n        }\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n    },\n    /**\n     * Updates a Rule's weight in response to user input\n     *\n     * @param event The input change event\n     */\n    'change .ruleWeight': function(event) {\n        // Get the properties of the current rule\n        var rule = this;\n\n        // Update the value of the rule weight\n        rule.weight = $(event.currentTarget).val();\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n    },\n    /**\n     * Updates a Rule's 'required' property in response to user input\n     *\n     * @param event The input change event\n     */\n    'change .ruleRequired': function(event) {\n        // Get the properties of the current rule\n        var rule = this;\n\n        // Update the value of the 'required' property\n        rule.required = $(event.currentTarget).prop('checked');\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n    }\n});\n","import { $ } from 'meteor/jquery';\nimport { Session } from 'meteor/session';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport { Viewerbase } from 'meteor/ohif:viewerbase';\n\nconst keys = {\n    ESC: 27\n};\n\n/**\n * Close the specified dialog element and return browser\n * focus to the active viewport.\n *\n * @param dialog The DOM element of the dialog to close\n */\nfunction closeHandler(dialog) {\n    // Hide the lesion dialog\n    $(dialog).css('display', 'none');\n\n    // Remove the backdrop\n    $('.removableBackdrop').remove();\n\n    // Restore the focus to the active viewport\n    Viewerbase.setFocusToActiveViewport();\n}\n\n/**\n * Displays and updates the UI of the Rule Entry Dialog given a new set of\n * attributes, the rule level (protocol, study, series, or instance), and an\n * optional rule to edit.\n *\n * @param attributes List of attributes the user can set\n * @param level Level of the Rule to create / edit\n * @param rule Optional Rule\n */\nopenRuleEntryDialog = function(attributes, level, rule) {\n    // Get the lesion location dialog\n    var dialog = $('.ruleEntryDialog');\n\n    // Clear any input that is still on the page\n    var currentValueInput = dialog.find('input.currentValue');\n    currentValueInput.val('');\n\n    // Store the Dialog DOM data, rule level and rule in the template data\n    Template.ruleEntryDialog.dialog = dialog;\n    Template.ruleEntryDialog.level = level;\n    Template.ruleEntryDialog.rule = rule;\n\n    // Initialize the Select2 search box for the attribute list\n    var attributeSelect = dialog.find('.attributes');\n    attributeSelect.html('').select2({\n        data: attributes,\n        placeholder: 'Select an attribute',\n        allowClear: true\n    });\n\n    // If a rule has been provided, set the value of the attribute Select2 input\n    // to the attribute set in the rule.\n    if (rule && rule.attribute) {\n        attributeSelect.val(rule.attribute);\n    }\n\n    // Event data to be passed to the event handler\n    let eventData;\n\n    // If a rule has been provided, use its constraint to find the relevant Comparator\n    if (rule && rule.constraint) {\n        var validator = Object.keys(rule.constraint)[0];\n        var validatorOption = Object.keys(rule.constraint[validator])[0];\n        var comparator = Comparators.findOne({\n            validator: validator,\n            validatorOption: validatorOption\n        });\n\n        // Set the current value input based on the rule constraint\n        var currentValue = rule.constraint[validator][validatorOption];\n        currentValueInput.val(currentValue);\n\n        eventData = currentValue;\n\n        // If a Comparator was found, set the default value of the Comparators select2 box\n        // to the comparatorId in the input rule\n        if (comparator) {\n            // Trigger('change') is used to update the Select2 choice in the UI\n            dialog.find('.comparators').val(comparator.id).trigger('change');\n        }\n    }\n\n    // Trigger('change') is used to update the Select2 choice in the UI and so\n    // that the currentValue is updated based on the current attribute\n    attributeSelect.trigger('change', eventData);\n\n    // Update the dialog's CSS so that it is visible on the page\n    dialog.css('display', 'block');\n\n    // Show the backdrop\n    Blaze.render(Template.removableBackdrop, document.body);\n\n    // Make sure the context menu is closed when the user clicks away\n    $('.removableBackdrop').one('mousedown touchstart', function() {\n        closeHandler(dialog);\n    });\n};\n\n/**\n * Retrieves the current active element's imageId using Cornerstone\n */\nfunction getActiveViewportImageId() {\n    const enabledElement = Viewerbase.viewportUtils.getEnabledElementForActiveElement();\n\n    if (!enabledElement) {\n        return;\n    }\n\n    // Return the enabled element's imageId\n    return enabledElement.image.imageId;\n}\n\nfunction getAbstractPriorValue(imageId) {\n    // @TypeSafeStudies\n    // Retrieves the first study of the collection using the given sort order.\n    // Since we're only interrested in the first record, \"null\" will be used\n    // as search criteria (thus no actual search will be made).\n    const currentStudy = OHIF.viewer.Studies.findBy(null, {\n        sort: [ ['studyDate', 'desc'] ]\n    });\n\n    if (!currentStudy) {\n        return;\n    }\n\n    const priorStudy = cornerstone.metaData.get('study', imageId);\n    if (!priorStudy) {\n        return;\n    }\n\n    const studies = OHIF.studylist.collections.Studies.find({\n        patientId: currentStudy.patientId,\n        studyDate: {\n            $lt: currentStudy.studyDate\n        }\n    }, {\n        sort: {\n            studyDate: -1\n        }\n    });\n\n    let priorIndex = 0;\n\n    // TODO: Check what the abstract prior value should equal for an unrelated study?\n    studies.forEach(function(study, index) {\n        if (study.studyInstanceUid === priorStudy.studyInstanceUid) {\n            // Abstract prior index starts from 1 in the DICOM standard\n            // so we add 1 here\n            priorIndex = index + 1;\n            return false;\n        }\n    });\n\n    return priorIndex;\n}\n\n/**\n * Retrieve the current value of a metadata tag or property. It searches the value in different levels (study, series or instance)\n * @param  {String} tagOrProperty DICOM Tag or Property name (Ex: 'x00100020', 'patientId')\n * @return {Any}              The value of the DICOM tag or property name\n */\nconst getCurrentTagOrPropertyValue = tagOrProperty => {\n    // Retrieve the active viewport's imageId. If none exists, stop here\n    const imageId = getActiveViewportImageId();\n    if (!imageId) {\n        return;\n    }\n\n    if (tagOrProperty === 'abstractPriorValue') {\n        return getAbstractPriorValue(imageId);\n    }\n\n    // Create the object for the instance metadata\n    let instance;\n\n    OHIF.viewer.StudyMetadataList.find(studyMetadata => {\n        // Search for the instance that has the current imageId\n        instance = studyMetadata.findInstance(instance => {\n            return instance.getImageId() === imageId;\n        });\n\n        // If instance if found stop the search\n        return !!instance;\n    });\n\n    // No instance found\n    if (!instance) {\n        return;\n    }\n\n    // Get the value for the given tag\n    // It searches the value in different levels (study, series or instance)\n    const tagOrPropertyValue = instance.getTagValue(tagOrProperty);\n\n    // If not found, is a custom Hanging Protocol attribute\n    if (tagOrPropertyValue === void 0) {\n        return HP.attributeDefaults[tagOrProperty];\n    }\n\n    return tagOrPropertyValue;\n};\n\nTemplate.ruleEntryDialog.onCreated(function() {\n    // Define the ReactiveVars that will be used to link aspects of the UI\n    var template = this;\n    // Note: currentValue's initial value must be a string so the template renders properly\n    template.currentValue = new ReactiveVar('');\n    template.attribute = new ReactiveVar();\n    template.comparatorId = new ReactiveVar();\n});\n\nTemplate.ruleEntryDialog.onRendered(function() {\n    // Initialize the Comparators Select2 box\n    var template = Template.instance();\n    template.$('.comparators').select2();\n\n    // Get the default Comparator from the Select2 box and use it to\n    // initialize the comparatorId ReactiveVar\n    var comparatorId = template.$('.comparators').val();\n    template.comparatorId.set(comparatorId);\n\n    const dialog = template.$('.ruleEntryDialog');\n    dialog.draggable();\n});\n\nTemplate.ruleEntryDialog.helpers({\n    /**\n     * Returns the Comparators Collection to the Template with reactive rerendering\n     */\n    comparators: function() {\n        return Comparators.find();\n    },\n    /**\n     * Reactively updates the current value of the selected attribute for the selected image\n     *\n     * @returns {*} Attribute value for the active image\n     */\n    currentValue: function() {\n        return Template.instance().currentValue.get();\n    }\n});\n\nTemplate.ruleEntryDialog.events({\n    /**\n     * Save a rule that is being edited\n     *\n     * @param event the Click event\n     * @param template The template context\n     */\n    'click #save': function(event, template) {\n        // Retrieve the input properties to the template\n        var dialog = Template.ruleEntryDialog.dialog;\n        var level = Template.ruleEntryDialog.level;\n\n        // Retrieve the current values for the attribute value and comparatorId\n        var attribute = template.attribute.get();\n        var comparatorId = template.comparatorId.get();\n        var currentValue = template.currentValue.get();\n\n        // If currentValue input is undefined, prevent saving this rule\n        if (currentValue === undefined) {\n            return;\n        }\n\n        // Check if we are editing a rule or creating a new one\n        var rule;\n        if (Template.ruleEntryDialog.rule) {\n            // If we are editing a rule, change the rule data\n            rule = Template.ruleEntryDialog.rule;\n        } else {\n            // If we are creating a rule, obtain the active Viewport model\n            // from the Protocol and Stage\n            var viewport = getActiveViewportModel();\n\n            // Create a rule depending on the level property of this dialog\n            switch (level) {\n                case 'protocol':\n                    rule = new HP.ProtocolMatchingRule();\n                    ProtocolEngine.protocol.addProtocolMatchingRule(rule);\n                    break;\n                case 'study':\n                    rule = new HP.StudyMatchingRule();\n                    viewport.studyMatchingRules.push(rule);\n                    break;\n                case 'series':\n                    rule = new HP.SeriesMatchingRule();\n                    viewport.seriesMatchingRules.push(rule);\n                    break;\n                case 'instance':\n                    rule = new HP.ImageMatchingRule();\n                    viewport.imageMatchingRules.push(rule);\n                    break;\n            }\n        }\n\n        // Find the Comparator from the Comparators Collection given its ID\n        var comparator = Comparators.findOne({\n            id: comparatorId\n        });\n\n        // Create a new constraint to add to the rule\n        var constraint = {};\n        constraint[comparator.validator] = {};\n        constraint[comparator.validator][comparator.validatorOption] = currentValue;\n\n        // Set the attribute and constraint of the rule\n        rule.attribute = attribute;\n        rule.constraint = constraint;\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n\n        // Close the dialog\n        closeHandler(dialog);\n    },\n    /**\n     * Allow the user to click the Cancel button to close the dialog\n     */\n    'click #cancel': function() {\n        var dialog = Template.ruleEntryDialog.dialog;\n        closeHandler(dialog);\n    },\n    /**\n     * Allow Esc keydown events to close the dialog\n     *\n     * @param event The Keydown event details\n     * @returns {boolean} Return false to prevent bubbling of the event\n     */\n    'keydown .ruleEntryDialog': function(event) {\n        var dialog = Template.ruleEntryDialog.dialog;\n\n        // If Esc key is pressed, close the dialog\n        if (event.which === keys.ESC) {\n            closeHandler(dialog);\n            return false;\n        }\n    },\n    /**\n     * Update the currentValue ReactiveVar if the user changes the attribute\n     *\n     * @param event The Change event for the select box\n     * @param template The current template context\n     */\n    'change select.attributes'(event, template, currentValue) {\n        // Obtain the user-specified attribute to test against\n        const attribute = $(event.currentTarget).val();\n\n        // Store it in the ReactiveVar\n        template.attribute.set(attribute);\n\n        // Store this attribute in the template data context\n        Template.ruleEntryDialog.selectedAttribute = attribute;\n\n        // // Get the level of this dialog\n        // var level = Template.ruleEntryDialog.level;\n\n        let value;\n\n        // Preset currentValue, use it\n        if (currentValue) {\n            value = currentValue;\n        }\n        else {\n            // Retrieve the current value of the attribute for the active viewport model\n            value = getCurrentTagOrPropertyValue(attribute);\n        }\n\n        // Update the ReactiveVar with the user-specified value\n        template.currentValue.set(value);\n\n        // Enforce to update the input value (Otherwise, ReactiveVar does not update input value with the same values)\n        const currentValueInput = $('.ruleEntryDialog').find('input.currentValue');\n        currentValueInput.val(value);\n    },\n    /**\n     * Update the currentValue ReactiveVar if the user changes the attribute value\n     *\n     * @param event The Change event for the input\n     * @param template The current template context\n     */\n    'change input.currentValue': function(event, template) {\n        // Get the DOM element representing the input box\n        var input = $(event.currentTarget);\n\n        // Get the current value of the input\n        var value = input.val();\n\n        // If the input is of type 'number', parse it as a Float\n        if (input.attr('type') === 'number') {\n            value = parseFloat(value);\n        }\n\n        // Update the ReactiveVar with the user-specified value\n        template.currentValue.set(value);\n    },\n    /**\n     * Update the comparatorId ReactiveVar whenever the Comparators select box is changed\n     *\n     * @param event The Change event for the select box\n     * @param template The current template context\n     */\n    'change select.comparators': function(event, template) {\n        // Get the current value of the select box\n        var comparatorId = $(event.currentTarget).val();\n\n        // Update the ReactiveVar with the value of the Comparators select box\n        template.comparatorId.set(comparatorId);\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Blaze } from 'meteor/blaze';\nimport { $ } from 'meteor/jquery';\n\nimport { Viewerbase } from 'meteor/ohif:viewerbase';\n\nconst keys = {\n    ESC: 27\n};\n\n/**\n * Close the specified dialog element and return browser\n * focus to the active viewport.\n *\n * @param dialog The DOM element of the dialog to close\n */\nfunction closeHandler(dialog) {\n    // Hide the lesion dialog\n    $(dialog).css('display', 'none');\n\n    // Remove the backdrop\n    $('.removableBackdrop').remove();\n\n    // Restore the focus to the active viewport\n    Viewerbase.setFocusToActiveViewport();\n}\n\n/**\n * Displays and updates the UI of the Setting Entry Dialog given an\n * optional setting to edit.\n *\n * @param settingObject\n */\nopenSettingEntryDialog = function(settingObject) {\n    // Get the lesion location dialog\n    var dialog = $('.settingEntryDialog');\n\n    // Store the Dialog DOM data, setting level and setting in the template data\n    Template.settingEntryDialog.dialog = dialog;\n    Template.settingEntryDialog.settingObject = settingObject;\n\n    // Initialize the Select2 search box for the attribute list\n    var settings = Object.keys(HP.displaySettings);\n    settings.concat(Object.keys(HP.CustomViewportSettings));\n\n    var displaySettingsOptions = Object.keys(HP.displaySettings).map(key => {\n        return {\n            id: key,\n            text: HP.displaySettings[key].text\n        };\n    });\n\n    var customSettingsOptions = Object.keys(HP.CustomViewportSettings).map(key => {\n        return {\n            id: key,\n            text: HP.CustomViewportSettings[key].text\n        };\n    });\n\n    var settingsOptions = displaySettingsOptions.concat(customSettingsOptions);\n\n    var settingSelect = dialog.find('.settings');\n    settingSelect.html('').select2({\n        data: settingsOptions,\n        placeholder: 'Select a setting',\n        allowClear: true\n    });\n\n    var settingDetails = {\n        options: []\n    };\n\n    if (settingObject && HP.displaySettings[settingObject.id]) {\n        settingDetails = HP.displaySettings[settingObject.id];\n    } else if (settingObject && HP.CustomViewportSettings[settingObject.id]) {\n        settingDetails = HP.CustomViewportSettings[settingObject.id];\n    }\n\n    var valueSelect = dialog.find('.currentValue');\n    valueSelect.html('').select2({\n        data: settingDetails.options,\n        placeholder: 'Select a value',\n        allowClear: true\n    });\n\n    // If a setting has been provided, set the value of the attribute Select2 input\n    // to the attribute set in the setting.\n    if (settingObject && settingObject.id) {\n        settingSelect.val(settingObject.id);\n    }\n\n    // Trigger('change') is used to update the Select2 choice in the UI\n    // This is done after setting the value in case no setting was provided\n    settingSelect.trigger('change');\n\n    // If a setting has been provided, display its current value\n    if (settingObject && settingObject.value !== undefined) {\n        valueSelect.val(settingObject.value).trigger('change');\n    }\n\n    // Update the dialog's CSS so that it is visible on the page\n    dialog.css('display', 'block');\n\n    // Show the backdrop\n    Blaze.render(Template.removableBackdrop, document.body);\n\n    // Make sure the context menu is closed when the user clicks away\n    $('.removableBackdrop').one('mousedown touchstart', function() {\n        closeHandler(dialog);\n    });\n};\n\nTemplate.settingEntryDialog.onCreated(function() {\n    // Define the ReactiveVars that will be used to link aspects of the UI\n    var template = this;\n\n    // Note: currentValue's initial value must be a string so the template renders properly\n    template.currentValue = new ReactiveVar('');\n    template.setting = new ReactiveVar();\n});\n\nTemplate.settingEntryDialog.onRendered(function() {\n    const template = this;\n    const dialog = template.$('.settingEntryDialog');\n    dialog.draggable();\n});\n\nTemplate.settingEntryDialog.events({\n    /**\n     * Save a setting that is being edited\n     *\n     * @param event the Click event\n     * @param template The template context\n     */\n    'click #save': function(event, template) {\n        // Retrieve the input properties to the template\n        var dialog = Template.settingEntryDialog.dialog;\n\n        // Retrieve the current values for the id and current value\n        var setting = template.setting.get();\n        var currentValue = template.currentValue.get();\n\n        // If currentValue input is undefined, prevent saving this setting\n        if (currentValue === undefined) {\n            return;\n        }\n\n        var viewportSetting = {\n            id: setting,\n            value: currentValue\n        };\n\n        // Obtain the active Viewport model from the Protocol and Stage\n        var viewport = getActiveViewportModel();\n\n        // Remove any old rules if the ID has been changes\n        var originalSettingObject = Template.settingEntryDialog.settingObject;\n        if (originalSettingObject && originalSettingObject.id) {\n            delete viewport.viewportSettings[originalSettingObject.id];\n        }\n\n        // Update the active Viewport model' viewportSettings dictionary\n        viewport.viewportSettings[viewportSetting.id] = viewportSetting.value;\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n\n        // Close the dialog\n        closeHandler(dialog);\n    },\n    /**\n     * Allow the user to click the Cancel button to close the dialog\n     */\n    'click #cancel': function() {\n        var dialog = Template.settingEntryDialog.dialog;\n        closeHandler(dialog);  \n    },\n    /**\n     * Allow Esc keydown events to close the dialog\n     *\n     * @param event The Keydown event details\n     * @returns {boolean} Return false to prevent bubbling of the event\n     */\n    'keydown .settingEntryDialog': function(event) {\n        var dialog = Template.settingEntryDialog.dialog;\n\n        // If Esc key is pressed, close the dialog\n        if (event.which === keys.ESC) {\n            closeHandler(dialog);\n            return false;\n        }\n    },\n    /**\n     * Update the currentValue ReactiveVar if the user changes the attribute\n     *\n     * @param event The Change event for the select box\n     * @param template The current template context\n     */\n    'change select.settings': function(event, template) {\n        // Obtain the user-specified attribute to test against\n        var settingId = $(event.currentTarget).val();\n\n        // Store it in the ReactiveVar\n        template.setting.set(settingId);\n\n        // Retrieve the current value from the attribute\n        var settingDetails = {\n            options: []\n        };\n        if (settingId && HP.displaySettings[settingId]) {\n            settingDetails = HP.displaySettings[settingId];\n        } else if (settingId && HP.CustomViewportSettings[settingId]) {\n            settingDetails = HP.CustomViewportSettings[settingId];\n        }\n\n        var dialog = Template.settingEntryDialog.dialog;\n        var valueSelect = dialog.find('.currentValue');\n        valueSelect.html('').select2({\n            data: settingDetails.options,\n            placeholder: 'Select a value',\n            allowClear: true\n        });\n\n        // Update the ReactiveVar with the user-specified value\n        if (settingDetails && settingDetails.defaultValue) {\n            template.currentValue.set(settingDetails.defaultValue);\n            valueSelect.val(settingDetails.defaultValue).trigger('change');\n        }\n    },\n    /**\n     * Update the currentValue ReactiveVar if the user changes the current value\n     *\n     * @param event The Change event for the input\n     * @param template The current template context\n     */\n    'change select.currentValue': function(event, template) {\n        // Get the current value of the select box\n        var value = $(event.currentTarget).val();\n\n        // Update the ReactiveVar with the user-specified value\n        template.currentValue.set(value);\n    }\n});\n","import { Blaze } from 'meteor/blaze';\nimport { $ } from 'meteor/jquery';\nimport { Template } from 'meteor/templating';\n\nimport { Viewerbase } from 'meteor/ohif:viewerbase';\n\nconst keys = {\n    ESC: 27,\n    ENTER: 13\n};\n\n/**\n * Close the specified dialog element and returns the browser\n * focus to the active viewport.\n *\n * @param dialog The DOM element of the dialog to close\n */\nfunction closeHandler(dialog) {\n    // Hide the lesion dialog\n    $(dialog).css('display', 'none');\n\n    // Remove the backdrop\n    $('.removableBackdrop').remove();\n\n    // Restore the focus to the active viewport\n    Viewerbase.setFocusToActiveViewport();\n}\n\n/**\n * Displays and updates the UI of the Text Entry Dialog given a new title,\n * instructions, and doneCallback\n *\n * @param title Title of the dialog box\n * @param instructions Instructions to display to the user\n * @param doneCallback Function to execute when the dialog has been closed\n */\nopenTextEntryDialog = function(title, instructions, currentValue, doneCallback) {\n    // Get the lesion location dialog\n    var dialog = $('.textEntryDialog');\n\n    // Clear any input that is still on the page\n    var currentValueInput = dialog.find('input.currentValue');\n    currentValueInput.val(currentValue);\n\n    // Store the Dialog DOM data, rule level and rule in the template data\n    Template.textEntryDialog.dialog = dialog;\n    Template.textEntryDialog.title = title;\n    Template.textEntryDialog.instructions = instructions;\n    Template.textEntryDialog.doneCallback = doneCallback;\n\n    dialog.find('.title').html(title);\n    dialog.find('.instructions').html(instructions);\n\n    // Update the dialog's CSS so that it is visible on the page\n    dialog.css('display', 'block');\n\n    // Show the backdrop\n    UI.render(Template.removableBackdrop, document.body);\n\n    // Make sure the context menu is closed when the user clicks away\n    $('.removableBackdrop').one('mousedown touchstart', function() {\n        closeHandler(dialog);\n    });\n};\n\nTemplate.textEntryDialog.onRendered(() => {\n    const instance = Template.instance();\n    const dialog = instance.$('.settingEntryDialog');\n    dialog.draggable();\n});\n\nTemplate.textEntryDialog.events({\n    /**\n     * Save the user-specified text\n     *\n     */\n    'click .save': function() {\n        // Retrieve the input properties to the template\n        var dialog = Template.textEntryDialog.dialog;\n        var currentValue = dialog.find('input.currentValue').val();\n\n        // If currentValue input is undefined, prevent saving this rule\n        if (currentValue === undefined) {\n            return;\n        }\n\n        var doneCallback = Template.textEntryDialog.doneCallback;\n        if (doneCallback) {\n            doneCallback(currentValue);\n        }\n\n        // Close the dialog\n        closeHandler(Template.textEntryDialog.dialog);\n    },\n    /**\n     * Allow the user to click the Cancel button to close the dialog\n     */\n    'click .cancel': function() {\n        closeHandler(Template.textEntryDialog.dialog);\n    },\n    /**\n     * Allow Esc keydown events to close the dialog\n     *\n     * @param event The Keydown event details\n     * @returns {boolean} Return false to prevent bubbling of the event\n     */\n    'keydown .textEntryDialog': function(event) {\n        var dialog = Template.textEntryDialog.dialog;\n\n        // If Esc key is pressed, close the dialog\n        if (event.which === keys.ESC) {\n            closeHandler(dialog);\n            return false;\n        } else if (event.which === keys.ENTER) {\n            var currentValue = dialog.find('input.currentValue').val();\n\n            // If currentValue input is undefined, prevent saving this rule\n            if (currentValue === undefined) {\n                return;\n            }\n\n            var doneCallback = Template.textEntryDialog.doneCallback;\n            if (doneCallback) {\n                doneCallback(currentValue);\n            }\n\n            closeHandler(dialog);\n            return false;\n        }\n    },\n    /**\n     * Update the currentValue ReactiveVar if the user changes the attribute value\n     *\n     * @param event The Change event for the input\n     * @param template The current template context\n     */\n    'change input.currentValue': function(event, template) {\n        // Get the DOM element representing the input box\n        var input = $(event.currentTarget);\n\n        // Update the template data with the current value\n        Template.textEntryDialog.currentValue = input.val();\n    }\n});\n","Template.settingsTable.events({\n    /**\n     * Opens the Setting Entry dialog to allow the user to create a new setting\n     * Specifies attributes and setting level for the Setting Entry dialog\n     * based on the data given to this template.\n     */\n    'click .addSetting': function() {\n        // Open the Setting Entry Dialog\n        openSettingEntryDialog();\n    },\n    /**\n     * Opens the Setting Entry dialog to allow the user to edit an existing\n     * setting. Passes setting details to the dialog so its current properties\n     * can be displayed.\n     *\n     * Specifies attributes for the Setting Entry dialog\n     * based on the data given to this template.\n     */\n    'click .editSetting': function() {\n        // Get the properties of the current setting\n        var setting = this;\n\n        // Open the Setting Entry Dialog with the setting\n        openSettingEntryDialog(setting);\n    },\n    /**\n     * Removes a setting from the current Viewport\n     */\n    'click .deleteSetting': function() {\n        // Get the properties of the current setting\n        var setting = this;\n\n        // Retrieve the current viewport model\n        var viewport = getActiveViewportModel();\n\n        // Remove the specified setting\n        delete viewport.viewportSettings[setting.key];\n\n        // Instruct the Protocol Engine to update the Layout Manager with new data\n        var viewportIndex = Session.get('activeViewport');\n        ProtocolEngine.updateViewports(viewportIndex);\n    }\n});\n\nTemplate.settingsTable.helpers({\n    getSettingText: function() {\n        var setting = this;\n        if (HP.CustomViewportSettings[setting.key]) {\n            return HP.CustomViewportSettings[setting.key].text;\n        } else if (HP.displaySettings[setting.key]) {\n            return HP.displaySettings[setting.key].text;\n        } else {\n            return Blaze._globalHelpers['prettyPrintStringify'](setting.key);\n        }\n\n    }\n});","getActiveViewportModel = function() {\n    // If no ProtocolEngine has been defined yet, or there is\n    // no currently displayed Protocol or Stage, stop here\n    if (!ProtocolEngine ||\n        !ProtocolEngine.protocol ||\n        ProtocolEngine.stage === undefined) {\n        return;\n    }\n\n    // Retrieve the model of the currently displayed stage\n    var stage = ProtocolEngine.getCurrentStageModel();\n\n    // Retrieve the index of the active viewport\n    var activeViewport = Session.get('activeViewport');\n\n    // If the active viewport index is outside the bounds of the\n    // number of Viewports defined for this Stage, stop here\n    if (activeViewport >= stage.viewports.length) {\n        return;\n    }\n\n    // Return the Viewport model for this viewport index in the\n    // current stage\n    return stage.viewports[activeViewport];\n};\n\nTemplate.stageDetails.helpers({\n    /**\n     * Retrieves the ViewportModel for the active viewport from the\n     * currently displayed Protocol and display sequence Stage\n     *\n     * @returns {*} The Viewport model for the active viewport\n     */\n    activeViewport: function() {\n        // Run this function anytime the layout manager has changed\n        Session.get('LayoutManagerUpdated');\n\n        return getActiveViewportModel();\n    }\n});\n","import { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport { Random } from 'meteor/random';\n\nimport { OHIF } from 'meteor/ohif:core';\nimport 'meteor/ohif:viewerbase';\n\n/**\n * Extend the Array prototype with a Swap function\n * so we can swap stages more easily\n */\nArray.prototype.move = function(oldIndex, newIndex) {\n    var value = this[oldIndex];\n\n    newIndex = Math.max(0, newIndex);\n    newIndex = Math.min(this.length, newIndex);\n\n    this.splice(oldIndex, 1);\n    this.splice(newIndex, 0, value);\n    return this;\n};\n\n/**\n * Helper function to obtain the current index of a stage in the\n * current protocol\n *\n * @param protocol The Hanging Protocol to search within\n * @param id The id of the current stage to search for\n * @returns {number} The index of the specified stage within the Protocol,\n *                   or undefined if it is not present.\n */\nfunction getStageIndex(protocol, id) {\n    var stageIndex;\n    if (!protocol || !protocol.stages) {\n        return;\n    }\n\n    protocol.stages.forEach(function(stage, index) {\n        if (stage.id === id) {\n            stageIndex = index;\n            return false;\n        }\n    });\n\n    return stageIndex;\n}\n\nTemplate.stageSortable.helpers({\n    /**\n     * Checks a specified stage to see if it is currently being displayed\n     *\n     * @returns {boolean} Whether or not the stage is currently being displayed\n     */\n    isActiveStage: function() {\n        // Rerun this function every time the layout manager has been updated\n        Session.get('LayoutManagerUpdated');\n\n        // If no Protocol Engine has been defined yet, stop here to prevent errors\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        var currentStage = ProtocolEngine.getCurrentStageModel();\n        if (!currentStage) {\n            return false;\n        }\n\n        // Return a boolean representing if the active stage and the specified stage index are equal\n        return (this.id === currentStage.id);\n    },\n    /**\n     * Retrieves the index of the stage at the point it was last saved\n     *\n     * @returns {number|*}\n     */\n    stageLabel: function() {\n        var stage = this;\n\n        // If no Protocol Engine has been defined yet, stop here to prevent errors\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Retrieve the last saved copy of the current protocol\n        var lastSavedCopy = HP.ProtocolStore.getProtocol(ProtocolEngine.protocol.id);\n\n        // Try to find the index of this stage in the previously saved copy\n        var stageIndex = getStageIndex(lastSavedCopy, stage.id);\n\n        // If the stage is new, and therefore wasn't present in the last save,\n        // retrieve it's index in the array of new stage ids and use that for\n        // the label. Also include the time since it was created.\n        if (stageIndex === undefined) {\n            // Reactively update this helper every minute\n            Session.get('timeAgoVariable');\n\n            // Find the index of the stage in the array of newly created stage IDs\n            var newStageNumber = ProtocolEngine.newStageIds.indexOf(stage.id) + 1;\n\n            // Use Moment.js to format the createdDate of this stage relative to the\n            // current time\n            var dateCreatedFromNow = moment(stage.createdDate).fromNow();\n\n            // Return the label for the new stage,\n            // e.g. \"New Stage 1 (created a few seconds ago)\"\n            return 'New Stage ' + newStageNumber + ' (created ' + dateCreatedFromNow + ')';\n        }\n\n        // If the stage is not new, label it by the index it held in the stages array\n        // at the previous saved point\n        return 'Stage ' + ++stageIndex;\n    },\n    /**\n     * Check if a later stage exists for the user to switch to\n     *\n     * @returns {boolean} Whether or not a later stage exists\n     */\n    isNextAvailable: function() {\n        // Run this helper whenever the ProtocolEngine / LayoutManager has changed\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine has been defined yet, stop here\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Return whether or not the current stage is the last stage\n        return ProtocolEngine.stage < ProtocolEngine.getNumProtocolStages() - 1;\n    },\n    /**\n     * Check if an earlier stage exists for the user to switch to\n     *\n     * @returns {boolean} Whether or not an earlier stage exists\n     */\n    isPreviousAvailable: function() {\n        // Run this helper whenever the ProtocolEngine / LayoutManager has changed\n        Session.get('LayoutManagerUpdated');\n\n        // If no ProtocolEngine has been defined yet, stop here\n        if (!ProtocolEngine) {\n            return;\n        }\n\n        // Return whether or not the current stage is the first stage\n        return ProtocolEngine.stage > 0;\n    }\n});\n\nTemplate.stageSortable.events({\n    /**\n     * Displays a stage when its title is clicked\n     */\n    'click .sortable-item span': function() {\n        // Retrieve the index of this stage in the display set sequences\n        var stageIndex = getStageIndex(ProtocolEngine.protocol, this.id);\n\n        // Display the selected stage\n        ProtocolEngine.setCurrentProtocolStage(stageIndex - ProtocolEngine.stage);\n    },\n    /**\n     * Creates a new stage and adds it to the currently loaded Protocol at\n     * the end of the display set sequence\n     */\n    'click #addStage': function() {\n        // Retrieve the model describing the current stage\n        var stage = ProtocolEngine.getCurrentStageModel();\n\n        // Clone this stage to create a new stage\n        var newStage = stage.createClone();\n\n        // Remove the stage's name if it has one\n        delete newStage.name;\n\n        // Append this new stage to the end of the display set sequence\n        ProtocolEngine.protocol.stages.push(newStage);\n\n        // Append the new stage the list of new stage IDs, so we can label it properly\n        ProtocolEngine.newStageIds.push(newStage.id);\n\n        // Switch to the next stage in the display set sequence\n        ProtocolEngine.setCurrentProtocolStage(1);\n    },\n    /**\n     * Deletes a stage from the currently loaded Protocol by removing it from\n     * the stages array. If it is the currently active stage, the current stage is\n     * set to one stage earlier in the display set sequence.\n     */\n    'click .deleteStage': function() {\n        // If this is the only stage in the Protocol, stop here\n        if (ProtocolEngine.protocol.stages.length === 1) {\n            return;\n        }\n\n        var stageId = this.id;\n\n        var options = {\n            title: 'Remove Protocol Stage',\n            text: 'Are you sure you would like to remove this Protocol Stage? This cannot be reversed.'\n        };\n\n        OHIF.viewerbase.dialogUtils.showConfirmDialog(function() {\n            // Retrieve the index of this stage in the display set sequences\n            var stageIndex = getStageIndex(ProtocolEngine.protocol, stageId);\n\n            // Remove it from the display set sequence\n            ProtocolEngine.protocol.stages.splice(stageIndex, 1);\n\n            // If we have removed the currently active stage, switch to the one before it\n            if (ProtocolEngine.stage === stageIndex) {\n                // Display the previous stage\n                ProtocolEngine.setCurrentProtocolStage(-1);\n            }\n\n            // Update the Session variable to the UI re-renders\n            Session.set('LayoutManagerUpdated', Math.random());\n        }, options);\n    },\n\n    'click .moveStageUp': function() {\n        // Get the old and new indices following a 'sort' event\n        var oldIndex = ProtocolEngine.stage;\n        var newIndex = Math.max(ProtocolEngine.stage - 1, 0);\n\n        if (oldIndex === newIndex) {\n            return;\n        }\n\n        // Swap the stages in the current Protocol's display set sequence\n        // using our addition to the Array prototype\n        ProtocolEngine.protocol.stages = ProtocolEngine.protocol.stages.move(oldIndex, newIndex);\n\n        // If the currently displayed stage was reordered into a new position,\n        // update the value for the stage index in the displayed Protocol\n        ProtocolEngine.stage = newIndex;\n\n        // Update the Session variable to the UI re-renders\n        Session.set('LayoutManagerUpdated', Math.random());\n    },\n    'click .moveStageDown': function() {\n        // Get the old and new indices following a 'sort' event\n        var oldIndex = ProtocolEngine.stage;\n        var newIndex = Math.min(ProtocolEngine.stage + 1, ProtocolEngine.protocol.stages.length - 1);\n\n        if (oldIndex === newIndex) {\n            return;\n        }\n\n        // Swap the stages in the current Protocol's display set sequence\n        // using our addition to the Array prototype\n        ProtocolEngine.protocol.stages = ProtocolEngine.protocol.stages.move(oldIndex, newIndex);\n\n        // If the currently displayed stage was reordered into a new position,\n        // update the value for the stage index in the displayed Protocol\n        ProtocolEngine.stage = newIndex;\n\n        // Update the Session variable to the UI re-renders\n        Session.set('LayoutManagerUpdated', Math.random());\n    }\n});\n","// Define an empty object to store callbacks that are used to retrieve custom attributes\n// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)\n// used in the LesionTracker application.\n//\n// Timepoint type can be obtained given a studyId, and this is done through a custom callback.\n// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')\n// and a callback function that is used to calculate them.\n//\n// The input to the callback, which is called during viewport-image matching rule evaluation\n// is the set of attributes that contains the specified attribute. In our example, timepointType is\n// linked to the study attributes, and so the inputs to the callback is an object containing\n// the study attributes.\nHP.CustomAttributeRetrievalCallbacks = {};\n\n/**\n * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a\n * callback that will be used to calculate the attribute value.\n *\n * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')\n * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')\n * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)\n */\nHP.addCustomAttribute = (attributeId, attributeName, callback) => {\n    HP.CustomAttributeRetrievalCallbacks[attributeId] = {\n        name: attributeName,\n        callback: callback\n    };\n};","// Define an empty object to store callbacks that are used to apply custom viewport settings\n// after a viewport is rendered.\nHP.CustomViewportSettings = {};\n\n/**\n * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport\n *\n * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')\n * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')\n * @param options\n * @param callback A function to be run after a viewport is rendered with a series\n */\nHP.addCustomViewportSetting = (settingId, settingName, options, callback) => {\n    HP.CustomViewportSettings[settingId] = {\n        id: settingId,\n        text: settingName,\n        options: options,\n        callback: callback\n    };\n};","// Sorts an array by score\nconst sortByScore = arr => {\n    arr.sort((a, b) => {\n        return b.score - a.score;\n    });\n};\n\nexport { sortByScore };","// OHIF Modules\nimport { Viewerbase } from 'meteor/ohif:viewerbase';\n\n// Local imports\nimport '../customAttributes';\n\n/**\n * Import Constants\n */\nconst { OHIFError, metadata: { StudySummary, InstanceMetadata } } = Viewerbase;\n\n/**\n * Match a Metadata instance against rules using Validate.js for validation.\n * @param  {StudySummary|InstanceMetadata} metadataInstance Metadata instance object\n * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match\n * @return {Object}      Matching Object with score and details (which rule passed or failed)\n */\nconst match = (metadataInstance, rules) => {\n\n    // Make sure the supplied data is valid.\n    if (!(metadataInstance instanceof StudySummary || metadataInstance instanceof InstanceMetadata)) {\n        throw new OHIFError('HPMatcher::match metadataInstance must be an instance of StudySummary or InstanceMetadata');\n    }\n\n    const options = {\n        format: 'grouped'\n    };\n\n    const details = {\n        passed: [],\n        failed: []\n    };\n\n    let requiredFailed = false;\n    let score = 0;\n\n    rules.forEach(rule => {\n        const attribute = rule.attribute;\n        let customAttributeExists = metadataInstance.customAttributeExists(attribute);\n\n        // If the metadataInstance we are testing (e.g. study, series, or instance MetadataInstance) do\n        // not contain the attribute specified in the rule, check whether or not they have been\n        // defined in the CustomAttributeRetrievalCallbacks Object.\n        if (!customAttributeExists && HP.CustomAttributeRetrievalCallbacks.hasOwnProperty(attribute)) {\n            const customAttribute = HP.CustomAttributeRetrievalCallbacks[attribute];\n            metadataInstance.setCustomAttribute(attribute, customAttribute.callback(metadataInstance));\n            customAttributeExists = true;\n        }\n\n        // Format the constraint as required by Validate.js\n        const testConstraint = {\n            [attribute]: rule.constraint\n        };\n\n        // Create a single attribute object to be validated, since metadataInstance is an \n        // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)\n        const attributeValue = customAttributeExists ? metadataInstance.getCustomAttribute(attribute) : metadataInstance.getTagValue(attribute);\n        const attributeMap = {\n            [attribute]: attributeValue\n        };\n\n        // Use Validate.js to evaluate the constraints on the specified metadataInstance\n        let errorMessages;\n        try {\n            errorMessages = validate(attributeMap, testConstraint, [options]);\n        } catch (e) {\n            errorMessages = [ 'Something went wrong during validation.', e ];\n        }\n\n        if (!errorMessages) {\n            // If no errorMessages were returned, then validation passed.\n\n            // Add the rule's weight to the total score\n            score += parseInt(rule.weight, 10);\n\n            // Log that this rule passed in the matching details object\n            details.passed.push({\n                rule\n            });\n        } else {\n            // If errorMessages were present, then validation failed\n\n            // If the rule that failed validation was Required, then\n            // mark that a required Rule has failed\n            if (rule.required) {\n                requiredFailed = true;\n            }\n\n            // Log that this rule failed in the matching details object\n            // and include any error messages\n            details.failed.push({\n                rule,\n                errorMessages\n            });\n        }\n    });\n\n    // If a required Rule has failed Validation, set the matching score to zero\n    if (requiredFailed) {\n        score = 0;\n    }\n\n    return {\n        score,\n        details\n    };\n};\n\nconst HPMatcher = {\n    match\n};\n\nexport { HPMatcher };"]}