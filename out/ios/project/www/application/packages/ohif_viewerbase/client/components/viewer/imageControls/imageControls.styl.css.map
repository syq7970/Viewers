)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/packages/ohif:viewerbase/client/components/viewer/imageControls/imageControls.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl"],"names":[],"mappings":"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","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@import \"{ohif:design}/app\"\n\n$imageSliderBorderRadius = 57px\n$imageSliderTrackColor = rgba(0,0,0,0)\n$imageSliderBorder = none\n\n// Note that these are backwards due to the magic needed to make a cross-browser vertical slider\n$imageSliderWidth = 12px\n$imageSliderHeight = 39px\n\n.imageControls\n  height: 100%\n  padding: 5px\n  position: absolute\n  right: 0\n  top: 0\n\n  .scrollbar\n    height: calc(100% - 20px)\n    margin-top: 5px\n    position: relative\n    width: 12px\n\n    .imageSlider\n      height: $imageSliderWidth\n      left: 12px\n      padding: 0\n      position: absolute\n      top: 0\n\n      vendorize(transform, rotate(90deg))\n      vendorize(transform-origin, top left)\n\n      -webkit-appearance: none\n      background-color: $imageSliderTrackColor\n\n      // Remove focus highlights on range input\n      &:focus\n        outline: none\n        vendorize(box-shadow, none)\n\n      // Remove focus border in Firefox\n      &::-moz-focus-outer\n        border: none\n\n      // --- Style the range track --- //\n      &::-webkit-slider-runnable-track\n        background-color: $imageSliderTrackColor\n        border: none\n        cursor: pointer\n        height: 5px\n        z-index: 6\n\n      &::-moz-range-track\n        background-color: $imageSliderTrackColor\n        border: none\n        cursor: pointer\n        height: 2px\n        z-index: 6\n\n      &::-ms-track\n        animate: 0.2s\n        background: transparent\n        border: none\n        border-width: 15px 0\n        color: $imageSliderTrackColor\n        cursor: pointer\n        height: $imageSliderWidth\n        width: 100%\n\n      // Hide any fill IE tries to add\n      &::-ms-fill-lower\n        background: $imageSliderTrackColor\n\n      &::-ms-fill-upper\n        background: $imageSliderTrackColor\n\n      // --- Style the range thumb --- //\n      &::-webkit-slider-thumb\n        -webkit-appearance: none !important\n        theme('background-color', '$imageSliderColor')\n        border: $imageSliderBorder\n        border-radius: $imageSliderBorderRadius\n        cursor: -webkit-grab\n        height: $imageSliderWidth\n        margin-top: -4px\n        width: $imageSliderHeight\n\n        &:active\n          theme('background-color', '$activeColor')\n          cursor: -webkit-grabbing\n\n      &::-moz-range-thumb\n        theme('background-color', '$imageSliderColor')\n        border: $imageSliderBorder\n        border-radius: $imageSliderBorderRadius\n        cursor: -moz-grab\n        height: $imageSliderWidth\n        width: $imageSliderHeight\n        z-index: 7\n\n        &:active\n          theme('background-color', '$activeColor')\n          cursor: -moz-grabbing\n\n      &::-ms-thumb\n        theme('background-color', '$imageSliderColor')\n        border: $imageSliderBorder\n        border-radius: $imageSliderBorderRadius\n        cursor: ns-resize\n        height: $imageSliderWidth\n        width: $imageSliderHeight\n\n        &:active\n          theme('background-color', '$activeColor')\n\n      &::-ms-tooltip\n        display: none\n\n// Set left position in IE, border-width attribute breaks left position of imageSlider\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none)\n  .imageSlider\n    left: 50px\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n"]}