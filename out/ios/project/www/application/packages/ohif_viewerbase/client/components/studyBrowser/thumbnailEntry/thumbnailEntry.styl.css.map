)]}'
{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:design/styles/imports/theme-icons.styl","meteor://ðŸ’»app/packages/ohif:viewerbase/client/components/studyBrowser/thumbnailEntry/thumbnailEntry.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/theming.styl","meteor://ðŸ’»app/packages/ohif:design/styles/imports/mixins.styl"],"names":[],"mappings":"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","sourcesContent":[".theme-icon-crickets\n.theme-icon-tide\n.theme-icon-tigerlily\n.theme-icon-quartz\n.theme-icon-overcast\n.theme-icon-mint\n.theme-icon-honeycomb\n  display: inline-block\n  background: url('/packages/ohif_design/assets/theme-icons.png') no-repeat\n  overflow: hidden\n  text-indent: -9999px\n  text-align: left\n\n.theme-icon-crickets\n  background-position: -0px -0px\n  width: 64px\n  height: 56px\n\n.theme-icon-tide\n  background-position: -0px -56px\n  width: 64px\n  height: 54px\n\n.theme-icon-tigerlily\n  background-position: -0px -110px\n  width: 62px\n  height: 61px\n\n.theme-icon-quartz\n  background-position: -0px -171px\n  width: 59px\n  height: 64px\n\n.theme-icon-overcast\n  background-position: -0px -235px\n  width: 58px\n  height: 37px\n\n.theme-icon-mint\n  background-position: -0px -272px\n  width: 57px\n  height: 61px\n\n.theme-icon-honeycomb\n  background-position: -0px -333px\n  width: 50px\n  height: 58px\n","@import \"{ohif:design}/app\"\n\n$seriesCountBackgroundColor = #678696\n\n.thumbnailEntry\n  cursor: pointer\n  display: table\n  margin: 0 auto\n\n  &.draggable\n    cursor: copy\n    cursor: -webkit-grab\n    cursor: -moz-grab\n\n  .seriesDetails\n    theme('color', '$textPrimaryColor')\n    font-size: 14px\n    line-height: 1.3em\n    margin-top: 5px\n    max-width: 217px\n    min-height: 36px\n    position: relative\n    word-wrap: break-word\n\n    &.info-only\n\n      .seriesDescription\n        display: none\n\n      .seriesInformation\n        display: flex\n        flex-grow: 1\n        float: none\n        max-width: none\n        padding-right: 0\n\n        .item\n          flex: 1\n          text-align: center\n\n          .icon, .value\n            display: inline\n            float: none\n            line-height: 25px\n\n          .value\n            margin-left: 0\n            width: auto\n\n  .seriesInformation\n    padding-right: 4px\n    max-width: 50px\n\n    .item-frames .icon\n      height: 18px\n\n    .value\n      theme('color', '$textSecondaryColor')\n      display: inline-block\n      float: right\n      font-size: 12px\n      margin-left: 4px\n      overflow: hidden\n      text-overflow: ellipsis\n      white-space: nowrap\n      width: calc(100% - 15px)\n\n    .icon\n      theme('color', '$activeColor')\n      display: inline-block\n      float: left\n      font-size: 10px\n      font-weight: 900\n      text-align: right\n      width: 11px\n\n      div\n        background-color: $seriesCountBackgroundColor\n        margin-top: 6px\n        position: relative\n\n        &:after\n          theme('background-color', '$activeColor')\n          box-shadow: 1px 1px rgba(0, 0, 0, .115)\n          left: -5px\n          position: absolute\n          top: -5px\n\n        &\n        &:after\n          theme('border', '1px solid $primaryBackgroundColor')\n          content: ''\n          display: inline-block\n          height: 11px\n          width: 11px\n","@require \"{ohif:themes}/themes\"\n\n/*\n * Process each theme variable in the given value, splitting it by space\n */\nparseSpaceVars($theme, $value, $alpha)\n    // Split values by space\n    $valueSplit = split(' ', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $property in $valueSplit\n        // Try to get the theme with current property key\n        $val = $theme[$property]\n        if ($val)\n            if($val is a 'color')\n                // Apply given alpha if it's a color\n                $val = alpha($val, $alpha)\n            // Push the processed theme variable to the list\n            push($list, $val)\n        else\n            // Push the property itself if not found in theme variables\n            push($list, $property)\n\n    // Merge the resulting processed list by joining values back with space\n    join(' ', $list)\n\n/*\n * Process each theme variable in the given value, splitting it by comma\n */\nparseCommaVars($theme, $value, $alpha)\n    // Split values by comma\n    $valueSplit = split(',', $value)\n\n    // Create an empty list\n    $list = ''\n    pop($list)\n\n    // Iterate over split values\n    for $sentence in $valueSplit\n        // Procces the values splitting by space\n        push($list, parseSpaceVars($theme, $sentence, $alpha))\n\n    // Merge the resulting processed list by joining values back with comma\n    unquote(join(',', $list))\n\n/*\n * Return a processed theme variable or color with alpha\n */\ntheme($property, $value, $alpha=1)\n\n    // Crete the selector for default theme\n    / {selector()}\n        {$property}: parseCommaVars($themes[$defaultTheme], $value, $alpha)\n\n    // Create the selector for each registered theme\n    for $themeName, $theme in $themes\n        for $selectorPiece in split(',', selector())\n            // prefix the selector with the body.theme-{themeName} selector\n            / body.theme-{$themeName} {$selectorPiece}\n                {$property}: parseCommaVars($theme, $value, $alpha)\n","/*\n    Basic mixin which vendorizes a propery. Usage:\n\n    vendorize(box-sizing, border-box)\n*/\nvendorize(property, value)\n  -webkit-{property} value\n  -moz-{property} value\n  -ms-{property} value\n  -o-{property} value\n  {property} value\n\nanimation(a)\n  vendorize(animation, a)\n\nborder-radius(r)\n  vendorize(border-radius, r)\n\nborder-top-left-radius(r)\n  vendorize(border-top-left-radius, r)\n\nborder-top-right-radius(r)\n  vendorize(border-top-right-radius, r)\n\nborder-bottom-left-radius(r)\n  vendorize(border-bottom-left-radius, r)\n\nborder-bottom-right-radius(r)\n  vendorize(border-bottom-right-radius, r)\n\nbox-shadow(s)\n  vendorize(box-shadow, s)\n\ntext-shadow(s)\n  vendorize(text-shadow, s)\n\ntransform(t)\n  vendorize(transform, t)\n\ntransform-origin(o)\n  vendorize(transform-origin, o)\n\ntransition(t)\n  vendorize(transition, t)\n\ntransition-delay(d)\n  vendorize(transition-delay, d)\n\nplaceholder-color(c)\n  &::-webkit-input-placeholder\n    color: c\n  &:-moz-placeholder\n    color: c\n  &::-moz-placeholder\n    color: c\n  &:-ms-input-placeholder\n    color: c\n"]}